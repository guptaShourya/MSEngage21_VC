{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/TextChat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ChatIcon from '@material-ui/icons/ChatTwoTone';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubbleTwoTone';\nimport TextField from '@material-ui/core/TextField';\nimport displayMessage from '../../utils/Message';\nimport { List } from '@material-ui/core';\nimport ChatItem from '../../ChatItem';\n\nvar _require = require('twilio-video'),\n    LocalDataTrack = _require.LocalDataTrack;\n\nvar drawerWidth = 0;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: 240,\n      marginRight: 0,\n      borderWidth: 'thick',\n      borderStyle: 'solid',\n      borderColor: 'aquamarine',\n      borderRadius: '10px',\n      height: '88%',\n      position: 'fixed'\n    },\n    drawerHeader: _objectSpread(_objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      marginRight: 0\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    }),\n    closeIcon: {\n      background: 'none',\n      border: 'none'\n    }\n  };\n});\n\nvar TextChat = function TextChat(_ref) {\n  _s();\n\n  var room = _ref.room,\n      messages = _ref.messages;\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1]; // text message\n\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  var dataTrack = new LocalDataTrack();\n\n  var handleClick = function handleClick() {\n    setIsOpen(!isOpen);\n  }; // publish data track for in - call text chat\n\n\n  room.localParticipant.publishTrack(dataTrack).catch(function () {});\n  var dataTrackPublished = {};\n  dataTrackPublished.promise = new Promise(function (resolve, reject) {\n    dataTrackPublished.resolve = resolve;\n    dataTrackPublished.reject = reject;\n  });\n  room.localParticipant.on('trackPublished', function (publication) {\n    if (publication.track === dataTrack) {\n      dataTrackPublished.resolve();\n    }\n  });\n  room.localParticipant.on('trackPublicationFailed', function (error, track) {\n    if (track === dataTrack) {\n      dataTrackPublished.reject(error);\n    }\n  });\n\n  function sendMessage(event) {\n    event.preventDefault(); // display message in chat area\n\n    displayMessage('You', message);\n    setMessage(''); // send message over to other participants\n\n    dataTrackPublished.promise.then(function () {\n      return dataTrack.send(JSON.stringify({\n        author: room.localParticipant.identity,\n        data: message\n      }));\n    });\n  }\n\n  var handleMessageChange = useCallback(function (event) {\n    setMessage(event.target.value);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbarDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      style: {\n        background: \"#21242c\",\n        border: \"#383b43\",\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        padding: \"0.45em\"\n      },\n      children: isOpen ? /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 19\n      }, _this) : /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 40\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      anchor: \"right\",\n      variant: \"persistent\",\n      open: isOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        style: {\n          marginRight: '0%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleClick,\n          children: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"In call messages\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: messages && messages.map(function (message) {\n            return /*#__PURE__*/_jsxDEV(ChatItem, {\n              message: message,\n              email: room.localParticipant.identity\n            }, message.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        style: {\n          display: 'inline-block',\n          position: 'fixed',\n          bottom: '4.6%',\n          width: '14.4em',\n          background: '#fff',\n          color: 'black',\n          borderRadius: '6px'\n        },\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"message\",\n          label: \"Send message to everyone\",\n          variant: \"outlined\",\n          value: message,\n          onChange: handleMessageChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TextChat, \"9NueJCyZtaOn7j+XnO1AwAQoi00=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = TextChat;\nexport default TextChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextChat\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/TextChat.js"],"names":["React","useCallback","useState","Drawer","IconButton","ChevronRightIcon","makeStyles","useTheme","ChatIcon","ChatBubbleIcon","TextField","displayMessage","List","ChatItem","require","LocalDataTrack","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","marginRight","borderWidth","borderStyle","borderColor","borderRadius","height","position","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","closeIcon","background","border","TextChat","room","messages","classes","isOpen","setIsOpen","message","setMessage","dataTrack","handleClick","localParticipant","publishTrack","catch","dataTrackPublished","promise","Promise","resolve","reject","on","publication","track","error","sendMessage","event","preventDefault","then","send","JSON","stringify","author","identity","data","handleMessageChange","target","value","paper","map","index","bottom","color"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport ChatIcon from '@material-ui/icons/ChatTwoTone';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubbleTwoTone';\nimport TextField from '@material-ui/core/TextField';\nimport displayMessage from '../../utils/Message';\nimport { List } from '@material-ui/core';\nimport ChatItem from '../../ChatItem';\nconst { LocalDataTrack } = require('twilio-video');\n\nconst drawerWidth = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n    marginRight: 0,\n    borderWidth: 'thick',\n    borderStyle: 'solid',\n    borderColor: 'aquamarine',\n    borderRadius: '10px',\n    height: '88%',\n    position: 'fixed'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    marginRight: 0,\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n\n  closeIcon: {\n    background: 'none',\n    border: 'none',\n  }\n\n}));\n\n\nconst TextChat = ({ room, messages }) => {\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [isOpen, setIsOpen] = useState(false);\n\n  // text message\n  const [message, setMessage] = useState('');\n\n  const dataTrack = new LocalDataTrack();\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n  }\n\n  // publish data track for in - call text chat\n  room.localParticipant.publishTrack(dataTrack).catch(() => { });\n\n  const dataTrackPublished = {};\n\n  dataTrackPublished.promise = new Promise((resolve, reject) => {\n    dataTrackPublished.resolve = resolve;\n    dataTrackPublished.reject = reject;\n  });\n\n  room.localParticipant.on('trackPublished', publication => {\n    if (publication.track === dataTrack) {\n      dataTrackPublished.resolve();\n    }\n  });\n\n  room.localParticipant.on('trackPublicationFailed', (error, track) => {\n    if (track === dataTrack) {\n      dataTrackPublished.reject(error);\n    }\n  });\n\n  function sendMessage(event) {\n    event.preventDefault();\n    // display message in chat area\n    displayMessage('You', message);\n    setMessage('');\n    // send message over to other participants\n    dataTrackPublished.promise.then(() => dataTrack.send(JSON.stringify({\n      author: room.localParticipant.identity,\n      data: message\n    })));\n  }\n\n  const handleMessageChange = useCallback((event) => {\n    setMessage(event.target.value);\n  }\n    , []);\n\n\n  return (\n    <div className='toolbarDiv'>\n      <button\n        onClick={handleClick}\n        style={{\n          background: \"#21242c\",\n          border: \"#383b43\",\n          borderStyle: \"solid\",\n          borderWidth: \"1px\",\n          padding: \"0.45em\"\n        }}\n      >\n        {isOpen ? <ChatBubbleIcon /> : <ChatIcon />}\n      </button>\n      <Drawer\n        className={classes.drawer}\n        anchor='right'\n        variant='persistent'\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader} style={{ marginRight: '0%' }}>\n          <IconButton onClick={handleClick}>\n            <ChevronRightIcon />\n          </IconButton>\n          <p>In call messages</p>\n        </div>\n        {/* <div id='text-area' style={{ textAlign: 'left', fontSize: '1rem' }}></div> */}\n        <div>\n        <List dense={true}>\n              {messages &&\n                messages.map((message) => (\n                  <ChatItem\n                    key={message.index}\n                    message={message}\n                    email={room.localParticipant.identity}\n                  />\n                ))}\n            </List>\n        </div>\n        <form onSubmit={sendMessage} style=\n          {{\n            display: 'inline-block', position: 'fixed', bottom: '4.6%',\n            width: '14.4em', background: '#fff', color: 'black', borderRadius: '6px'\n          }}>\n\n          <TextField id=\"message\" label=\"Send message to everyone\" variant='outlined'\n            value={message} onChange={handleMessageChange} required></TextField>\n\n        </form>\n      </Drawer>\n    </div>\n  );\n}\n\nexport default TextChat;"]},"metadata":{},"sourceType":"module"}