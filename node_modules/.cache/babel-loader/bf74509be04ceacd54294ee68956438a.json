{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/RoomHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CallEndIcon from '@material-ui/icons/CallEndTwoTone';\nimport VideocamIcon from '@material-ui/icons/VideocamTwoTone';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffTwoTone';\nimport MicIcon from '@material-ui/icons/MicTwoTone';\nimport MicOffIcon from '@material-ui/icons/MicOffTwoTone';\nimport GroupAddIcon from '@material-ui/icons/GroupAddTwoTone';\nimport DialogBox from './DialogBox';\n\nconst RoomHeader = ({\n  handleLogout,\n  room\n}) => {\n  _s();\n\n  // state variables - used to swtich microphone and camera on/off\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isMic = _useState2[0],\n        setIsMic = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isCamera = _useState4[0],\n        setIsCamera = _useState4[1]; // method to handle switch on/off\n\n\n  const switchOnOff = media => event => {\n    // for microphone\n    if (media === 'Mic') {\n      if (isMic) {\n        // to mute the mic\n        room.localParticipant.audioTracks.forEach(publication => {\n          publication.track.disable();\n        });\n      } else {\n        // to unmute the mic\n        room.localParticipant.audioTracks.forEach(publication => {\n          publication.track.enable();\n        });\n      } // toggle to current state\n\n\n      setIsMic(!isMic);\n    } else {\n      // for camera\n      if (isCamera) {\n        //to turn off videostream\n        room.localParticipant.videoTracks.forEach(publication => {\n          publication.track.disable();\n        });\n      } else {\n        // to turn on videostream\n        room.localParticipant.videoTracks.forEach(publication => {\n          publication.track.enable();\n        });\n      } // toggle to current state\n\n\n      setIsCamera(!isCamera);\n    }\n  };\n\n  const handleAddOthers = () => {\n    /*#__PURE__*/\n    _jsxDEV(DialogBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchOnOff(\"Cam\"),\n        children: isCamera ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: switchOnOff(\"Mic\"),\n        children: isMic ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 31\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          backgroundColor: \"#ff484e\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddOthers,\n        children: /*#__PURE__*/_jsxDEV(GroupAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RoomHeader, \"WilcwSbn0xqdrTLo3yuQ4+ggZdI=\");\n\n_c = RoomHeader;\nexport default RoomHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomHeader\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/RoomHeader.js"],"names":["React","useState","CallEndIcon","VideocamIcon","VideocamOffIcon","MicIcon","MicOffIcon","GroupAddIcon","DialogBox","RoomHeader","handleLogout","room","isMic","setIsMic","isCamera","setIsCamera","switchOnOff","media","event","localParticipant","audioTracks","forEach","publication","track","disable","enable","videoTracks","handleAddOthers","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport CallEndIcon from '@material-ui/icons/CallEndTwoTone';\nimport VideocamIcon from '@material-ui/icons/VideocamTwoTone';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffTwoTone';\nimport MicIcon from '@material-ui/icons/MicTwoTone';\nimport MicOffIcon from '@material-ui/icons/MicOffTwoTone';\nimport GroupAddIcon from '@material-ui/icons/GroupAddTwoTone';\nimport DialogBox from './DialogBox';\n\nconst RoomHeader = ({handleLogout, room}) => {\n\n    // state variables - used to swtich microphone and camera on/off\n    const [isMic, setIsMic] = useState(true);\n    const [isCamera, setIsCamera] = useState(true);\n\n    // method to handle switch on/off\n    const switchOnOff = (media) => (event) => {\n      // for microphone\n      if(media === 'Mic'){\n        if(isMic){ // to mute the mic\n          room.localParticipant.audioTracks.forEach(publication => {\n            publication.track.disable();\n          });        \n        }else{ // to unmute the mic\n          room.localParticipant.audioTracks.forEach(publication => {\n            publication.track.enable();\n          });\n        }\n        // toggle to current state\n        setIsMic(!isMic);\n      }else{\n        // for camera\n        if(isCamera){ //to turn off videostream\n          room.localParticipant.videoTracks.forEach(publication => {\n            publication.track.disable();\n          });\n        }else{ // to turn on videostream\n          room.localParticipant.videoTracks.forEach(publication => {\n            publication.track.enable();\n          });\n        }\n        // toggle to current state\n        setIsCamera(!isCamera);\n      }\n    }\n\n    const handleAddOthers = () => {\n      <DialogBox/>\n    }\n    return(\n      <div id = \"toolbar\">\n        {/* video camera icon */}\n        <div>\n          <button onClick = {switchOnOff(\"Cam\")}>\n          {isCamera?<VideocamIcon/>:<VideocamOffIcon/>}\n          </button>\n        </div>\n        {/* microphone icon */}\n        <div>\n          <button onClick = {switchOnOff(\"Mic\")}>\n            {isMic?<MicIcon/>:<MicOffIcon/>}\n          </button>\n        </div>\n        {/* End call icon */}\n        <div>\n          <button onClick = {handleLogout} style = {{backgroundColor:\"#ff484e\"}}>\n            <CallEndIcon/>\n          </button>\n        </div>\n        {/* Add others icon */}\n        <div>\n          <button onClick={handleAddOthers}>\n            <GroupAddIcon/>\n          </button>\n        </div>\n\n      </div>\n  );\n}\nexport default RoomHeader;"]},"metadata":{},"sourceType":"module"}