{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ImageFit = void 0;\n/**\n * ImageFit specifies the positioning of an image inside a viewport.\n */\n\nvar ImageFit;\n\n(function (ImageFit) {\n  /**\n   * Scale the image up or down to fill the viewport while preserving the aspect ratio.\n   * The image will be fully visible but will add empty space in the viewport if\n   * aspect ratios do not match.\n   */\n  ImageFit[\"Contain\"] = \"Contain\";\n  /**\n   * Scale the image to fill both height and width of the viewport while preserving\n   * the aspect ratio, but will crop the image if aspect ratios do not match.\n   */\n\n  ImageFit[\"Cover\"] = \"Cover\";\n  /**\n   * Stretches the image to fill the viewport regardless of aspect ratio.\n   */\n\n  ImageFit[\"Fill\"] = \"Fill\";\n  /**\n   * Ignore height and width and use the original size.\n   */\n\n  ImageFit[\"None\"] = \"None\";\n})(ImageFit = exports.ImageFit || (exports.ImageFit = {}));","map":{"version":3,"sources":["../lib/types.ts"],"names":[],"mappings":";;;;;;AA6BA;;AAEG;;AACH,IAAY,QAAZ;;AAAA,CAAA,UAAY,QAAZ,EAAoB;AAClB;;;;AAIG;AACH,EAAA,QAAA,CAAA,SAAA,CAAA,GAAA,SAAA;AAEA;;;AAGG;;AACH,EAAA,QAAA,CAAA,OAAA,CAAA,GAAA,OAAA;AAEA;;AAEG;;AACH,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AAEA;;AAEG;;AACH,EAAA,QAAA,CAAA,MAAA,CAAA,GAAA,MAAA;AACD,CAvBD,EAAY,QAAQ,GAAR,OAAA,CAAA,QAAA,KAAA,OAAA,CAAA,QAAA,GAAQ,EAAR,CAAZ","sourcesContent":["/**\n * @private\n */\n declare global {\n  interface Window {\n    chrome: any;\n    createTwilioTFLiteModule: () => Promise<any>;\n    createTwilioTFLiteSIMDModule: () => Promise<any>;\n    Twilio: Object & { VideoProcessors?: any };\n  }\n}\n\n/**\n * @private\n */\nexport interface Timing {\n  delay?: number;\n  end?: number;\n  start?: number;\n}\n\n/**\n * @private\n */\nexport interface Dimensions {\n  height: number;\n  width: number;\n}\n\n/**\n * ImageFit specifies the positioning of an image inside a viewport.\n */\nexport enum ImageFit {\n  /**\n   * Scale the image up or down to fill the viewport while preserving the aspect ratio.\n   * The image will be fully visible but will add empty space in the viewport if\n   * aspect ratios do not match.\n   */\n  Contain = 'Contain',\n\n  /**\n   * Scale the image to fill both height and width of the viewport while preserving\n   * the aspect ratio, but will crop the image if aspect ratios do not match.\n   */\n  Cover = 'Cover',\n\n  /**\n   * Stretches the image to fill the viewport regardless of aspect ratio.\n   */\n  Fill = 'Fill',\n\n  /**\n   * Ignore height and width and use the original size.\n   */\n  None = 'None'\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}