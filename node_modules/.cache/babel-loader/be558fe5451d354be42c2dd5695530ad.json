{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\n\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\n\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\n\nvar RecordingV2 = require('./recording');\n\nvar RoomSignaling = require('../room');\n\nvar RemoteParticipantV2 = require('./remoteparticipant');\n\nvar StatsReport = require('../../stats/statsreport');\n\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\n\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\n\nvar RenderHintsSignaling = require('./renderhintssignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    difference = _require.difference,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar MovingAverageDelta = require('../../util/movingaveragedelta');\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 10000;\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    var getTrackReceiver = function getTrackReceiver(id) {\n      return _this._getTrackReceiver(id);\n    };\n\n    var log = _this._log;\n    Object.defineProperties(_this, {\n      _disconnectedParticipantRevisions: {\n        value: new Map()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _dominantSpeakerSignaling: {\n        value: new options.DominantSpeakerSignaling(getTrackReceiver, {\n          log: log\n        })\n      },\n      _networkQualitySignaling: {\n        value: new options.NetworkQualitySignaling(getTrackReceiver, localParticipant.networkQualityConfiguration, {\n          log: log\n        })\n      },\n      _renderHintsSignaling: {\n        value: new RenderHintsSignaling(getTrackReceiver, {\n          log: log\n        })\n      },\n      _trackPrioritySignaling: {\n        value: new options.TrackPrioritySignaling(getTrackReceiver, {\n          log: log\n        })\n      },\n      _trackSwitchOffSignaling: {\n        value: new options.TrackSwitchOffSignaling(getTrackReceiver, {\n          log: log\n        })\n      },\n      _pendingSwitchOffStates: {\n        value: new Map()\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n\n    _this._initTrackSwitchOffSignaling();\n\n    _this._initDominantSpeakerSignaling();\n\n    _this._initNetworkQualityMonitorSignaling();\n\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n\n    return _this;\n  }\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers(); // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n\n\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n\n      if (didDisconnect) {\n        this._teardownNetworkQualityMonitor();\n\n        this._transport.disconnect();\n\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n      return didDisconnect;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n\n        return trackReceiver;\n      });\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getInitialTrackSwitchOffState',\n    value: function _getInitialTrackSwitchOffState(trackSid) {\n      var initiallySwitchedOff = this._pendingSwitchOffStates.get(trackSid) || false;\n\n      this._pendingSwitchOffStates.delete(trackSid);\n\n      if (initiallySwitchedOff) {\n        this._log.warn('[' + trackSid + '] was initially switched off! ');\n      }\n\n      return initiallySwitchedOff;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var _this3 = this;\n\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, function (trackSid) {\n          return _this3._getInitialTrackSwitchOffState(trackSid);\n        }, function (trackSid, priority) {\n          return _this3._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n        }, function (trackSid, hint) {\n          return _this3._renderHintsSignaling.setTrackHint(trackSid, hint);\n        }, function (trackSid) {\n          return _this3._renderHintsSignaling.clearTrackHint(trackSid);\n        });\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n\n            self._disconnectedParticipantRevisions.set(participant.sid, participant.revision);\n          }\n        });\n        this.connectParticipant(participant);\n      }\n\n      return participant;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this4 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this4._subscriptionFailures.delete(trackState.sid);\n\n            _this4._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this4._subscriptionFailures.has(trackState.sid)) {\n            _this4._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this4._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set(); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this4.localParticipant.sid) {\n          return;\n        } // NOTE(mmalavalli): If the incoming revision for a disconnected Participant is less than or\n        // equal to the revision when it was disconnected, then the state is old and can be ignored.\n        // Otherwise, the Participant was most likely disconnected in a Large Group Room when it\n        // stopped publishing media, and hence needs to be re-added.\n\n\n        var disconnectedParticipantRevision = _this4._disconnectedParticipantRevisions.get(participantState.sid);\n\n        if (disconnectedParticipantRevision && participantState.revision <= disconnectedParticipantRevision) {\n          return;\n        }\n\n        if (disconnectedParticipantRevision) {\n          _this4._disconnectedParticipantRevisions.delete(participantState.sid);\n        }\n\n        var participant = _this4._getOrCreateRemoteParticipant(participantState);\n\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this); // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n\n      /* eslint camelcase:0 */\n\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this4._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      [this._dominantSpeakerSignaling, this._networkQualitySignaling, this._trackPrioritySignaling, this._trackSwitchOffSignaling, this._renderHintsSignaling].forEach(function (mediaSignaling) {\n        var channel = mediaSignaling.channel;\n\n        if (!mediaSignaling.isSetup && roomState.media_signaling && roomState.media_signaling[channel] && roomState.media_signaling[channel].transport && roomState.media_signaling[channel].transport.type === 'data-channel') {\n          mediaSignaling.setup(roomState.media_signaling[channel].transport.label);\n        }\n      });\n      return this;\n    }\n  }, {\n    key: '_initTrackSwitchOffSignaling',\n    value: function _initTrackSwitchOffSignaling() {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        try {\n          _this5._log.debug('received trackSwitch: ', {\n            tracksOn: tracksOn,\n            tracksOff: tracksOff\n          });\n\n          var trackUpdates = new Map();\n          tracksOn.forEach(function (trackSid) {\n            return trackUpdates.set(trackSid, true);\n          });\n          tracksOff.forEach(function (trackSid) {\n            if (trackUpdates.get(trackSid)) {\n              // NOTE(mpatwardhan): This means that VIDEO-3762 has been reproduced.\n              _this5._log.warn(trackSid + ' is DUPLICATED in both tracksOff and tracksOn list');\n            }\n\n            trackUpdates.set(trackSid, false);\n          });\n\n          _this5.participants.forEach(function (participant) {\n            participant.tracks.forEach(function (track) {\n              var isOn = trackUpdates.get(track.sid);\n\n              if (typeof isOn !== 'undefined') {\n                track.setSwitchedOff(!isOn);\n                trackUpdates.delete(track.sid);\n              }\n            });\n          }); // NOTE(mpatwardhan): Cache any notification about the tracks that we do not yet know about.\n\n\n          trackUpdates.forEach(function (isOn, trackSid) {\n            return _this5._pendingSwitchOffStates.set(trackSid, !isOn);\n          });\n        } catch (ex) {\n          _this5._log.error('error processing track switch off:', ex);\n        }\n      });\n    }\n  }, {\n    key: '_initDominantSpeakerSignaling',\n    value: function _initDominantSpeakerSignaling() {\n      var _this6 = this;\n\n      this._dominantSpeakerSignaling.on('updated', function () {\n        return _this6.setDominantSpeaker(_this6._dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_initNetworkQualityMonitorSignaling',\n    value: function _initNetworkQualityMonitorSignaling() {\n      var _this7 = this;\n\n      this._networkQualitySignaling.on('ready', function () {\n        var networkQualityMonitor = new _this7._NetworkQualityMonitor(_this7._peerConnectionManager, _this7._networkQualitySignaling);\n        _this7._networkQualityMonitor = networkQualityMonitor;\n        networkQualityMonitor.on('updated', function () {\n          if (_this7.iceConnectionState === 'failed') {\n            return;\n          }\n\n          _this7.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n\n          _this7.participants.forEach(function (participant) {\n            var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n\n            if (levels) {\n              participant.setNetworkQualityLevel(levels.level, levels);\n            }\n          });\n        });\n        networkQualityMonitor.start();\n      });\n\n      this._networkQualitySignaling.on('teardown', function () {\n        return _this7._teardownNetworkQualityMonitor();\n      });\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n\n        this._networkQualityMonitor = null;\n      }\n    }\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this8 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this8, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this8, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this8, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this8, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, {\n      trackSid: trackSid\n    })].concat(trackStats) : trackStats;\n  }, []);\n}\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\n\n\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\n\n\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n\n      transport.removeListener('stateChanged', stateChanged);\n    }\n\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\n\n\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var movingAverageDeltas = new Map();\n  var oddPublishCount = false;\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      oddPublishCount = !oddPublishCount;\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add zeros to properties that do not exist.\n        var report = new StatsReport(id, response, true\n        /* prepareForInsights */\n        ); // NOTE(mmalavalli): Since A/V sync metrics are not part of the StatsReport class,\n        // we add them to the insights payload here.\n\n        transport.publishEvent('quality', 'stats-report', 'info', {\n          audioTrackStats: report.remoteAudioTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToRemoteTrackStats(trackStat, response.remoteAudioTrackStats[i], movingAverageDeltas);\n          }),\n          localAudioTrackStats: report.localAudioTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToLocalTrackStats(trackStat, response.localAudioTrackStats[i], movingAverageDeltas);\n          }),\n          localVideoTrackStats: report.localVideoTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToLocalTrackStats(trackStat, response.localVideoTrackStats[i], movingAverageDeltas);\n          }),\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToRemoteTrackStats(trackStat, response.remoteVideoTrackStats[i], movingAverageDeltas);\n          })\n        }); // NOTE(mmalavalli): Clean up entries for Tracks that are no longer published or subscribed to.\n\n        var keys = flatMap(['localAudioTrackStats', 'localVideoTrackStats', 'remoteAudioTrackStats', 'remoteVideoTrackStats'], function (prop) {\n          return report[prop].map(function (_ref5) {\n            var ssrc = _ref5.ssrc,\n                trackSid = _ref5.trackSid;\n            return trackSid + '+' + ssrc;\n          });\n        });\n        var movingAverageDeltaKeysToBeRemoved = difference(Array.from(movingAverageDeltas.keys()), keys);\n        movingAverageDeltaKeysToBeRemoved.forEach(function (key) {\n          return movingAverageDeltas.delete(key);\n        });\n\n        if (oddPublishCount) {\n          // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n          // payload are assigned default values until the Insights gateway\n          // accepts null values.\n          var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n          transport.publishEvent('quality', 'active-ice-candidate-pair', 'info', activeIceCandidatePair);\n        }\n      });\n    }, function () {// Do nothing.\n    });\n  }, intervalMs);\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n/**\n * NOTE(mmalavalli): Since A/V sync metrics are not part of the public StatsReport class, we add them\n * only for reporting purposes.\n * @private\n */\n\n\nfunction addAVSyncMetricsToLocalTrackStats(trackStats, trackResponse, movingAverageDeltas) {\n  var framesEncoded = trackResponse.framesEncoded,\n      packetsSent = trackResponse.packetsSent,\n      totalEncodeTime = trackResponse.totalEncodeTime,\n      totalPacketSendDelay = trackResponse.totalPacketSendDelay;\n  var augmentedTrackStats = Object.assign({}, trackStats);\n  var key = trackStats.trackSid + '+' + trackStats.ssrc;\n  var trackMovingAverageDeltas = movingAverageDeltas.get(key) || new Map();\n\n  if (typeof totalEncodeTime === 'number' && typeof framesEncoded === 'number') {\n    var trackAvgEncodeDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgEncodeDelay') || new MovingAverageDelta();\n    trackAvgEncodeDelayMovingAverageDelta.putSample(totalEncodeTime * 1000, framesEncoded);\n    augmentedTrackStats.avgEncodeDelay = trackAvgEncodeDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgEncodeDelay', trackAvgEncodeDelayMovingAverageDelta);\n  }\n\n  if (typeof totalPacketSendDelay === 'number' && typeof packetsSent === 'number') {\n    var trackAvgPacketSendDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgPacketSendDelay') || new MovingAverageDelta();\n    trackAvgPacketSendDelayMovingAverageDelta.putSample(totalPacketSendDelay * 1000, packetsSent);\n    augmentedTrackStats.avgPacketSendDelay = trackAvgPacketSendDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgPacketSendDelay', trackAvgPacketSendDelayMovingAverageDelta);\n  }\n\n  movingAverageDeltas.set(key, trackMovingAverageDeltas);\n  return augmentedTrackStats;\n}\n/**\n * NOTE(mmalavalli): Since A/V sync metrics are not part of the public StatsReport class, we add them\n * only for reporting purposes.\n * @private\n */\n\n\nfunction addAVSyncMetricsToRemoteTrackStats(trackStats, trackResponse, movingAverageDeltas) {\n  var estimatedPlayoutTimestamp = trackResponse.estimatedPlayoutTimestamp,\n      framesDecoded = trackResponse.framesDecoded,\n      jitterBufferDelay = trackResponse.jitterBufferDelay,\n      jitterBufferEmittedCount = trackResponse.jitterBufferEmittedCount,\n      totalDecodeTime = trackResponse.totalDecodeTime;\n  var augmentedTrackStats = Object.assign({}, trackStats);\n  var key = trackStats.trackSid + '+' + trackStats.ssrc;\n  var trackMovingAverageDeltas = movingAverageDeltas.get(key) || new Map();\n\n  if (typeof estimatedPlayoutTimestamp === 'number') {\n    augmentedTrackStats.estimatedPlayoutTimestamp = estimatedPlayoutTimestamp;\n  }\n\n  if (typeof framesDecoded === 'number' && typeof totalDecodeTime === 'number') {\n    var trackAvgDecodeDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgDecodeDelay') || new MovingAverageDelta();\n    trackAvgDecodeDelayMovingAverageDelta.putSample(totalDecodeTime * 1000, framesDecoded);\n    augmentedTrackStats.avgDecodeDelay = trackAvgDecodeDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgDecodeDelay', trackAvgDecodeDelayMovingAverageDelta);\n  }\n\n  if (typeof jitterBufferDelay === 'number' && typeof jitterBufferEmittedCount === 'number') {\n    var trackAvgJitterBufferDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgJitterBufferDelay') || new MovingAverageDelta();\n    trackAvgJitterBufferDelayMovingAverageDelta.putSample(jitterBufferDelay * 1000, jitterBufferEmittedCount);\n    augmentedTrackStats.avgJitterBufferDelay = trackAvgJitterBufferDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgJitterBufferDelay', trackAvgJitterBufferDelayMovingAverageDelta);\n  }\n\n  movingAverageDeltas.set(key, trackMovingAverageDeltas);\n  return augmentedTrackStats;\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio-video/es5/signaling/v2/room.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_get","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","parent","getPrototypeOf","getter","call","_classCallCheck","instance","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","DominantSpeakerSignaling","require","NetworkQualityMonitor","NetworkQualitySignaling","RecordingV2","RoomSignaling","RemoteParticipantV2","StatsReport","TrackPrioritySignaling","TrackSwitchOffSignaling","RenderHintsSignaling","_require","DEFAULT_SESSION_TIMEOUT_SEC","constants","createBandwidthProfilePayload","defer","difference","filterObject","flatMap","oncePerTick","MovingAverageDelta","_require2","createTwilioError","STATS_PUBLISH_INTERVAL_MS","RoomV2","_RoomSignaling","localParticipant","initialState","transport","peerConnectionManager","options","assign","session_timeout","RecordingSignaling","bandwidthProfile","sessionTimeout","statsPublishIntervalMs","setBandwidthProfile","setIceReconnectTimeout","_this","sid","name","getTrackReceiver","id","_getTrackReceiver","log","_log","_disconnectedParticipantRevisions","Map","_NetworkQualityMonitor","_lastBandwidthProfileRevision","bandwidthProfileRevision","_networkQualityMonitor","_networkQualityConfiguration","networkQualityConfiguration","_peerConnectionManager","_published","_publishedRevision","_RemoteParticipantV2","_subscribed","_subscribedRevision","_subscriptionFailures","_dominantSpeakerSignaling","_networkQualitySignaling","_renderHintsSignaling","_trackPrioritySignaling","_trackSwitchOffSignaling","_pendingSwitchOffStates","_transport","_trackReceiverDeferreds","mediaRegion","media_region","_initTrackSwitchOffSignaling","_initDominantSpeakerSignaling","_initNetworkQualityMonitorSignaling","handleLocalParticipantEvents","handlePeerConnectionEvents","handleTransportEvents","periodicallyPublishStats","_update","_deleteTrackReceiverDeferred","delete","_getOrCreateTrackReceiverDeferred","deferred","trackReceivers","getTrackReceivers","trackReceiver","find","readyState","resolve","set","_addTrackReceiver","_disconnect","error","didDisconnect","_teardownNetworkQualityMonitor","disconnect","close","tracks","forEach","track","publishFailed","Error","_this2","promise","then","_getInitialTrackSwitchOffState","trackSid","initiallySwitchedOff","warn","_getTrackSidsToTrackSignalings","trackSidsToTrackSignalings","participants","participant","from","_getOrCreateRemoteParticipant","participantState","_this3","priority","sendTrackPriorityUpdate","hint","setTrackHint","clearTrackHint","on","stateChanged","state","removeListener","revision","connectParticipant","_getState","getState","_maybeAddBandwidthProfile","update","_localParticipant","bandwidth_profile","_publishNewLocalParticipantState","publish","_publishPeerConnectionState","peerConnectionState","peer_connections","roomState","_this4","subscribed","trackState","has","subscribedTrackSids","Set","filter","map","trackId","participantsToKeep","disconnectedParticipantRevision","add","type","handleSubscriptions","recording","published","connect","identity","mediaSignaling","channel","isSetup","media_signaling","setup","label","_this5","tracksOff","tracksOn","debug","trackUpdates","isOn","setSwitchedOff","ex","_this6","setDominantSpeaker","loudestParticipantSid","_this7","networkQualityMonitor","iceConnectionState","setNetworkQualityLevel","level","levels","remoteLevels","start","stop","getStats","_this8","responses","_ref","_ref2","response","localAudioTrackStats","filterAndAddLocalTrackSids","localVideoTrackStats","remoteAudioTrackStats","filterAndAddRemoteTrackSids","remoteVideoTrackStats","connectionState","filterAndAddTrackSids","idToSid","trackStats","reduce","trackStat","concat","roomV2","localTrackStats","remoteTrackStats","entries","_ref3","_ref4","localParticipantUpdated","renegotiate","trackSenders","trackV2","trackTransceiver","setTrackSenders","signalingConnectionState","reconnecting","onDescription","description","dequeue","onCandidates","candidates","bind","emit","networkQualityLevel","intervalMs","movingAverageDeltas","oddPublishCount","interval","setInterval","stats","report","publishEvent","audioTrackStats","addAVSyncMetricsToRemoteTrackStats","addAVSyncMetricsToLocalTrackStats","peerConnectionId","videoTrackStats","keys","prop","_ref5","ssrc","movingAverageDeltaKeysToBeRemoved","activeIceCandidatePair","replaceNullsWithDefaults","onStateChanged","clearInterval","room","trackSignaling","subscribeFailed","code","message","isSubscribed","setTrackTransceiver","trackResponse","framesEncoded","packetsSent","totalEncodeTime","totalPacketSendDelay","augmentedTrackStats","trackMovingAverageDeltas","trackAvgEncodeDelayMovingAverageDelta","putSample","avgEncodeDelay","trackAvgPacketSendDelayMovingAverageDelta","avgPacketSendDelay","estimatedPlayoutTimestamp","framesDecoded","jitterBufferDelay","jitterBufferEmittedCount","totalDecodeTime","trackAvgDecodeDelayMovingAverageDelta","avgDecodeDelay","trackAvgJitterBufferDelayMovingAverageDelta","avgJitterBufferDelay","availableIncomingBitrate","availableOutgoingBitrate","bytesReceived","bytesSent","consentRequestsSent","currentRoundTripTime","lastPacketReceivedTimestamp","lastPacketSentTimestamp","nominated","readable","requestsReceived","requestsSent","responsesReceived","responsesSent","retransmissionsReceived","retransmissionsSent","totalRoundTripTime","transportId","localCandidate","candidateType","deleted","ip","port","protocol","url","remoteCandidate","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DominantSpeakerSignaling = require('./dominantspeakersignaling');\nvar NetworkQualityMonitor = require('./networkqualitymonitor');\nvar NetworkQualitySignaling = require('./networkqualitysignaling');\nvar RecordingV2 = require('./recording');\nvar RoomSignaling = require('../room');\nvar RemoteParticipantV2 = require('./remoteparticipant');\nvar StatsReport = require('../../stats/statsreport');\nvar TrackPrioritySignaling = require('./trackprioritysignaling');\nvar TrackSwitchOffSignaling = require('./trackswitchoffsignaling');\nvar RenderHintsSignaling = require('./renderhintssignaling');\n\nvar _require = require('../../util'),\n    DEFAULT_SESSION_TIMEOUT_SEC = _require.constants.DEFAULT_SESSION_TIMEOUT_SEC,\n    createBandwidthProfilePayload = _require.createBandwidthProfilePayload,\n    defer = _require.defer,\n    difference = _require.difference,\n    filterObject = _require.filterObject,\n    flatMap = _require.flatMap,\n    oncePerTick = _require.oncePerTick;\n\nvar MovingAverageDelta = require('../../util/movingaveragedelta');\n\nvar _require2 = require('../../util/twilio-video-errors'),\n    createTwilioError = _require2.createTwilioError;\n\nvar STATS_PUBLISH_INTERVAL_MS = 10000;\n\n/**\n * @extends RoomSignaling\n */\n\nvar RoomV2 = function (_RoomSignaling) {\n  _inherits(RoomV2, _RoomSignaling);\n\n  function RoomV2(localParticipant, initialState, transport, peerConnectionManager, options) {\n    _classCallCheck(this, RoomV2);\n\n    initialState.options = Object.assign({\n      session_timeout: DEFAULT_SESSION_TIMEOUT_SEC\n    }, initialState.options);\n\n    options = Object.assign({\n      DominantSpeakerSignaling: DominantSpeakerSignaling,\n      NetworkQualityMonitor: NetworkQualityMonitor,\n      NetworkQualitySignaling: NetworkQualitySignaling,\n      RecordingSignaling: RecordingV2,\n      RemoteParticipantV2: RemoteParticipantV2,\n      TrackPrioritySignaling: TrackPrioritySignaling,\n      TrackSwitchOffSignaling: TrackSwitchOffSignaling,\n      bandwidthProfile: null,\n      sessionTimeout: initialState.options.session_timeout * 1000,\n      statsPublishIntervalMs: STATS_PUBLISH_INTERVAL_MS\n    }, options);\n\n    localParticipant.setBandwidthProfile(options.bandwidthProfile);\n    peerConnectionManager.setIceReconnectTimeout(options.sessionTimeout);\n\n    var _this = _possibleConstructorReturn(this, (RoomV2.__proto__ || Object.getPrototypeOf(RoomV2)).call(this, localParticipant, initialState.sid, initialState.name, options));\n\n    var getTrackReceiver = function getTrackReceiver(id) {\n      return _this._getTrackReceiver(id);\n    };\n    var log = _this._log;\n\n    Object.defineProperties(_this, {\n      _disconnectedParticipantRevisions: {\n        value: new Map()\n      },\n      _NetworkQualityMonitor: {\n        value: options.NetworkQualityMonitor\n      },\n      _lastBandwidthProfileRevision: {\n        value: localParticipant.bandwidthProfileRevision,\n        writable: true\n      },\n      _networkQualityMonitor: {\n        value: null,\n        writable: true\n      },\n      _networkQualityConfiguration: {\n        value: localParticipant.networkQualityConfiguration\n      },\n      _peerConnectionManager: {\n        value: peerConnectionManager\n      },\n      _published: {\n        value: new Map()\n      },\n      _publishedRevision: {\n        value: 0,\n        writable: true\n      },\n      _RemoteParticipantV2: {\n        value: options.RemoteParticipantV2\n      },\n      _subscribed: {\n        value: new Map()\n      },\n      _subscribedRevision: {\n        value: 0,\n        writable: true\n      },\n      _subscriptionFailures: {\n        value: new Map()\n      },\n      _dominantSpeakerSignaling: {\n        value: new options.DominantSpeakerSignaling(getTrackReceiver, { log: log })\n      },\n      _networkQualitySignaling: {\n        value: new options.NetworkQualitySignaling(getTrackReceiver, localParticipant.networkQualityConfiguration, { log: log })\n      },\n      _renderHintsSignaling: {\n        value: new RenderHintsSignaling(getTrackReceiver, { log: log })\n      },\n      _trackPrioritySignaling: {\n        value: new options.TrackPrioritySignaling(getTrackReceiver, { log: log })\n      },\n      _trackSwitchOffSignaling: {\n        value: new options.TrackSwitchOffSignaling(getTrackReceiver, { log: log })\n      },\n      _pendingSwitchOffStates: {\n        value: new Map()\n      },\n      _transport: {\n        value: transport\n      },\n      _trackReceiverDeferreds: {\n        value: new Map()\n      },\n      mediaRegion: {\n        enumerable: true,\n        value: initialState.options.media_region || null\n      }\n    });\n\n    _this._initTrackSwitchOffSignaling();\n    _this._initDominantSpeakerSignaling();\n    _this._initNetworkQualityMonitorSignaling();\n\n    handleLocalParticipantEvents(_this, localParticipant);\n    handlePeerConnectionEvents(_this, peerConnectionManager);\n    handleTransportEvents(_this, transport);\n    periodicallyPublishStats(_this, transport, options.statsPublishIntervalMs);\n\n    _this._update(initialState);\n    return _this;\n  }\n\n  /**\n   * The PeerConnection state.\n   * @property {RTCPeerConnectionState}\n   */\n\n\n  _createClass(RoomV2, [{\n    key: '_deleteTrackReceiverDeferred',\n\n\n    /**\n     * @private\n     */\n    value: function _deleteTrackReceiverDeferred(id) {\n      return this._trackReceiverDeferreds.delete(id);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateTrackReceiverDeferred',\n    value: function _getOrCreateTrackReceiverDeferred(id) {\n      var deferred = this._trackReceiverDeferreds.get(id) || defer();\n      var trackReceivers = this._peerConnectionManager.getTrackReceivers();\n\n      // NOTE(mmalavalli): In Firefox, there can be instances where a MediaStreamTrack\n      // for the given Track ID already exists, for example, when a Track is removed\n      // and added back. If that is the case, then we should resolve 'deferred'.\n      var trackReceiver = trackReceivers.find(function (trackReceiver) {\n        return trackReceiver.id === id && trackReceiver.readyState !== 'ended';\n      });\n\n      if (trackReceiver) {\n        deferred.resolve(trackReceiver);\n      } else {\n        // NOTE(mmalavalli): Only add the 'deferred' to the map if it's not\n        // resolved. This will prevent old copies of the MediaStreamTrack from\n        // being used when the remote peer removes and re-adds a MediaStreamTrack.\n        this._trackReceiverDeferreds.set(id, deferred);\n      }\n\n      return deferred;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_addTrackReceiver',\n    value: function _addTrackReceiver(trackReceiver) {\n      var deferred = this._getOrCreateTrackReceiverDeferred(trackReceiver.id);\n      deferred.resolve(trackReceiver);\n      return this;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_disconnect',\n    value: function _disconnect(error) {\n      var didDisconnect = _get(RoomV2.prototype.__proto__ || Object.getPrototypeOf(RoomV2.prototype), '_disconnect', this).call(this, error);\n      if (didDisconnect) {\n        this._teardownNetworkQualityMonitor();\n        this._transport.disconnect();\n        this._peerConnectionManager.close();\n      }\n\n      this.localParticipant.tracks.forEach(function (track) {\n        track.publishFailed(error || new Error('LocalParticipant disconnected'));\n      });\n\n      return didDisconnect;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackReceiver',\n    value: function _getTrackReceiver(id) {\n      var _this2 = this;\n\n      return this._getOrCreateTrackReceiverDeferred(id).promise.then(function (trackReceiver) {\n        _this2._deleteTrackReceiverDeferred(id);\n        return trackReceiver;\n      });\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getInitialTrackSwitchOffState',\n    value: function _getInitialTrackSwitchOffState(trackSid) {\n      var initiallySwitchedOff = this._pendingSwitchOffStates.get(trackSid) || false;\n      this._pendingSwitchOffStates.delete(trackSid);\n      if (initiallySwitchedOff) {\n        this._log.warn('[' + trackSid + '] was initially switched off! ');\n      }\n      return initiallySwitchedOff;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getTrackSidsToTrackSignalings',\n    value: function _getTrackSidsToTrackSignalings() {\n      var trackSidsToTrackSignalings = flatMap(this.participants, function (participant) {\n        return Array.from(participant.tracks);\n      });\n      return new Map(trackSidsToTrackSignalings);\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getOrCreateRemoteParticipant',\n    value: function _getOrCreateRemoteParticipant(participantState) {\n      var _this3 = this;\n\n      var RemoteParticipantV2 = this._RemoteParticipantV2;\n      var participant = this.participants.get(participantState.sid);\n      var self = this;\n      if (!participant) {\n        participant = new RemoteParticipantV2(participantState, function (trackSid) {\n          return _this3._getInitialTrackSwitchOffState(trackSid);\n        }, function (trackSid, priority) {\n          return _this3._trackPrioritySignaling.sendTrackPriorityUpdate(trackSid, 'subscribe', priority);\n        }, function (trackSid, hint) {\n          return _this3._renderHintsSignaling.setTrackHint(trackSid, hint);\n        }, function (trackSid) {\n          return _this3._renderHintsSignaling.clearTrackHint(trackSid);\n        });\n        participant.on('stateChanged', function stateChanged(state) {\n          if (state === 'disconnected') {\n            participant.removeListener('stateChanged', stateChanged);\n            self.participants.delete(participant.sid);\n            self._disconnectedParticipantRevisions.set(participant.sid, participant.revision);\n          }\n        });\n        this.connectParticipant(participant);\n      }\n      return participant;\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_getState',\n    value: function _getState() {\n      return {\n        participant: this.localParticipant.getState()\n      };\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_maybeAddBandwidthProfile',\n    value: function _maybeAddBandwidthProfile(update) {\n      var _localParticipant = this.localParticipant,\n          bandwidthProfile = _localParticipant.bandwidthProfile,\n          bandwidthProfileRevision = _localParticipant.bandwidthProfileRevision;\n\n      if (bandwidthProfile && this._lastBandwidthProfileRevision < bandwidthProfileRevision) {\n        this._lastBandwidthProfileRevision = bandwidthProfileRevision;\n        return Object.assign({\n          bandwidth_profile: createBandwidthProfilePayload(bandwidthProfile)\n        }, update);\n      }\n      return update;\n    }\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishNewLocalParticipantState',\n    value: function _publishNewLocalParticipantState() {\n      this._transport.publish(this._maybeAddBandwidthProfile(this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_publishPeerConnectionState',\n    value: function _publishPeerConnectionState(peerConnectionState) {\n      /* eslint camelcase:0 */\n      this._transport.publish(Object.assign({\n        peer_connections: [peerConnectionState]\n      }, this._getState()));\n    }\n\n    /**\n     * @private\n     */\n\n  }, {\n    key: '_update',\n    value: function _update(roomState) {\n      var _this4 = this;\n\n      if (roomState.subscribed && roomState.subscribed.revision > this._subscribedRevision) {\n        this._subscribedRevision = roomState.subscribed.revision;\n        roomState.subscribed.tracks.forEach(function (trackState) {\n          if (trackState.id) {\n            _this4._subscriptionFailures.delete(trackState.sid);\n            _this4._subscribed.set(trackState.sid, trackState.id);\n          } else if (trackState.error && !_this4._subscriptionFailures.has(trackState.sid)) {\n            _this4._subscriptionFailures.set(trackState.sid, trackState.error);\n          }\n        });\n\n        var subscribedTrackSids = new Set(roomState.subscribed.tracks.filter(function (trackState) {\n          return !!trackState.id;\n        }).map(function (trackState) {\n          return trackState.sid;\n        }));\n\n        this._subscribed.forEach(function (trackId, trackSid) {\n          if (!subscribedTrackSids.has(trackSid)) {\n            _this4._subscribed.delete(trackSid);\n          }\n        });\n      }\n\n      var participantsToKeep = new Set();\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      (roomState.participants || []).forEach(function (participantState) {\n        if (participantState.sid === _this4.localParticipant.sid) {\n          return;\n        }\n\n        // NOTE(mmalavalli): If the incoming revision for a disconnected Participant is less than or\n        // equal to the revision when it was disconnected, then the state is old and can be ignored.\n        // Otherwise, the Participant was most likely disconnected in a Large Group Room when it\n        // stopped publishing media, and hence needs to be re-added.\n        var disconnectedParticipantRevision = _this4._disconnectedParticipantRevisions.get(participantState.sid);\n        if (disconnectedParticipantRevision && participantState.revision <= disconnectedParticipantRevision) {\n          return;\n        }\n\n        if (disconnectedParticipantRevision) {\n          _this4._disconnectedParticipantRevisions.delete(participantState.sid);\n        }\n        var participant = _this4._getOrCreateRemoteParticipant(participantState);\n        participant.update(participantState);\n        participantsToKeep.add(participant);\n      });\n\n      if (roomState.type === 'synced') {\n        this.participants.forEach(function (participant) {\n          if (!participantsToKeep.has(participant)) {\n            participant.disconnect();\n          }\n        });\n      }\n\n      handleSubscriptions(this);\n\n      // eslint-disable-next-line no-warning-comments\n      // TODO(mroberts): Remove me once the Server is fixed.\n      /* eslint camelcase:0 */\n      if (roomState.peer_connections) {\n        this._peerConnectionManager.update(roomState.peer_connections, roomState.type === 'synced');\n      }\n\n      if (roomState.recording) {\n        this.recording.update(roomState.recording);\n      }\n\n      if (roomState.published && roomState.published.revision > this._publishedRevision) {\n        this._publishedRevision = roomState.published.revision;\n        roomState.published.tracks.forEach(function (track) {\n          if (track.sid) {\n            _this4._published.set(track.id, track.sid);\n          }\n        });\n        this.localParticipant.update(roomState.published);\n      }\n\n      if (roomState.participant) {\n        this.localParticipant.connect(roomState.participant.sid, roomState.participant.identity);\n      }\n\n      [this._dominantSpeakerSignaling, this._networkQualitySignaling, this._trackPrioritySignaling, this._trackSwitchOffSignaling, this._renderHintsSignaling].forEach(function (mediaSignaling) {\n        var channel = mediaSignaling.channel;\n        if (!mediaSignaling.isSetup && roomState.media_signaling && roomState.media_signaling[channel] && roomState.media_signaling[channel].transport && roomState.media_signaling[channel].transport.type === 'data-channel') {\n          mediaSignaling.setup(roomState.media_signaling[channel].transport.label);\n        }\n      });\n\n      return this;\n    }\n  }, {\n    key: '_initTrackSwitchOffSignaling',\n    value: function _initTrackSwitchOffSignaling() {\n      var _this5 = this;\n\n      this._trackSwitchOffSignaling.on('updated', function (tracksOff, tracksOn) {\n        try {\n          _this5._log.debug('received trackSwitch: ', { tracksOn: tracksOn, tracksOff: tracksOff });\n          var trackUpdates = new Map();\n          tracksOn.forEach(function (trackSid) {\n            return trackUpdates.set(trackSid, true);\n          });\n          tracksOff.forEach(function (trackSid) {\n            if (trackUpdates.get(trackSid)) {\n              // NOTE(mpatwardhan): This means that VIDEO-3762 has been reproduced.\n              _this5._log.warn(trackSid + ' is DUPLICATED in both tracksOff and tracksOn list');\n            }\n            trackUpdates.set(trackSid, false);\n          });\n          _this5.participants.forEach(function (participant) {\n            participant.tracks.forEach(function (track) {\n              var isOn = trackUpdates.get(track.sid);\n              if (typeof isOn !== 'undefined') {\n                track.setSwitchedOff(!isOn);\n                trackUpdates.delete(track.sid);\n              }\n            });\n          });\n          // NOTE(mpatwardhan): Cache any notification about the tracks that we do not yet know about.\n          trackUpdates.forEach(function (isOn, trackSid) {\n            return _this5._pendingSwitchOffStates.set(trackSid, !isOn);\n          });\n        } catch (ex) {\n          _this5._log.error('error processing track switch off:', ex);\n        }\n      });\n    }\n  }, {\n    key: '_initDominantSpeakerSignaling',\n    value: function _initDominantSpeakerSignaling() {\n      var _this6 = this;\n\n      this._dominantSpeakerSignaling.on('updated', function () {\n        return _this6.setDominantSpeaker(_this6._dominantSpeakerSignaling.loudestParticipantSid);\n      });\n    }\n  }, {\n    key: '_initNetworkQualityMonitorSignaling',\n    value: function _initNetworkQualityMonitorSignaling() {\n      var _this7 = this;\n\n      this._networkQualitySignaling.on('ready', function () {\n        var networkQualityMonitor = new _this7._NetworkQualityMonitor(_this7._peerConnectionManager, _this7._networkQualitySignaling);\n        _this7._networkQualityMonitor = networkQualityMonitor;\n        networkQualityMonitor.on('updated', function () {\n          if (_this7.iceConnectionState === 'failed') {\n            return;\n          }\n          _this7.localParticipant.setNetworkQualityLevel(networkQualityMonitor.level, networkQualityMonitor.levels);\n          _this7.participants.forEach(function (participant) {\n            var levels = networkQualityMonitor.remoteLevels.get(participant.sid);\n            if (levels) {\n              participant.setNetworkQualityLevel(levels.level, levels);\n            }\n          });\n        });\n        networkQualityMonitor.start();\n      });\n      this._networkQualitySignaling.on('teardown', function () {\n        return _this7._teardownNetworkQualityMonitor();\n      });\n    }\n  }, {\n    key: '_teardownNetworkQualityMonitor',\n    value: function _teardownNetworkQualityMonitor() {\n      if (this._networkQualityMonitor) {\n        this._networkQualityMonitor.stop();\n        this._networkQualityMonitor = null;\n      }\n    }\n\n    /**\n     * Get the {@link RoomV2}'s media statistics.\n     * @returns {Promise.<Map<PeerConnectionV2#id, StandardizedStatsResponse>>}\n     */\n\n  }, {\n    key: 'getStats',\n    value: function getStats() {\n      var _this8 = this;\n\n      return this._peerConnectionManager.getStats().then(function (responses) {\n        return new Map(Array.from(responses).map(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              id = _ref2[0],\n              response = _ref2[1];\n\n          return [id, Object.assign({}, response, {\n            localAudioTrackStats: filterAndAddLocalTrackSids(_this8, response.localAudioTrackStats),\n            localVideoTrackStats: filterAndAddLocalTrackSids(_this8, response.localVideoTrackStats),\n            remoteAudioTrackStats: filterAndAddRemoteTrackSids(_this8, response.remoteAudioTrackStats),\n            remoteVideoTrackStats: filterAndAddRemoteTrackSids(_this8, response.remoteVideoTrackStats)\n          })];\n        }));\n      });\n    }\n  }, {\n    key: 'connectionState',\n    get: function get() {\n      return this._peerConnectionManager.connectionState;\n    }\n\n    /**\n     * The Signaling Connection State.\n     * @property {string} - \"connected\", \"reconnecting\", \"disconnected\"\n     */\n\n  }, {\n    key: 'signalingConnectionState',\n    get: function get() {\n      return this._transport.state === 'syncing' ? 'reconnecting' : this._transport.state;\n    }\n\n    /**\n     * The Ice Connection State.\n     * @property {RTCIceConnectionState}\n     */\n\n  }, {\n    key: 'iceConnectionState',\n    get: function get() {\n      return this._peerConnectionManager.iceConnectionState;\n    }\n  }]);\n\n  return RoomV2;\n}(RoomSignaling);\n\n/**\n * Filter out {@link TrackStats} that aren't in the collection while also\n * stamping their Track SIDs.\n * @param {Map<ID, SID>} idToSid\n * @param {Array<TrackStats>} trackStats\n * @returns {Array<TrackStats>}\n */\n\n\nfunction filterAndAddTrackSids(idToSid, trackStats) {\n  return trackStats.reduce(function (trackStats, trackStat) {\n    var trackSid = idToSid.get(trackStat.trackId);\n    return trackSid ? [Object.assign({}, trackStat, { trackSid: trackSid })].concat(trackStats) : trackStats;\n  }, []);\n}\n\n/**\n * Filter out {@link LocalTrackStats} that aren't currently published while also\n * stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<LocalTrackStats>} localTrackStats\n * @returns {Array<LocalTrackStats>}\n */\nfunction filterAndAddLocalTrackSids(roomV2, localTrackStats) {\n  return filterAndAddTrackSids(roomV2._published, localTrackStats);\n}\n\n/**\n * Filter out {@link RemoteTrackStats} that aren't currently subscribed while\n * also stamping their Track SIDs.\n * @param {RoomV2} roomV2\n * @param {Array<RemoteTrackStats>} remoteTrackStats\n * @returns {Array<RemoteTrackStats>}\n */\nfunction filterAndAddRemoteTrackSids(roomV2, remoteTrackStats) {\n  var idToSid = new Map(Array.from(roomV2._subscribed.entries()).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        sid = _ref4[0],\n        id = _ref4[1];\n\n    return [id, sid];\n  }));\n  return filterAndAddTrackSids(idToSid, remoteTrackStats);\n}\n\n/**\n * @typedef {object} RoomV2#Representation\n * @property {string} name\n * @property {LocalParticipantV2#Representation} participant\n * @property {?Array<RemoteParticipantV2#Representation>} participants\n * @property {?Array<PeerConnectionV2#Representation>} peer_connections\n * @property {?RecordingV2#Representation} recording\n * @property {string} sid\n */\n\nfunction handleLocalParticipantEvents(roomV2, localParticipant) {\n  var localParticipantUpdated = oncePerTick(function () {\n    roomV2._publishNewLocalParticipantState();\n  });\n\n  var renegotiate = oncePerTick(function () {\n    var trackSenders = flatMap(localParticipant.tracks, function (trackV2) {\n      return trackV2.trackTransceiver;\n    });\n    roomV2._peerConnectionManager.setTrackSenders(trackSenders);\n  });\n\n  localParticipant.on('trackAdded', renegotiate);\n  localParticipant.on('trackRemoved', renegotiate);\n  localParticipant.on('updated', localParticipantUpdated);\n\n  roomV2.on('stateChanged', function stateChanged(state) {\n    if (state === 'disconnected') {\n      localParticipant.removeListener('trackAdded', renegotiate);\n      localParticipant.removeListener('trackRemoved', renegotiate);\n      localParticipant.removeListener('updated', localParticipantUpdated);\n      roomV2.removeListener('stateChanged', stateChanged);\n      localParticipant.disconnect();\n    }\n  });\n\n  roomV2.on('signalingConnectionStateChanged', function () {\n    var localParticipant = roomV2.localParticipant,\n        signalingConnectionState = roomV2.signalingConnectionState;\n    var identity = localParticipant.identity,\n        sid = localParticipant.sid;\n\n    switch (signalingConnectionState) {\n      case 'connected':\n        localParticipant.connect(sid, identity);\n        break;\n      case 'reconnecting':\n        localParticipant.reconnecting();\n        break;\n    }\n  });\n}\n\nfunction handlePeerConnectionEvents(roomV2, peerConnectionManager) {\n  peerConnectionManager.on('description', function onDescription(description) {\n    roomV2._publishPeerConnectionState(description);\n  });\n  peerConnectionManager.dequeue('description');\n\n  peerConnectionManager.on('candidates', function onCandidates(candidates) {\n    roomV2._publishPeerConnectionState(candidates);\n  });\n  peerConnectionManager.dequeue('candidates');\n\n  peerConnectionManager.on('trackAdded', roomV2._addTrackReceiver.bind(roomV2));\n  peerConnectionManager.dequeue('trackAdded');\n  peerConnectionManager.getTrackReceivers().forEach(roomV2._addTrackReceiver, roomV2);\n\n  peerConnectionManager.on('connectionStateChanged', function () {\n    roomV2.emit('connectionStateChanged');\n  });\n\n  peerConnectionManager.on('iceConnectionStateChanged', function () {\n    roomV2.emit('iceConnectionStateChanged');\n    if (roomV2.iceConnectionState === 'failed') {\n      if (roomV2.localParticipant.networkQualityLevel !== null) {\n        roomV2.localParticipant.setNetworkQualityLevel(0);\n      }\n      roomV2.participants.forEach(function (participant) {\n        if (participant.networkQualityLevel !== null) {\n          participant.setNetworkQualityLevel(0);\n        }\n      });\n    }\n  });\n}\n\nfunction handleTransportEvents(roomV2, transport) {\n  transport.on('message', roomV2._update.bind(roomV2));\n  transport.on('stateChanged', function stateChanged(state, error) {\n    if (state === 'disconnected') {\n      if (roomV2.state !== 'disconnected') {\n        roomV2._disconnect(error);\n      }\n      transport.removeListener('stateChanged', stateChanged);\n    }\n    roomV2.emit('signalingConnectionStateChanged');\n  });\n}\n\n/**\n * Periodically publish {@link StatsReport}s.\n * @private\n * @param {RoomV2} roomV2\n * @param {Transport} transport\n * @param {Number} intervalMs\n */\nfunction periodicallyPublishStats(roomV2, transport, intervalMs) {\n  var movingAverageDeltas = new Map();\n  var oddPublishCount = false;\n  var interval = setInterval(function () {\n    roomV2.getStats().then(function (stats) {\n      oddPublishCount = !oddPublishCount;\n      stats.forEach(function (response, id) {\n        // NOTE(mmalavalli): A StatsReport is used to publish a \"stats-report\"\n        // event instead of using StandardizedStatsResponse directly because\n        // StatsReport will add zeros to properties that do not exist.\n        var report = new StatsReport(id, response, true /* prepareForInsights */);\n\n        // NOTE(mmalavalli): Since A/V sync metrics are not part of the StatsReport class,\n        // we add them to the insights payload here.\n        transport.publishEvent('quality', 'stats-report', 'info', {\n          audioTrackStats: report.remoteAudioTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToRemoteTrackStats(trackStat, response.remoteAudioTrackStats[i], movingAverageDeltas);\n          }),\n          localAudioTrackStats: report.localAudioTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToLocalTrackStats(trackStat, response.localAudioTrackStats[i], movingAverageDeltas);\n          }),\n          localVideoTrackStats: report.localVideoTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToLocalTrackStats(trackStat, response.localVideoTrackStats[i], movingAverageDeltas);\n          }),\n          peerConnectionId: report.peerConnectionId,\n          videoTrackStats: report.remoteVideoTrackStats.map(function (trackStat, i) {\n            return addAVSyncMetricsToRemoteTrackStats(trackStat, response.remoteVideoTrackStats[i], movingAverageDeltas);\n          })\n        });\n\n        // NOTE(mmalavalli): Clean up entries for Tracks that are no longer published or subscribed to.\n        var keys = flatMap(['localAudioTrackStats', 'localVideoTrackStats', 'remoteAudioTrackStats', 'remoteVideoTrackStats'], function (prop) {\n          return report[prop].map(function (_ref5) {\n            var ssrc = _ref5.ssrc,\n                trackSid = _ref5.trackSid;\n            return trackSid + '+' + ssrc;\n          });\n        });\n        var movingAverageDeltaKeysToBeRemoved = difference(Array.from(movingAverageDeltas.keys()), keys);\n        movingAverageDeltaKeysToBeRemoved.forEach(function (key) {\n          return movingAverageDeltas.delete(key);\n        });\n\n        if (oddPublishCount) {\n          // NOTE(mmalavalli): null properties of the \"active-ice-candidate-pair\"\n          // payload are assigned default values until the Insights gateway\n          // accepts null values.\n          var activeIceCandidatePair = replaceNullsWithDefaults(response.activeIceCandidatePair, report.peerConnectionId);\n\n          transport.publishEvent('quality', 'active-ice-candidate-pair', 'info', activeIceCandidatePair);\n        }\n      });\n    }, function () {\n      // Do nothing.\n    });\n  }, intervalMs);\n\n  roomV2.on('stateChanged', function onStateChanged(state) {\n    if (state === 'disconnected') {\n      clearInterval(interval);\n      roomV2.removeListener('stateChanged', onStateChanged);\n    }\n  });\n}\n\nfunction handleSubscriptions(room) {\n  var trackSidsToTrackSignalings = room._getTrackSidsToTrackSignalings();\n\n  room._subscriptionFailures.forEach(function (error, trackSid) {\n    var trackSignaling = trackSidsToTrackSignalings.get(trackSid);\n    if (trackSignaling) {\n      room._subscriptionFailures.delete(trackSid);\n      trackSignaling.subscribeFailed(createTwilioError(error.code, error.message));\n    }\n  });\n\n  trackSidsToTrackSignalings.forEach(function (trackSignaling) {\n    var trackId = room._subscribed.get(trackSignaling.sid);\n    if (!trackId || trackSignaling.isSubscribed && trackSignaling.trackTransceiver.id !== trackId) {\n      trackSignaling.setTrackTransceiver(null);\n    }\n    if (trackId) {\n      room._getTrackReceiver(trackId).then(function (trackReceiver) {\n        return trackSignaling.setTrackTransceiver(trackReceiver);\n      });\n    }\n  });\n}\n\n/**\n * NOTE(mmalavalli): Since A/V sync metrics are not part of the public StatsReport class, we add them\n * only for reporting purposes.\n * @private\n */\nfunction addAVSyncMetricsToLocalTrackStats(trackStats, trackResponse, movingAverageDeltas) {\n  var framesEncoded = trackResponse.framesEncoded,\n      packetsSent = trackResponse.packetsSent,\n      totalEncodeTime = trackResponse.totalEncodeTime,\n      totalPacketSendDelay = trackResponse.totalPacketSendDelay;\n\n  var augmentedTrackStats = Object.assign({}, trackStats);\n  var key = trackStats.trackSid + '+' + trackStats.ssrc;\n  var trackMovingAverageDeltas = movingAverageDeltas.get(key) || new Map();\n\n  if (typeof totalEncodeTime === 'number' && typeof framesEncoded === 'number') {\n    var trackAvgEncodeDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgEncodeDelay') || new MovingAverageDelta();\n    trackAvgEncodeDelayMovingAverageDelta.putSample(totalEncodeTime * 1000, framesEncoded);\n    augmentedTrackStats.avgEncodeDelay = trackAvgEncodeDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgEncodeDelay', trackAvgEncodeDelayMovingAverageDelta);\n  }\n  if (typeof totalPacketSendDelay === 'number' && typeof packetsSent === 'number') {\n    var trackAvgPacketSendDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgPacketSendDelay') || new MovingAverageDelta();\n    trackAvgPacketSendDelayMovingAverageDelta.putSample(totalPacketSendDelay * 1000, packetsSent);\n    augmentedTrackStats.avgPacketSendDelay = trackAvgPacketSendDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgPacketSendDelay', trackAvgPacketSendDelayMovingAverageDelta);\n  }\n  movingAverageDeltas.set(key, trackMovingAverageDeltas);\n  return augmentedTrackStats;\n}\n\n/**\n * NOTE(mmalavalli): Since A/V sync metrics are not part of the public StatsReport class, we add them\n * only for reporting purposes.\n * @private\n */\nfunction addAVSyncMetricsToRemoteTrackStats(trackStats, trackResponse, movingAverageDeltas) {\n  var estimatedPlayoutTimestamp = trackResponse.estimatedPlayoutTimestamp,\n      framesDecoded = trackResponse.framesDecoded,\n      jitterBufferDelay = trackResponse.jitterBufferDelay,\n      jitterBufferEmittedCount = trackResponse.jitterBufferEmittedCount,\n      totalDecodeTime = trackResponse.totalDecodeTime;\n\n  var augmentedTrackStats = Object.assign({}, trackStats);\n  var key = trackStats.trackSid + '+' + trackStats.ssrc;\n  var trackMovingAverageDeltas = movingAverageDeltas.get(key) || new Map();\n\n  if (typeof estimatedPlayoutTimestamp === 'number') {\n    augmentedTrackStats.estimatedPlayoutTimestamp = estimatedPlayoutTimestamp;\n  }\n  if (typeof framesDecoded === 'number' && typeof totalDecodeTime === 'number') {\n    var trackAvgDecodeDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgDecodeDelay') || new MovingAverageDelta();\n    trackAvgDecodeDelayMovingAverageDelta.putSample(totalDecodeTime * 1000, framesDecoded);\n    augmentedTrackStats.avgDecodeDelay = trackAvgDecodeDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgDecodeDelay', trackAvgDecodeDelayMovingAverageDelta);\n  }\n  if (typeof jitterBufferDelay === 'number' && typeof jitterBufferEmittedCount === 'number') {\n    var trackAvgJitterBufferDelayMovingAverageDelta = trackMovingAverageDeltas.get('avgJitterBufferDelay') || new MovingAverageDelta();\n    trackAvgJitterBufferDelayMovingAverageDelta.putSample(jitterBufferDelay * 1000, jitterBufferEmittedCount);\n    augmentedTrackStats.avgJitterBufferDelay = trackAvgJitterBufferDelayMovingAverageDelta.get();\n    trackMovingAverageDeltas.set('avgJitterBufferDelay', trackAvgJitterBufferDelayMovingAverageDelta);\n  }\n  movingAverageDeltas.set(key, trackMovingAverageDeltas);\n  return augmentedTrackStats;\n}\n\nfunction replaceNullsWithDefaults(activeIceCandidatePair, peerConnectionId) {\n  activeIceCandidatePair = Object.assign({\n    availableIncomingBitrate: 0,\n    availableOutgoingBitrate: 0,\n    bytesReceived: 0,\n    bytesSent: 0,\n    consentRequestsSent: 0,\n    currentRoundTripTime: 0,\n    lastPacketReceivedTimestamp: 0,\n    lastPacketSentTimestamp: 0,\n    nominated: false,\n    peerConnectionId: peerConnectionId,\n    priority: 0,\n    readable: false,\n    requestsReceived: 0,\n    requestsSent: 0,\n    responsesReceived: 0,\n    responsesSent: 0,\n    retransmissionsReceived: 0,\n    retransmissionsSent: 0,\n    state: 'failed',\n    totalRoundTripTime: 0,\n    transportId: '',\n    writable: false\n  }, filterObject(activeIceCandidatePair || {}, null));\n\n  activeIceCandidatePair.localCandidate = Object.assign({\n    candidateType: 'host',\n    deleted: false,\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.localCandidate || {}, null));\n\n  activeIceCandidatePair.remoteCandidate = Object.assign({\n    candidateType: 'host',\n    ip: '',\n    port: 0,\n    priority: 0,\n    protocol: 'udp',\n    url: ''\n  }, filterObject(activeIceCandidatePair.remoteCandidate || {}, null));\n\n  return activeIceCandidatePair;\n}\n\nmodule.exports = RoomV2;"]},"metadata":{},"sourceType":"script"}