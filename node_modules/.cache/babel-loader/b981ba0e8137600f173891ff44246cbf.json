{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Chat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, CssBaseline, Grid, IconButton, List, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar ChatScreen = function ChatScreen(_ref) {\n  _s();\n\n  var location = _ref.location;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      channel = _useState8[0],\n      setChannel = _useState8[1];\n\n  var scrollDiv = /*#__PURE__*/React.createRef();\n\n  var joinChannel = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(channel) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(channel.channelState.status !== \"joined\")) {\n                _context.next = 3;\n                break;\n              }\n\n              _context.next = 3;\n              return channel.join();\n\n            case 3:\n              setChannel(channel);\n              setLoading(false);\n              channel.on(\"messageAdded\", handleMessageAdded);\n              scrollToBottom();\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function joinChannel(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleMessageAdded = function handleMessageAdded(message) {\n    setMessages([].concat(_toConsumableArray(messages), [message]));\n    scrollToBottom();\n  };\n\n  var scrollToBottom = function scrollToBottom() {\n    var scrollHeight = scrollDiv.current.scrollHeight;\n    var height = scrollDiv.current.clientHeight;\n    var maxScrollTop = scrollHeight - height;\n    scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  };\n\n  var getToken = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(email) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"/chat/token\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  identity: email\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 2:\n              data = _context2.sent;\n              return _context2.abrupt(\"return\", data.token);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getToken(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var sendMessage = function sendMessage() {\n    if (text) {\n      setLoading(true);\n      channel.sendMessage(String(text).trim());\n      setText(\"\");\n      setLoading(false);\n    }\n  };\n\n  useEffect( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6() {\n    var email, room, token, client, _channel, _channel2;\n\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            //   const {state} = location || {};\n            //   const {email, room} = state || {};\n            email = 'fungal';\n            room = 'fun';\n            token = '';\n\n            if (!email || !room) {//   \n            }\n\n            setLoading(true);\n            _context6.prev = 5;\n            _context6.next = 8;\n            return getToken(email);\n\n          case 8:\n            token = _context6.sent;\n            _context6.next = 14;\n            break;\n\n          case 11:\n            _context6.prev = 11;\n            _context6.t0 = _context6[\"catch\"](5);\n            throw new Error(\"Unable to get token, please reload this page\");\n\n          case 14:\n            _context6.next = 16;\n            return Chat.Client.create(token);\n\n          case 16:\n            client = _context6.sent;\n            client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var token;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return _this.getToken(email);\n\n                    case 2:\n                      token = _context3.sent;\n                      client.updateToken(token);\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })));\n            client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n              var token;\n              return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                while (1) {\n                  switch (_context4.prev = _context4.next) {\n                    case 0:\n                      _context4.next = 2;\n                      return _this.getToken(email);\n\n                    case 2:\n                      token = _context4.sent;\n                      client.updateToken(token);\n\n                    case 4:\n                    case \"end\":\n                      return _context4.stop();\n                  }\n                }\n              }, _callee4);\n            })));\n            client.on(\"channelJoined\", /*#__PURE__*/function () {\n              var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(channel) {\n                var messages;\n                return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n                  while (1) {\n                    switch (_context5.prev = _context5.next) {\n                      case 0:\n                        _context5.next = 2;\n                        return channel.getMessages();\n\n                      case 2:\n                        messages = _context5.sent;\n                        setMessages(messages.items || []);\n                        scrollToBottom();\n\n                      case 5:\n                      case \"end\":\n                        return _context5.stop();\n                    }\n                  }\n                }, _callee5);\n              }));\n\n              return function (_x3) {\n                return _ref7.apply(this, arguments);\n              };\n            }());\n            _context6.prev = 20;\n            _context6.next = 23;\n            return client.getChannelByUniqueName(room);\n\n          case 23:\n            _channel = _context6.sent;\n            joinChannel(_channel);\n            _context6.next = 39;\n            break;\n\n          case 27:\n            _context6.prev = 27;\n            _context6.t1 = _context6[\"catch\"](20);\n            _context6.prev = 29;\n            _context6.next = 32;\n            return client.createChannel({\n              uniqueName: room,\n              friendlyName: room\n            });\n\n          case 32:\n            _channel2 = _context6.sent;\n            joinChannel(_channel2);\n            _context6.next = 39;\n            break;\n\n          case 36:\n            _context6.prev = 36;\n            _context6.t2 = _context6[\"catch\"](29);\n            throw new Error(\"Unable to create channel, please reload this page\");\n\n          case 39:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6, null, [[5, 11], [20, 27], [29, 36]]);\n  })));\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      open: loading,\n      style: {\n        zIndex: 99999\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(AppBar, {\n      elevation: 10,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      style: styles.mainGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: styles.gridItemChatList,\n        ref: _this.scrollDiv,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: messages && messages.map(function (message) {\n            return /*#__PURE__*/_jsxDEV(ChatItem, {\n              message: message,\n              email: email\n            }, message.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: styles.gridItemMessage,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: styles.textFieldContainer,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              style: styles.textField,\n              placeholder: \"Enter message\",\n              variant: \"outlined\",\n              multiline: true,\n              rows: 2,\n              value: text,\n              disabled: !channel,\n              onChange: function onChange(event) {\n                return _this.setState({\n                  text: event.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: styles.sendButton,\n              onClick: _this.sendMessage,\n              disabled: !channel,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                style: styles.sendIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ChatScreen, \"VmhPX4H3XbGwCBUiTFWE+mRX2KA=\");\n\n_c = ChatScreen;\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1\n  }\n};\nexport default ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Chat.js"],"names":["React","useEffect","useState","AppBar","Backdrop","CircularProgress","Container","CssBaseline","Grid","IconButton","List","TextField","Toolbar","Typography","Send","ChatItem","Chat","require","ChatScreen","location","text","setText","messages","setMessages","loading","setLoading","channel","setChannel","scrollDiv","createRef","joinChannel","channelState","status","join","on","handleMessageAdded","scrollToBottom","message","scrollHeight","current","height","clientHeight","maxScrollTop","scrollTop","getToken","email","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","token","sendMessage","String","trim","room","Error","Client","create","client","updateToken","getMessages","items","getChannelByUniqueName","createChannel","uniqueName","friendlyName","zIndex","color","styles","mainGrid","gridItemChatList","map","index","gridItemMessage","textFieldContainer","textField","event","setState","target","value","sendButton","sendIcon","width","borderWidth","borderColor","flex","marginRight","gridItem","paddingTop","paddingBottom","overflow","marginTop","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    AppBar,\n    Backdrop,\n    CircularProgress,\n    Container,\n    CssBaseline,\n    Grid,\n    IconButton,\n    List,\n    TextField,\n    Toolbar,\n    Typography,\n  } from \"@material-ui/core\";\n  import { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nconst Chat = require(\"twilio-chat\");\n\nconst ChatScreen = ({location})=>{\n    const [text, setText] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [channel, setChannel] = useState(null);\n\n    const scrollDiv = React.createRef();\n\n    const joinChannel = async (channel) => {\n        if (channel.channelState.status !== \"joined\") {\n         await channel.join();\n       }\n     \n       setChannel(channel);\n       setLoading(false);\n     \n       channel.on(\"messageAdded\", handleMessageAdded);\n       scrollToBottom();\n     };\n\n     const handleMessageAdded = (message) => {\n         setMessages([...messages, message]);\n         scrollToBottom();\n      };\n\n      const scrollToBottom = () => {\n        const scrollHeight = scrollDiv.current.scrollHeight;\n        const height = scrollDiv.current.clientHeight;\n        const maxScrollTop = scrollHeight - height;\n        scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n      };\n      \n      const getToken = async (email) => {\n        const data = await fetch(\"/chat/token\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              identity: email,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }).then((res) => res.json());\n          return data.token;\n      }\n\n      const sendMessage = () => {\n        if (text) {\n            setLoading(true);\n          channel.sendMessage(String(text).trim());\n          setText(\"\");\n          setLoading(false);\n        }\n      };\n      \n\n      useEffect(\n          async () => {\n            //   const {state} = location || {};\n            //   const {email, room} = state || {};\n            const email = 'fungal';\n            const room = 'fun';\n              let token = '';\n\n              if(!email || !room){\n                //   \n              }\n\n              setLoading(true);\n              try{\n                  token = await getToken(email);\n              }catch{\n                  throw new Error(\"Unable to get token, please reload this page\");\n              }\n\n              const client = await Chat.Client.create(token);\n              client.on(\"tokenAboutToExpire\", async () => {\n                const token = await this.getToken(email);\n                client.updateToken(token);\n              });\n            \n              client.on(\"tokenExpired\", async () => {\n                const token = await this.getToken(email);\n                client.updateToken(token);\n              });\n\n              client.on(\"channelJoined\", async (channel) => {\n                // getting list of all messages since this is an existing channel\n                const messages = await channel.getMessages();\n                setMessages(messages.items || []);\n                scrollToBottom();\n              });\n            \n              try {\n                const channel = await client.getChannelByUniqueName(room);\n                joinChannel(channel);\n              } catch(err) {\n                try {\n                  const channel = await client.createChannel({\n                    uniqueName: room,\n                    friendlyName: room,\n                  });\n              \n                  joinChannel(channel);\n                } catch {\n                  throw new Error(\"Unable to create channel, please reload this page\");\n                }\n              } \n          }\n      );\n\n      return (\n        <Container component=\"main\" maxWidth=\"md\">\n          <Backdrop open={loading} style={{ zIndex: 99999 }}>\n            <CircularProgress style={{ color: \"white\" }} />\n          </Backdrop>\n    \n          <AppBar elevation={10}>\n            <Toolbar>\n              <Typography variant=\"h6\">\n                {/* {`Room: {fun}, User: ${email}`} */}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n    \n          <CssBaseline />\n    \n          <Grid container direction=\"column\" style={styles.mainGrid}>\n            <Grid item style={styles.gridItemChatList} ref={this.scrollDiv}>\n              <List dense={true}>\n                  {messages &&\n                    messages.map((message) => \n                      <ChatItem\n                        key={message.index}\n                        message={message}\n                        email={email}/>\n                    )}\n              </List>\n            </Grid>\n    \n            <Grid item style={styles.gridItemMessage}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\">\n                <Grid item style={styles.textFieldContainer}>\n                  <TextField\n                    required\n                    style={styles.textField}\n                    placeholder=\"Enter message\"\n                    variant=\"outlined\"\n                    multiline\n                    rows={2}\n                    value={text}\n                    disabled={!channel}\n                    onChange={(event) =>\n                      this.setState({ text: event.target.value })\n                    }/>\n                </Grid>\n                \n                <Grid item>\n                  <IconButton\n                    style={styles.sendButton}\n                    onClick={this.sendMessage}\n                    disabled={!channel}>\n                    <Send style={styles.sendIcon} />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      );\n}\n\nconst styles = {\n    textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n    textFieldContainer: { flex: 1, marginRight: 12 },\n    gridItem: { paddingTop: 12, paddingBottom: 12 },\n    gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n    gridItemMessage: { marginTop: 12, marginBottom: 12 },\n    sendButton: { backgroundColor: \"#3f51b5\" },\n    sendIcon: { color: \"white\" },\n    mainGrid: { paddingTop: 100, borderWidth: 1 },\n  };\n  export default ChatScreen;"]},"metadata":{},"sourceType":"module"}