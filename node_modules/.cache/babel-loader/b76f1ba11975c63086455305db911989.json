{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/Blur.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GaussianBlurBackgroundProcessor } from '@twilio/video-processors';\nimport BlurOnIcon from '@material-ui/icons/BlurOnTwoTone';\nimport BlurOffIcon from '@material-ui/icons/BlurOffTwoTone';\nimport { Tooltip } from '@material-ui/core';\n\nvar Blur = function Blur(_ref) {\n  _s();\n\n  var participant = _ref.participant;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBlur = _useState2[0],\n      setIsBlur = _useState2[1];\n\n  var videoTrack;\n  participant.videoTracks.forEach(function (track) {\n    if (track.track.name !== 'screen_5139') {\n      videoTrack = track.track;\n      return;\n    }\n  });\n\n  var handleBlur = function handleBlur() {\n    var blurBackground = new GaussianBlurBackgroundProcessor({\n      assetsPath: 'assets'\n    });\n\n    if (!isBlur) {\n      blurBackground.loadModel().then(function () {\n        videoTrack.addProcessor(blurBackground);\n      });\n    } else {\n      videoTrack.removeProcessor(videoTrack.processor);\n    }\n\n    setIsBlur(!isBlur);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbarDiv\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBlur,\n      children: isBlur ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Blur Background\",\n        children: /*#__PURE__*/_jsxDEV(BlurOnIcon, {\n          style: {\n            color: 'black',\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 27\n      }, _this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Unblur Background\",\n        children: /*#__PURE__*/_jsxDEV(BlurOffIcon, {\n          style: {\n            color: 'black',\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Blur, \"8oy8RDktF0gefGLDAeEjb7/N99M=\");\n\n_c = Blur;\nexport default Blur;\n\nvar _c;\n\n$RefreshReg$(_c, \"Blur\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/Blur.js"],"names":["React","useState","GaussianBlurBackgroundProcessor","BlurOnIcon","BlurOffIcon","Tooltip","Blur","participant","isBlur","setIsBlur","videoTrack","videoTracks","forEach","track","name","handleBlur","blurBackground","assetsPath","loadModel","then","addProcessor","removeProcessor","processor","color","margin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,+BAAT,QAAgD,0BAAhD;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,SAASC,OAAT,QAAwB,mBAAxB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqB;AAAA;;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBAEFN,QAAQ,CAAC,KAAD,CAFN;AAAA;AAAA,MAEvBO,MAFuB;AAAA,MAEfC,SAFe;;AAI9B,MAAIC,UAAJ;AACAH,EAAAA,WAAW,CAACI,WAAZ,CAAwBC,OAAxB,CAAgC,UAACC,KAAD,EAAW;AACvC,QAAIA,KAAK,CAACA,KAAN,CAAYC,IAAZ,KAAqB,aAAzB,EAAwC;AACpCJ,MAAAA,UAAU,GAAGG,KAAK,CAACA,KAAnB;AACA;AACH;AACJ,GALD;;AAOA,MAAME,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,QAAMC,cAAc,GAAG,IAAId,+BAAJ,CAAoC;AACvDe,MAAAA,UAAU,EAAE;AAD2C,KAApC,CAAvB;;AAGA,QAAI,CAACT,MAAL,EAAa;AACTQ,MAAAA,cAAc,CAACE,SAAf,GAA2BC,IAA3B,CAAgC,YAAM;AAClCT,QAAAA,UAAU,CAACU,YAAX,CAAwBJ,cAAxB;AACH,OAFD;AAGH,KAJD,MAIO;AACHN,MAAAA,UAAU,CAACW,eAAX,CAA2BX,UAAU,CAACY,SAAtC;AACH;;AACDb,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH,GAZD;;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAEO,UAAjB;AAAA,gBACKP,MAAM,gBAAG,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,iBAAf;AAAA,+BACN,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE;AAAEe,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE;AAA1B;AAAnB;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,eAAH,gBAEM,QAAC,OAAD;AAAS,QAAA,KAAK,EAAC,mBAAf;AAAA,+BACT,QAAC,WAAD;AAAa,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,MAAM,EAAE;AAA1B;AAApB;AAAA;AAAA;AAAA;AAAA;AADS;AAAA;AAAA;AAAA;AAAA;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CAtCD;;GAAMlB,I;;KAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport { GaussianBlurBackgroundProcessor } from '@twilio/video-processors';\nimport BlurOnIcon from '@material-ui/icons/BlurOnTwoTone';\nimport BlurOffIcon from '@material-ui/icons/BlurOffTwoTone';\nimport { Tooltip } from '@material-ui/core';\nconst Blur = ({ participant }) => {\n\n    const [isBlur, setIsBlur] = useState(false);\n\n    var videoTrack;\n    participant.videoTracks.forEach((track) => {\n        if (track.track.name !== 'screen_5139') {\n            videoTrack = track.track;\n            return;\n        }\n    });\n\n    const handleBlur = () => {\n        const blurBackground = new GaussianBlurBackgroundProcessor({\n            assetsPath: 'assets'\n        });\n        if (!isBlur) {\n            blurBackground.loadModel().then(() => {\n                videoTrack.addProcessor(blurBackground);\n            });\n        } else {\n            videoTrack.removeProcessor(videoTrack.processor);\n        }\n        setIsBlur(!isBlur);\n    }\n\n    return (\n        <div className='toolbarDiv'>\n            <button onClick={handleBlur}>\n                {isBlur ? <Tooltip title=\"Blur Background\">\n                    <BlurOnIcon style={{ color: 'black', margin: \"10px\" }} />\n                </Tooltip> : <Tooltip title=\"Unblur Background\">\n                    <BlurOffIcon style={{ color: 'black', margin: \"10px\" }} />\n                </Tooltip>}\n            </button>\n        </div>\n    );\n\n};\n\nexport default Blur;"]},"metadata":{},"sourceType":"module"}