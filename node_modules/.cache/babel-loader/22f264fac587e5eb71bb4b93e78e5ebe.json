{"ast":null,"code":"import _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar handleMessageAdded = function handleMessageAdded(message, setMessages, messages) {\n  // const { messages } = this.state;\n  // this.setState(\n  //   {\n  //     messages: !!messages ? [...messages, message] : [message],\n  //   },\n  // );\n  setMessages(!!messages ? [].concat(_toConsumableArray(messages), [message]) : [message]);\n};\n\nvar joinChannel = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(channel) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(channel.channelState.status !== \"joined\")) {\n              _context.next = 3;\n              break;\n            }\n\n            _context.next = 3;\n            return channel.join();\n\n          case 3:\n            channel.on(\"messageAdded\", handleMessageAdded);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function joinChannel(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar joinChat = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(room, client, setChannel, setMessages, setChannelList, setLoading) {\n    var channel, allMessages, channels, _channel, _channels;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            //   const {client} = this.state;\n            console.log(room);\n            _context2.next = 4;\n            return client.getChannelByUniqueName(room);\n\n          case 4:\n            channel = _context2.sent;\n            _context2.next = 7;\n            return joinChannel(channel);\n\n          case 7:\n            setChannel(channel);\n            setLoading(false); //   this.setState({ channel, loading: false });\n\n            _context2.next = 11;\n            return channel.getMessages();\n\n          case 11:\n            allMessages = _context2.sent;\n            setMessages(allMessages.items || []); //   this.setState({ messages: messages.items || [] });\n\n            _context2.next = 15;\n            return client.getSubscribedChannels();\n\n          case 15:\n            channels = _context2.sent;\n            setChannelList(channels.items || []); //   this.setState({channelList: channels.items || []});\n\n            _context2.next = 38;\n            break;\n\n          case 19:\n            _context2.prev = 19;\n            _context2.t0 = _context2[\"catch\"](0);\n            _context2.prev = 21;\n            _context2.next = 24;\n            return client.createChannel({\n              uniqueName: room,\n              friendlyName: room\n            });\n\n          case 24:\n            _channel = _context2.sent;\n            _context2.next = 27;\n            return joinChannel(_channel);\n\n          case 27:\n            setLoading(false);\n            setChannel(_channel); // this.setState({ channel, loading: false });\n\n            _context2.next = 31;\n            return client.getSubscribedChannels();\n\n          case 31:\n            _channels = _context2.sent;\n            setChannelList(_channels.items || []); // this.setState({channelList: channels.items || []});\n\n            _context2.next = 38;\n            break;\n\n          case 35:\n            _context2.prev = 35;\n            _context2.t1 = _context2[\"catch\"](21);\n            throw new Error(\"unable to create channel, please reload this page\");\n\n          case 38:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 19], [21, 35]]);\n  }));\n\n  return function joinChat(_x2, _x3, _x4, _x5, _x6, _x7) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default joinChat;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/joinChatRoom.js"],"names":["handleMessageAdded","message","setMessages","messages","joinChannel","channel","channelState","status","join","on","joinChat","room","client","setChannel","setChannelList","setLoading","console","log","getChannelByUniqueName","getMessages","allMessages","items","getSubscribedChannels","channels","createChannel","uniqueName","friendlyName","Error"],"mappings":";;;;AAAA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAUC,WAAV,EAAuBC,QAAvB,EAAoC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACAD,EAAAA,WAAW,CAAE,CAAC,CAACC,QAAF,gCAAeA,QAAf,IAAyBF,OAAzB,KAAoC,CAACA,OAAD,CAAtC,CAAX;AACD,CARH;;AAUA,IAAMG,WAAW;AAAA,sEAAG,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA,kBACZA,OAAO,CAACC,YAAR,CAAqBC,MAArB,KAAgC,QADpB;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAERF,OAAO,CAACG,IAAR,EAFQ;;AAAA;AAIhBH,YAAAA,OAAO,CAACI,EAAR,CAAW,cAAX,EAA2BT,kBAA3B;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXI,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAOA,IAAMM,QAAQ;AAAA,uEAAG,kBAAOC,IAAP,EAAaC,MAAb,EAAqBC,UAArB,EAAiCX,WAAjC,EAA8CY,cAA9C,EAA8DC,UAA9D;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb;AACEC,YAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AAHW;AAAA,mBAIWC,MAAM,CAACM,sBAAP,CAA8BP,IAA9B,CAJX;;AAAA;AAILN,YAAAA,OAJK;AAAA;AAAA,mBAKLD,WAAW,CAACC,OAAD,CALN;;AAAA;AAMXQ,YAAAA,UAAU,CAACR,OAAD,CAAV;AACAU,YAAAA,UAAU,CAAC,KAAD,CAAV,CAPW,CAQb;;AARa;AAAA,mBASeV,OAAO,CAACc,WAAR,EATf;;AAAA;AASLC,YAAAA,WATK;AAUXlB,YAAAA,WAAW,CAAEkB,WAAW,CAACC,KAAZ,IAAmB,EAArB,CAAX,CAVW,CAWb;;AAXa;AAAA,mBAYYT,MAAM,CAACU,qBAAP,EAZZ;;AAAA;AAYLC,YAAAA,QAZK;AAaXT,YAAAA,cAAc,CAAES,QAAQ,CAACF,KAAT,IAAkB,EAApB,CAAd,CAbW,CAcb;;AAda;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAkBaT,MAAM,CAACY,aAAP,CAAqB;AACzCC,cAAAA,UAAU,EAAEd,IAD6B;AAEzCe,cAAAA,YAAY,EAAEf;AAF2B,aAArB,CAlBb;;AAAA;AAkBHN,YAAAA,QAlBG;AAAA;AAAA,mBAsBHD,WAAW,CAACC,QAAD,CAtBR;;AAAA;AAuBTU,YAAAA,UAAU,CAAC,KAAD,CAAV;AACAF,YAAAA,UAAU,CAACR,QAAD,CAAV,CAxBS,CAyBT;;AAzBS;AAAA,mBA0BcO,MAAM,CAACU,qBAAP,EA1Bd;;AAAA;AA0BHC,YAAAA,SA1BG;AA2BTT,YAAAA,cAAc,CAAES,SAAQ,CAACF,KAAT,IAAkB,EAApB,CAAd,CA3BS,CA4BT;;AA5BS;AAAA;;AAAA;AAAA;AAAA;AAAA,kBA8BH,IAAIM,KAAJ,CAAU,mDAAV,CA9BG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARjB,QAAQ;AAAA;AAAA;AAAA,GAAd;;AAmCE,eAAeA,QAAf","sourcesContent":["const handleMessageAdded = (message, setMessages, messages) => {\n    // const { messages } = this.state;\n    // this.setState(\n    //   {\n    //     messages: !!messages ? [...messages, message] : [message],\n    //   },\n    // );\n    setMessages((!!messages?[...messages, message] : [message]));\n  };\n\nconst joinChannel = async (channel) => {\n    if (channel.channelState.status !== \"joined\") {\n      await channel.join();\n    }\n    channel.on(\"messageAdded\", handleMessageAdded);\n  };\n\nconst joinChat = async (room, client, setChannel, setMessages, setChannelList, setLoading)=>{\n    try {\n    //   const {client} = this.state;\n      console.log(room);\n      const channel = await client.getChannelByUniqueName(room);\n      await joinChannel(channel);\n      setChannel(channel);\n      setLoading(false);\n    //   this.setState({ channel, loading: false });\n      const allMessages = await channel.getMessages();\n      setMessages((allMessages.items||[]));\n    //   this.setState({ messages: messages.items || [] });\n      const channels = await client.getSubscribedChannels();\n      setChannelList((channels.items || []));\n    //   this.setState({channelList: channels.items || []});\n    } catch {\n      try {\n        // const {client} = this.state;\n        const channel = await client.createChannel({\n          uniqueName: room,\n          friendlyName: room,\n        });\n        await joinChannel(channel);\n        setLoading(false);\n        setChannel(channel);\n        // this.setState({ channel, loading: false });\n        const channels = await client.getSubscribedChannels();\n        setChannelList((channels.items || []));\n        // this.setState({channelList: channels.items || []});\n      } catch {\n        throw new Error(\"unable to create channel, please reload this page\");\n      }\n    }\n  };\n\n  export default joinChat;"]},"metadata":{},"sourceType":"module"}