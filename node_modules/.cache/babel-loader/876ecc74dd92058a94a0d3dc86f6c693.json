{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/TextChat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatIcon from '@material-ui/icons/ChatTwoTone';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubbleTwoTone';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from '../../Chat/ChatItem';\nimport { Grid, List, TextField } from \"@material-ui/core\";\nimport { Tooltip } from '@material-ui/core';\nvar drawerWidth = 0;\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawer: {\n      width: drawerWidth,\n      flexShrink: 0\n    },\n    drawerPaper: {\n      width: \"20%\",\n      borderRadius: '10px',\n      height: '97%',\n      position: 'fixed',\n      marginRight: \"10px\",\n      marginTop: \"10px\"\n    },\n    drawerHeader: _objectSpread(_objectSpread({\n      display: 'flex',\n      alignItems: 'center',\n      padding: theme.spacing(0, 1),\n      marginRight: 0\n    }, theme.mixins.toolbar), {}, {\n      justifyContent: 'flex-start'\n    }),\n    closeIcon: {\n      background: 'none',\n      border: 'none'\n    }\n  };\n});\n\nvar TextChat = function TextChat(_ref) {\n  _s();\n\n  var room = _ref.room,\n      messages = _ref.messages,\n      sendMessage = _ref.sendMessage;\n  var classes = useStyles();\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  console.log(sendMessage); // text message\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1]; // const dataTrack = new LocalDataTrack();\n\n\n  var handleClick = function handleClick() {\n    setIsOpen(!isOpen);\n\n    if (!isOpen) {\n      document.getElementById('room').style.marginRight = '20%';\n    } else {\n      document.getElementById('room').style.marginRight = '0%';\n    }\n  };\n\n  var handleTextChange = useCallback(function (event) {\n    setText(event.target.value);\n  }, []);\n\n  var handleSend = function handleSend() {\n    sendMessage(text);\n    setText('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"toolbarDiv\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Text Chat\",\n        children: isOpen ? /*#__PURE__*/_jsxDEV(ChatBubbleIcon, {\n          style: {\n            color: 'black',\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, _this) : /*#__PURE__*/_jsxDEV(ChatIcon, {\n          style: {\n            color: 'black',\n            margin: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 84\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Drawer, {\n      className: classes.drawer,\n      anchor: \"right\",\n      variant: \"persistent\",\n      open: isOpen,\n      classes: {\n        paper: classes.drawerPaper\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: messages && messages.map(function (message) {\n            return /*#__PURE__*/_jsxDEV(ChatItem, {\n              message: message,\n              email: room.localParticipant.identity\n            }, message.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"center\",\n        style: {\n          padding: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          style: styles.textFieldContainer,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            style: styles.textField,\n            placeholder: \"Enter message\",\n            variant: \"outlined\",\n            multiline: true,\n            rows: 2,\n            value: text,\n            onChange: handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            style: styles.sendButton,\n            onClick: handleSend,\n            children: /*#__PURE__*/_jsxDEV(Send, {\n              style: styles.sendIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(TextChat, \"xm39T4ifhekqR6AkZie2qzBEHYI=\", false, function () {\n  return [useStyles];\n});\n\n_c = TextChat;\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1\n  }\n};\nexport default TextChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextChat\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/TextChat.js"],"names":["React","useCallback","useState","Drawer","IconButton","makeStyles","ChatIcon","ChatBubbleIcon","Send","ChatItem","Grid","List","TextField","Tooltip","drawerWidth","useStyles","theme","drawer","width","flexShrink","drawerPaper","borderRadius","height","position","marginRight","marginTop","drawerHeader","display","alignItems","padding","spacing","mixins","toolbar","justifyContent","closeIcon","background","border","TextChat","room","messages","sendMessage","classes","isOpen","setIsOpen","console","log","text","setText","handleClick","document","getElementById","style","handleTextChange","event","target","value","handleSend","color","margin","paper","map","message","localParticipant","identity","index","styles","textFieldContainer","textField","sendButton","sendIcon","borderWidth","borderColor","flex","gridItem","paddingTop","paddingBottom","gridItemChatList","overflow","gridItemMessage","marginBottom","backgroundColor","mainGrid"],"mappings":"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","sourcesContent":["import React, { useCallback, useState } from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport IconButton from '@material-ui/core/IconButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ChatIcon from '@material-ui/icons/ChatTwoTone';\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubbleTwoTone';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from '../../Chat/ChatItem';\nimport {\n  Grid,\n  List,\n  TextField,\n} from \"@material-ui/core\";\nimport { Tooltip } from '@material-ui/core';\n\nconst drawerWidth = 0;\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: \"20%\",\n    borderRadius: '10px',\n    height: '97%',\n    position: 'fixed',\n    marginRight: \"10px\",\n    marginTop: \"10px\",\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    marginRight: 0,\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-start',\n  },\n\n  closeIcon: {\n    background: 'none',\n    border: 'none',\n  }\n\n}));\n\n\nconst TextChat = ({ room, messages, sendMessage }) => {\n\n  const classes = useStyles();\n  const [isOpen, setIsOpen] = useState(true);\n  console.log(sendMessage);\n\n  // text message\n  const [text, setText] = useState('');\n\n  // const dataTrack = new LocalDataTrack();\n\n  const handleClick = () => {\n    setIsOpen(!isOpen);\n    if(!isOpen){\n      document.getElementById('room').style.marginRight = '20%';\n    }else{\n      document.getElementById('room').style.marginRight = '0%';\n    }\n  }\n  \n  const handleTextChange = useCallback((event) => {\n    setText(event.target.value);\n  }\n    , []);\n\n  const handleSend = ()=>{\n    sendMessage(text);\n    setText('');\n  }\n  return (\n    <div className='toolbarDiv'>\n      <button\n        onClick={handleClick}\n      >\n        <Tooltip title = 'Text Chat'>\n        {isOpen ? <ChatBubbleIcon  style = {{color : 'black', margin: \"10px\"}}/> : <ChatIcon  style = {{color : 'black', margin: \"10px\"}}/>}\n        </Tooltip>\n      </button>\n      <Drawer\n        className={classes.drawer}\n        anchor='right'\n        variant='persistent'\n        open={isOpen}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div>\n        <List dense={true}>\n              {messages &&\n                messages.map((message) => (\n                  <ChatItem\n                    key={message.index}\n                    message={message}\n                    email={room.localParticipant.identity}\n                  />\n                ))}\n            </List>\n        </div>\n        <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n              style = {{padding: \"10px\"}}\n            >\n              <Grid item style={styles.textFieldContainer}>\n                <TextField\n                  required\n                  style={styles.textField}\n                  placeholder=\"Enter message\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  value={text}\n                  onChange={handleTextChange}\n                />\n              </Grid>\n              <Grid item>\n                <IconButton\n                  style={styles.sendButton}\n                  onClick={handleSend}\n                >\n                  <Send style={styles.sendIcon} />\n                </IconButton>\n              </Grid>\n            </Grid>\n      </Drawer>\n    </div>\n  );\n}\nconst styles = {\n  textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n  textFieldContainer: { flex: 1, marginRight: 12 },\n  gridItem: { paddingTop: 12, paddingBottom: 12 },\n  gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n  gridItemMessage: { marginTop: 12, marginBottom: 12 },\n  sendButton: { backgroundColor: \"#3f51b5\" },\n  sendIcon: { color: \"white\" },\n  mainGrid: { paddingTop: 100, borderWidth: 1 },\n};\nexport default TextChat;"]},"metadata":{},"sourceType":"module"}