{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/DisplayPreview.js\",\n    _this = this;\n\nimport React from 'react';\n\nvar DisplayPreview = function DisplayPreview(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      connecting = _ref.connecting;\n\n  var _require = require('twilio-video'),\n      createLocalVideoTrack = _require.createLocalVideoTrack;\n\n  if (!connecting) {\n    createLocalVideoTrack().then(function (track) {\n      var localMediaContainer = document.getElementById('local-media');\n      localMediaContainer.appendChild(track.attach());\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"local-media\",\n    className: \"participant\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: connecting,\n        children: connecting ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-spinner fa-spin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 36\n          }, _this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Connecting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 78\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 31\n        }, _this) : \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = DisplayPreview;\nexport default DisplayPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayPreview\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/DisplayPreview.js"],"names":["React","DisplayPreview","handleSubmit","connecting","require","createLocalVideoTrack","then","track","localMediaContainer","document","getElementById","appendChild","attach"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAgC;AAAA,MAA9BC,YAA8B,QAA9BA,YAA8B;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,iBACjBC,OAAO,CAAC,cAAD,CADU;AAAA,MAC3CC,qBAD2C,YAC3CA,qBAD2C;;AAGnD,MAAG,CAACF,UAAJ,EAAe;AACfE,IAAAA,qBAAqB,GAAGC,IAAxB,CAA6B,UAAAC,KAAK,EAAI;AAClC,UAAMC,mBAAmB,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAA5B;AACAF,MAAAA,mBAAmB,CAACG,WAApB,CAAgCJ,KAAK,CAACK,MAAN,EAAhC;AACH,KAHD;AAIH;;AAEG,sBACI;AAAK,IAAA,EAAE,EAAG,aAAV;AAAwB,IAAA,SAAS,EAAG,aAApC;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAIV,YAAlB;AAAA,6BACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAEC,UAAhC;AAAA,kBACKA,UAAU,gBAAG;AAAA,kCAAK;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,mBAAL,oBAA+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAH,GAAkF;AADjG;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAnBD;;KAAMF,c;AAoBN,eAAeA,cAAf","sourcesContent":["import React from 'react';\n\nconst DisplayPreview = ({handleSubmit, connecting}) => {\n    const { createLocalVideoTrack } = require('twilio-video');\n\n    if(!connecting){\n    createLocalVideoTrack().then(track => {\n        const localMediaContainer = document.getElementById('local-media');\n        localMediaContainer.appendChild(track.attach());\n    });\n}\n\n    return (\n        <div id = 'local-media' className = 'participant'>\n            <form onSubmit = {handleSubmit}>\n            <button type=\"submit\" disabled={connecting}>\n                {connecting ? <div><i className=\"fa fa-spinner fa-spin\"></i> <span>Connecting</span></div> : \"Connect\"}\n            </button>\n            </form>\n        </div>\n    );\n}\nexport default DisplayPreview;"]},"metadata":{},"sourceType":"module"}