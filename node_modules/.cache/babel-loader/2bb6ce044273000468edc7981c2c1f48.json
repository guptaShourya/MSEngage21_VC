{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/VideoChat.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\nimport DisplayPreview from \"./DisplayPreview\";\nimport RoomHeader from \"./RoomHeader\";\nimport Grid from '@material-ui/core/Grid'; // child to App.js\n// VideoChat.js handles data about the chat\n\nvar VideoChat = function VideoChat() {\n  _s();\n\n  // state variables\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomName = _useState4[0],\n      setRoomName = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      room = _useState6[0],\n      setRoom = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      connecting = _useState8[0],\n      setConnecting = _useState8[1]; // Methods to update Username & Roomname when changed\n\n\n  var handleUsernameChange = useCallback(function (event) {\n    setUsername(event.target.value);\n  }, []);\n  var handleRoomNameChange = useCallback(function (event) {\n    setRoomName(event.target.value);\n  }, []); // Method to send Username & Roomname to the server\n  // And recieve an access token\n\n  var handleSubmit = useCallback( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); //prevents the browser from reload when submitting the form\n\n              setConnecting(true); // changes the button text to connecting\n\n              _context.next = 4;\n              return fetch(\"/video/token\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  identity: username,\n                  room: roomName\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 4:\n              data = _context.sent;\n              // connects to the room using twilio API\n              Video.connect(data.token, {\n                name: roomName,\n                dominantSpeaker: true\n              }).then(function (room) {\n                setConnecting(false);\n                setRoom(room);\n              }).catch(function (err) {\n                console.error(err);\n                setConnecting(false);\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }(), [roomName, username]); // Ejects the user from the room and puts in the Lobby\n\n  var handleLogout = useCallback(function () {\n    document.title = \"Microsoft Engage 2021\";\n    setRoom(function (prevRoom) {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach(function (trackPub) {\n          if (trackPub.track.kind !== 'data') {\n            trackPub.track.stop();\n          }\n        });\n        prevRoom.disconnect();\n      }\n\n      return null;\n    });\n  }, []);\n  useEffect(function () {\n    if (room) {\n      var tidyUp = function tidyUp(event) {\n        if (event.persisted) {\n          return;\n        }\n\n        if (room) {\n          handleLogout();\n        }\n      };\n\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return function () {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n  var render; // if room already exists then render Room.js\n\n  if (room) {\n    render = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Room, {\n        roomName: roomName,\n        room: room,\n        handleLogout: handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(RoomHeader, {\n          handleLogout: handleLogout,\n          room: room,\n          roomName: roomName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true);\n  } else {\n    // If room doesnt exists then render Lobby.js\n    render = /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"row\",\n      justify: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"HI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(Lobby, {\n          username: username,\n          roomName: roomName,\n          handleRoomNameChange: handleRoomNameChange,\n          handleUsernameChange: handleUsernameChange,\n          handleSubmit: handleSubmit,\n          connecting: connecting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(DisplayPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return render;\n};\n\n_s(VideoChat, \"j83AMPH5PClS5UGuWzDOBR9Qz2Y=\");\n\n_c = VideoChat;\nexport default VideoChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/VideoChat.js"],"names":["React","useState","useCallback","useEffect","Video","Lobby","Room","DisplayPreview","RoomHeader","Grid","VideoChat","username","setUsername","roomName","setRoomName","room","setRoom","connecting","setConnecting","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","connect","token","name","dominantSpeaker","catch","err","console","error","handleLogout","document","title","prevRoom","localParticipant","tracks","forEach","trackPub","track","kind","stop","disconnect","tidyUp","persisted","window","addEventListener","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\nimport DisplayPreview from \"./DisplayPreview\";\nimport RoomHeader from \"./RoomHeader\";\nimport Grid from '@material-ui/core/Grid';\n\n\n// child to App.js\n// VideoChat.js handles data about the chat\n\nconst VideoChat = () => {\n\n  // state variables\n  const [username, setUsername] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n  \n  // Methods to update Username & Roomname when changed\n  const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n  }, []);\n  const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n  }, []);\n\n      // Method to send Username & Roomname to the server\n  // And recieve an access token\n  const handleSubmit = useCallback(\n    async (event) => {\n      event.preventDefault(); //prevents the browser from reload when submitting the form\n      setConnecting(true); // changes the button text to connecting\n      const data = await fetch(\"/video/token\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          identity: username,\n          room: roomName,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => res.json());\n\n      // connects to the room using twilio API\n      Video.connect(data.token, {\n        name: roomName,\n        dominantSpeaker : true\n      }).then((room) => {\n          setConnecting(false);\n          setRoom(room);\n        }).catch((err) => {\n          console.error(err);\n          setConnecting(false);\n        });\n    },\n    [roomName, username]\n  );\n\n  // Ejects the user from the room and puts in the Lobby\n  const handleLogout = useCallback(() => {\n    document.title = \"Microsoft Engage 2021\"\n    setRoom((prevRoom) => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\n          if(trackPub.track.kind !== 'data'){\n            trackPub.track.stop();\n          }\n        });\n        prevRoom.disconnect();\n      }\n      return null;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (room) {\n      const tidyUp = (event) => {\n        if (event.persisted) {\n          return;\n        }\n        if (room) {\n          handleLogout();\n        }\n      };\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return () => {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n\n  let render;\n\n  // if room already exists then render Room.js\n  if (room) {\n    render = (\n      <>\n      <Room roomName={roomName} room={room} handleLogout={handleLogout} />\n      <footer>\n        <RoomHeader handleLogout = {handleLogout} room = {room} roomName = {roomName}/>\n      </footer>\n      </>\n    );\n  } else { \n    // If room doesnt exists then render Lobby.js\n    render = (\n      <Grid container direction = 'row' justify = 'center' spacing = {2}>\n        <h2>HI</h2>\n        <Grid item>\n          <Lobby\n            username={username}\n            roomName={roomName}\n            handleRoomNameChange={handleRoomNameChange}\n            handleUsernameChange={handleUsernameChange}\n            handleSubmit={handleSubmit}\n            connecting={connecting}\n          />\n        </Grid>\n        <Grid item>\n          <DisplayPreview/>\n        </Grid>\n      </Grid>\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}