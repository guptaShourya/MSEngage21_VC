{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV3 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nexport function nonMaxSuppressionV3(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const inputs = args.inputs,\n        backend = args.backend,\n        attrs = args.attrs;\n  const boxes = inputs.boxes,\n        scores = inputs.scores;\n  const maxOutputSize = attrs.maxOutputSize,\n        iouThreshold = attrs.iouThreshold,\n        scoreThreshold = attrs.scoreThreshold;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n\n  const _nonMaxSuppressionV3I = nonMaxSuppressionV3Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold),\n        selectedIndices = _nonMaxSuppressionV3I.selectedIndices;\n\n  return backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\nexport const nonMaxSuppressionV3Config = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV3\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV3.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,YAAtB,EAA8D,mBAA9D,QAAyJ,uBAAzJ;AAEA,MAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAGA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;AACC,EAAA,YAAY,CAAC,IAAb,CACI,0DACA,0CAFJ;AADD,QAKQ,MALR,GAKkC,IALlC,CAKQ,MALR;AAAA,QAKgB,OALhB,GAKkC,IALlC,CAKgB,OALhB;AAAA,QAKyB,KALzB,GAKkC,IALlC,CAKyB,KALzB;AAAA,QAMQ,KANR,GAMyB,MANzB,CAMQ,KANR;AAAA,QAMe,MANf,GAMyB,MANzB,CAMe,MANf;AAAA,QAOQ,aAPR,GAOuD,KAPvD,CAOQ,aAPR;AAAA,QAOuB,YAPvB,GAOuD,KAPvD,CAOuB,YAPvB;AAAA,QAOqC,cAPrC,GAOuD,KAPvD,CAOqC,cAPrC;AASC,QAAM,SAAS,GAAG,OAAO,CAAC,QAAR,CAAiB,KAAK,CAAC,MAAvB,CAAlB;AACA,QAAM,UAAU,GAAG,OAAO,CAAC,QAAR,CAAiB,MAAM,CAAC,MAAxB,CAAnB;;AAVD,gCAY2B,uBAAuB,CAC7C,SAD6C,EAClC,UADkC,EACtB,aADsB,EACP,YADO,EACO,cADP,CAZlD;AAAA,QAYQ,eAZR,yBAYQ,eAZR;;AAeC,SAAO,OAAO,CAAC,cAAR,CACH,CAAC,eAAe,CAAC,MAAjB,CADG,EACuB,OADvB,EACgC,IAAI,UAAJ,CAAe,eAAf,CADhC,CAAP;AAED;AAED,OAAO,MAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,OAFwC;AAGrD,EAAA,UAAU,EAAE;AAHyC,CAAhD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV3, NonMaxSuppressionV3Attrs, NonMaxSuppressionV3Inputs, TypedArray} from '@tensorflow/tfjs-core';\n\nconst nonMaxSuppressionV3Impl = kernel_impls.nonMaxSuppressionV3Impl;\nimport {MathBackendWebGL} from '../backend_webgl';\n\nexport function nonMaxSuppressionV3(args: {\n  inputs: NonMaxSuppressionV3Inputs,\n  backend: MathBackendWebGL,\n  attrs: NonMaxSuppressionV3Attrs\n}) {\n  backend_util.warn(\n      'tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n      'Call tf.nonMaxSuppressionAsync() instead');\n\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold} = attrs;\n\n  const boxesVals = backend.readSync(boxes.dataId) as TypedArray;\n  const scoresVals = backend.readSync(scores.dataId) as TypedArray;\n\n  const {selectedIndices} = nonMaxSuppressionV3Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold);\n\n  return backend.makeTensorInfo(\n      [selectedIndices.length], 'int32', new Int32Array(selectedIndices));\n}\n\nexport const nonMaxSuppressionV3Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV3,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV3 as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}