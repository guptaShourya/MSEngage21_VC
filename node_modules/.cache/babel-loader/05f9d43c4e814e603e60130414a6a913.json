{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js\";\nimport React from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, CssBaseline, Grid, IconButton, List, TextField, Toolbar, Typography, Button, Tooltip } from \"@material-ui/core\";\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat_test from \"./VideoChat_test\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar ChatScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n\n    _this.getToken = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/chat/token\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    identity: email\n                  }),\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                data = _context.sent;\n                return _context.abrupt(\"return\", data.token);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n      var _this$props, email, room, token, client, x, channel, messages, _channel;\n\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n              _this$props = _this.props, email = _this$props.email, room = _this$props.room;\n              token = \"\";\n\n              _this.setState({\n                loading: true\n              });\n\n              _context4.prev = 4;\n              _context4.next = 7;\n              return _this.getToken(email);\n\n            case 7:\n              token = _context4.sent;\n              _context4.next = 13;\n              break;\n\n            case 10:\n              _context4.prev = 10;\n              _context4.t0 = _context4[\"catch\"](4);\n              throw new Error(\"unable to get token, please reload thissss page\");\n\n            case 13:\n              _context4.next = 15;\n              return Chat.Client.create(token);\n\n            case 15:\n              client = _context4.sent;\n              client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context2.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n              client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context3.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              }))); // client.on(\"channelJoined\", async (channel) => {\n              //   // getting list of all messages since this is an existing channel\n              //   const messages = await channel.getMessages();\n              //   this.setState({ messages: messages.items || [] });\n              //   //   this.scrollToBottom();\n              // });\n\n              client.getPublicChannelDescriptors().then(function (res) {\n                x = res;\n              });\n              console.log(x);\n              _context4.prev = 20;\n              console.log(room);\n              _context4.next = 24;\n              return client.getChannelByUniqueName(room);\n\n            case 24:\n              channel = _context4.sent;\n              _context4.next = 27;\n              return _this.joinChannel(channel);\n\n            case 27:\n              _this.setState({\n                channel: channel,\n                loading: false\n              });\n\n              _context4.next = 30;\n              return channel.getMessages();\n\n            case 30:\n              messages = _context4.sent;\n\n              _this.setState({\n                messages: messages.items || []\n              });\n\n              _context4.next = 48;\n              break;\n\n            case 34:\n              _context4.prev = 34;\n              _context4.t1 = _context4[\"catch\"](20);\n              _context4.prev = 36;\n              _context4.next = 39;\n              return client.createChannel({\n                uniqueName: room,\n                friendlyName: room\n              });\n\n            case 39:\n              _channel = _context4.sent;\n              _context4.next = 42;\n              return _this.joinChannel(_channel);\n\n            case 42:\n              _this.setState({\n                channel: _channel,\n                loading: false\n              });\n\n              _context4.next = 48;\n              break;\n\n            case 45:\n              _context4.prev = 45;\n              _context4.t2 = _context4[\"catch\"](36);\n              throw new Error(\"unable to create channel, please reload this page\");\n\n            case 48:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, null, [[4, 10], [20, 34], [36, 45]]);\n    }));\n\n    _this.joinChannel = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(channel) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(channel.channelState.status !== \"joined\")) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return channel.join();\n\n              case 3:\n                channel.on(\"messageAdded\", _this.handleMessageAdded);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleMessageAdded = function (message) {\n      var messages = _this.state.messages;\n\n      _this.setState({\n        messages: !!messages ? [].concat(_toConsumableArray(messages), [message]) : [message]\n      } //   this.scrollToBottom\n      );\n    };\n\n    _this.sendMessage = function () {\n      var _this$state = _this.state,\n          text = _this$state.text,\n          channel = _this$state.channel;\n\n      if (text && String(text).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(text);\n\n        _this.setState({\n          text: \"\",\n          loading: false\n        });\n      }\n    };\n\n    _this.sendMessageExternal = function (info) {\n      var channel = _this.state.channel;\n\n      if (info && String(info).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(info);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.setIsVideo = function (val) {\n      _this.setState({\n        isVideo: val\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isVideo: true\n      });\n    };\n\n    _this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false\n    };\n    _this.scrollDiv = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          text = _this$state2.text,\n          messages = _this$state2.messages,\n          channel = _this$state2.channel,\n          isVideo = _this$state2.isVideo;\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          room = _this$props2.room,\n          setSubmit = _this$props2.setSubmit;\n      var component;\n\n      if (isVideo) {\n        component = /*#__PURE__*/_jsxDEV(VideoChat_test, {\n          username: email,\n          roomName: room,\n          messages: messages,\n          setIsVideo: this.setIsVideo,\n          sendMessage: this.sendMessageExternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 19\n        }, this);\n      } else {\n        component = /*#__PURE__*/_jsxDEV(Container, {\n          component: \"main\",\n          maxWidth: \"md\",\n          style: {\n            maxWidth: \"none\",\n            paddingLeft: \"0px\",\n            background: \"rgb(242, 243, 248)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n            open: loading,\n            style: {\n              zIndex: 99999\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n            elevation: 10,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              style: {\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: \"Room: \".concat(room, \", User: \").concat(email)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row-reverse\",\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Leave\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: function onClick() {\n                        setSubmit();\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ExitToAppOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"2.45rem\",\n                          color: \"white\",\n                          marginTop: '4px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Add others\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      children: /*#__PURE__*/_jsxDEV(GroupAddOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"xxx-large\",\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 186,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Switch to Video call\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.handleClick,\n                      children: /*#__PURE__*/_jsxDEV(VideoCallOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"xxx-large\",\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 193,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: \"18%\",\n                background: \"rgb(242, 243, 248)\",\n                marginRightght: \"15px\",\n                height: \"100vh\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  background: \"black\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: \"80%\",\n                paddingRight: \"15px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                style: styles.mainGrid,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: styles.gridItemChatList,\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    dense: true,\n                    children: messages && messages.map(function (message) {\n                      return /*#__PURE__*/_jsxDEV(ChatItem, {\n                        message: message,\n                        email: email\n                      }, message.index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 211,\n                        columnNumber: 19\n                      }, _this2);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: styles.gridItemMessage,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"row\",\n                    justify: \"center\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      style: styles.textFieldContainer,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        required: true,\n                        style: styles.textField,\n                        placeholder: \"Send a message to everyone\",\n                        variant: \"outlined\",\n                        multiline: true,\n                        rows: 2,\n                        value: text,\n                        disabled: !channel,\n                        onChange: function onChange(event) {\n                          return _this2.setState({\n                            text: event.target.value\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        style: styles.sendButton,\n                        onClick: this.sendMessage,\n                        disabled: !channel || !text,\n                        children: /*#__PURE__*/_jsxDEV(Send, {\n                          style: styles.sendIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 19\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 242,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 241,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }, this);\n      }\n\n      return component;\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1,\n    background: \"white\",\n    borderRadius: \"3px\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  }\n};\nexport default ChatScreen;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js"],"names":["React","AppBar","Backdrop","CircularProgress","Container","CssBaseline","Grid","IconButton","List","TextField","Toolbar","Typography","Button","Tooltip","VideoCallOutlinedIcon","ExitToAppOutlinedIcon","GroupAddOutlinedIcon","Send","ChatItem","VideoChat_test","Chat","require","ChatScreen","props","getToken","email","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","token","componentDidMount","document","getElementsByTagName","style","background","room","setState","loading","Error","Client","create","client","on","updateToken","getPublicChannelDescriptors","x","console","log","getChannelByUniqueName","channel","joinChannel","getMessages","messages","items","createChannel","uniqueName","friendlyName","channelState","status","join","handleMessageAdded","message","state","sendMessage","text","String","trim","sendMessageExternal","info","setIsVideo","val","isVideo","handleClick","scrollDiv","createRef","setSubmit","component","maxWidth","paddingLeft","zIndex","color","justifyContent","position","fontSize","marginTop","width","marginRightght","height","paddingRight","styles","mainGrid","gridItemChatList","map","index","gridItemMessage","textFieldContainer","textField","event","target","value","sendButton","sendIcon","Component","borderWidth","borderColor","flex","marginRight","gridItem","paddingTop","paddingBottom","overflow","marginBottom","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Backdrop,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  IconButton,\n  List,\n  TextField,\n  Toolbar,\n  Typography,\n  Button,\n  Tooltip,\n} from \"@material-ui/core\";\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat_test from \"./VideoChat_test\";\nconst Chat = require(\"twilio-chat\");\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n    };\n\n    this.scrollDiv = React.createRef();\n  };\n  getToken = async (email) => {\n    var data = await fetch(\"/chat/token\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        identity: email,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => res.json());\n    return data.token;\n  };\n\n  componentDidMount = async () => {\n    document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n    const { email, room } = this.props;\n    let token = \"\";\n\n    this.setState({ loading: true });\n\n    try {\n      token = await this.getToken(email);\n    } catch {\n      throw new Error(\"unable to get token, please reload thissss page\");\n    }\n    const client = await Chat.Client.create(token);\n\n    client.on(\"tokenAboutToExpire\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"tokenExpired\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    // client.on(\"channelJoined\", async (channel) => {\n    //   // getting list of all messages since this is an existing channel\n    //   const messages = await channel.getMessages();\n    //   this.setState({ messages: messages.items || [] });\n    //   //   this.scrollToBottom();\n    // });\n    var x;\n    client.getPublicChannelDescriptors().then((res)=>{\n      x = res;\n    })\n    console.log(x);\n    try {\n      console.log(room);\n      const channel = await client.getChannelByUniqueName(room);\n      await this.joinChannel(channel);\n      this.setState({ channel, loading: false });\n      const messages = await channel.getMessages();\n      this.setState({ messages: messages.items || [] });\n    } catch {\n      try {\n        const channel = await client.createChannel({\n          uniqueName: room,\n          friendlyName: room,\n        });\n        await this.joinChannel(channel);\n        this.setState({ channel, loading: false });\n      } catch {\n        throw new Error(\"unable to create channel, please reload this page\");\n      }\n    }\n  };\n\n  joinChannel = async (channel) => {\n    if (channel.channelState.status !== \"joined\") {\n      await channel.join();\n    }\n    channel.on(\"messageAdded\", this.handleMessageAdded);\n  };\n\n  handleMessageAdded = (message) => {\n    const { messages } = this.state;\n    this.setState(\n      {\n        messages: !!messages ? [...messages, message] : [message],\n      },\n      //   this.scrollToBottom\n    );\n  };\n\n  //   scrollToBottom = () => {\n  //     const scrollHeight = this.scrollDiv.current.scrollHeight;\n  //     const height = this.scrollDiv.current.clientHeight;\n  //     const maxScrollTop = scrollHeight - height;\n  //     this.scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  //   };\n\n  sendMessage = () => {\n    const { text, channel } = this.state;\n    if (text && String(text).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(text);\n      this.setState({ text: \"\", loading: false });\n    }\n  };\n\n  sendMessageExternal = (info) => {\n    const { channel } = this.state;\n    if (info && String(info).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(info);\n      this.setState({ loading: false });\n    }\n  }\n\n  setIsVideo = (val) => {\n    this.setState({ isVideo: val });\n  }\n\n  handleClick = () => {\n    this.setState({ isVideo: true });\n  }\n\n  render() {\n    const { loading, text, messages, channel, isVideo } = this.state;\n    const { email, room, setSubmit } = this.props;\n    let component;\n    if (isVideo) {\n      component = <VideoChat_test username={email} roomName={room} messages={messages}\n        setIsVideo={this.setIsVideo} sendMessage={this.sendMessageExternal} />\n    } else {\n      component = <Container component=\"main\" maxWidth=\"md\" style = {{maxWidth:\"none\", paddingLeft: \"0px\", background:\"rgb(242, 243, 248)\"}}>\n        <Backdrop open={loading} style={{ zIndex: 99999 }}>\n          <CircularProgress style={{ color: \"white\" }} />\n        </Backdrop>\n        <AppBar elevation={10}>\n          <Toolbar style={{ justifyContent: 'space-between' }}>\n            <Typography variant=\"h6\">\n              {`Room: ${room}, User: ${email}`}\n            </Typography>\n            <Grid container direction=\"row-reverse\">\n              <Grid item>\n                <Tooltip title=\"Leave\">\n                  <Button onClick = {() => {setSubmit()}}>\n                    <ExitToAppOutlinedIcon style={{ position: 'relative', fontSize: \"2.45rem\", color: \"white\", marginTop :'4px' }}></ExitToAppOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Add others\">\n                  <Button >\n                    <GroupAddOutlinedIcon style={{ position: 'relative', fontSize: \"xxx-large\", color: \"white\" }}></GroupAddOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Switch to Video call\">\n                  <Button onClick={this.handleClick}>\n                    <VideoCallOutlinedIcon style={{ position: 'relative', fontSize: \"xxx-large\", color: \"white\" }}></VideoCallOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        {/* <CssBaseline /> */}\n        <Grid container style = {{width : \"100%\"}}>\n          <Grid item style = {{width :\"18%\", background: \"rgb(242, 243, 248)\", marginRightght: \"15px\", height:\"100vh\"}}>\n            <div style = {{background:\"black\"}}></div>\n          </Grid>\n          <Grid item style = {{width: \"80%\", paddingRight:\"15px\"}}>\n          <Grid container direction=\"column\" style={styles.mainGrid}>\n          <Grid item style={styles.gridItemChatList} >\n            <List dense={true}>\n              {messages &&\n                messages.map((message) => (\n                  <ChatItem\n                    key={message.index}\n                    message={message}\n                    email={email}\n                  />\n                ))}\n            </List>\n          </Grid>\n          <Grid item style={styles.gridItemMessage}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item style={styles.textFieldContainer}>\n                <TextField\n                  required\n                  style={styles.textField}\n                  placeholder=\"Send a message to everyone\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  value={text}\n                  disabled={!channel}\n                  onChange={(event) =>\n                    this.setState({ text: event.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <IconButton\n                  style={styles.sendButton}\n                  onClick={this.sendMessage}\n                  disabled={!channel || !text}\n                >\n                  <Send style={styles.sendIcon} />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n          </Grid>\n        </Grid>\n        \n      </Container>\n    }\n\n    return (\n      component\n    );\n  }\n}\n\nconst styles = {\n  textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n  textFieldContainer: { flex: 1, marginRight: 12 },\n  gridItem: { paddingTop: 12, paddingBottom: 12 },\n  gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n  gridItemMessage: { marginTop: 12, marginBottom: 12 },\n  sendButton: { backgroundColor: \"#3f51b5\" },\n  sendIcon: { color: \"white\" },\n  mainGrid: { paddingTop: 100, borderWidth: 1 , background:\"white\", borderRadius:\"3px\", paddingRight: \"10px\", paddingLeft: \"10px\"},\n};\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}