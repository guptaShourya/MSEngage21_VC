{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropInput } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerInputProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropInput(args) {\n  const inputs = args.inputs,\n        backend = args.backend,\n        attrs = args.attrs;\n  const dy = inputs.dy,\n        filter = inputs.filter;\n  const strides = attrs.strides,\n        dilations = attrs.dilations,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode,\n        inputShape = attrs.inputShape;\n  const convInfo = backend_util.computeConv2DInfo(inputShape, filter.shape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  const program = new DepthwiseConv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\nexport const depthwiseConv2dNativeBackpropInputConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropInput\n};","map":{"version":3,"sources":["../../src/kernels/DepthwiseConv2dNativeBackpropInput.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,kCAAtB,QAA4K,uBAA5K;AAGA,SAAQ,8BAAR,QAA6C,gCAA7C;AAEA,OAAM,SAAU,kCAAV,CAA6C,IAA7C,EAIL;AAAA,QACQ,MADR,GACkC,IADlC,CACQ,MADR;AAAA,QACgB,OADhB,GACkC,IADlC,CACgB,OADhB;AAAA,QACyB,KADzB,GACkC,IADlC,CACyB,KADzB;AAAA,QAEQ,EAFR,GAEsB,MAFtB,CAEQ,EAFR;AAAA,QAEY,MAFZ,GAEsB,MAFtB,CAEY,MAFZ;AAAA,QAGQ,OAHR,GAGgE,KAHhE,CAGQ,OAHR;AAAA,QAGiB,SAHjB,GAGgE,KAHhE,CAGiB,SAHjB;AAAA,QAG4B,GAH5B,GAGgE,KAHhE,CAG4B,GAH5B;AAAA,QAGiC,eAHjC,GAGgE,KAHhE,CAGiC,eAHjC;AAAA,QAGkD,UAHlD,GAGgE,KAHhE,CAGkD,UAHlD;AAKC,QAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,UADa,EACD,MAAM,CAAC,KADN,EACiD,OADjD,EAEb,SAFa,EAEF,GAFE,EAEG,eAFH,EAEoB;AAAK;AAFzB,GAAjB;AAIA,QAAM,OAAO,GAAG,IAAI,8BAAJ,CAAmC,QAAnC,CAAhB;AACA,SAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,EAAD,EAAK,MAAL,CAAjC,EAA+C,SAA/C,CAAP;AACD;AAED,OAAO,MAAM,wCAAwC,GAAiB;AACpE,EAAA,UAAU,EAAE,kCADwD;AAEpE,EAAA,WAAW,EAAE,OAFuD;AAGpE,EAAA,UAAU,EAAE;AAHwD,CAA/D","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeBackpropInput, DepthwiseConv2dNativeBackpropInputAttrs, DepthwiseConv2dNativeBackpropInputInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {DepthwiseConv2DDerInputProgram} from '../conv_backprop_gpu_depthwise';\n\nexport function depthwiseConv2dNativeBackpropInput(args: {\n  inputs: DepthwiseConv2dNativeBackpropInputInputs,\n  attrs: DepthwiseConv2dNativeBackpropInputAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {dy, filter} = inputs;\n  const {strides, dilations, pad, dimRoundingMode, inputShape} = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      inputShape, filter.shape as [number, number, number, number], strides,\n      dilations, pad, dimRoundingMode, true /* depthwise */);\n\n  const program = new DepthwiseConv2DDerInputProgram(convInfo);\n  return backend.runWebGLProgram(program, [dy, filter], 'float32');\n}\n\nexport const depthwiseConv2dNativeBackpropInputConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropInput,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropInput as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}