{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Participant.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nvar Participant = function Participant(_ref) {\n  _s();\n\n  var participant = _ref.participant,\n      local = _ref.local;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoTracks = _useState2[0],\n      setVideoTracks = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      audioTracks = _useState4[0],\n      setAudioTracks = _useState4[1];\n\n  var videoRef = useRef();\n  var audioRef = useRef(); //   // Area:\n  // function Area(Increment, Count, Width, Height, Margin = 10) {\n  //   let i=0, w = 0;\n  //   let h = Increment * 0.75 + (Margin * 2);\n  //   while (i < (Count)) {\n  //       if ((w + Increment) > Width) {\n  //           w = 0;\n  //           h = h + (Increment * 0.75) + (Margin * 2);\n  //       }\n  //       w = w + Increment + (Margin * 2);\n  //       i++;\n  //   }\n  //   if (h > Height) return false;\n  //   else return Increment;\n  // }\n  // // Dish:\n  // function Dish() {\n  //   // variables:\n  //       let Margin = 2;\n  //       let Scenary = document.getElementById('participants');\n  //       let Width = Scenary.offsetWidth - (Margin * 2);\n  //       let Height = Scenary.offsetHeight - (Margin * 2);\n  //       let Cameras = document.getElementsByTagName('video');\n  //       let max = 0;\n  //   // loop (i recommend you optimize this)\n  //       let i = 1;\n  //       while (i < 5000) {\n  //           let w = Area(i, Cameras.length, Width, Height, Margin);\n  //           if (w === false) {\n  //               max =  i - 1;\n  //               break;\n  //           }\n  //           i++;\n  //       }\n  //   // set styles\n  //       max = max - (Margin * 2);\n  //       setWidth(max, Margin);\n  //       console.log(max);\n  // }\n  // // Set Width and Margin \n  // function setWidth(width, margin) {\n  //   let Cameras = document.getElementsByTagName('video');\n  //   for (var s = 0; s < Cameras.length; s++) {\n  //       Cameras[s].style.width = width + \"px\";\n  //       Cameras[s].style.margin = margin + \"px\";\n  //       Cameras[s].style.height = (width * 0.75) + \"px\";\n  //   }\n  // }\n\n  useEffect(function () {\n    var lr = require('rect-scaler');\n\n    var container = document.getElementById('participants');\n    var containerWidth = container.getBoundingClientRect().width;\n    var containerHeight = container.getBoundingClientRect().height;\n    var numRects = document.getElementsByTagName('video').length;\n    var rectWidth = document.getElementsByTagName('video')[0].getBoundingClientRect().width;\n    var rectHeight = document.getElementsByTagName('video')[0].getBoundingClientRect().height;\n    var result = largestRect(containerWidth, containerHeight, numRects, rectWidth, rectHeight);\n    console.log(result);\n  });\n\n  var trackpubsToTracks = function trackpubsToTracks(trackMap) {\n    return Array.from(trackMap.values()).map(function (publication) {\n      return publication.track;\n    }).filter(function (track) {\n      return track !== null;\n    });\n  };\n\n  useEffect(function () {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    var trackSubscribed = function trackSubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return [].concat(_toConsumableArray(videoTracks), [track]);\n        });\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(function (audioTracks) {\n          return [].concat(_toConsumableArray(audioTracks), [track]);\n        });\n      } else if (track.kind === 'data') {\n        track.on('message', function (data) {\n          var node = document.createElement('div');\n          var author = JSON.parse(data)['author'];\n          var message = JSON.parse(data)['data'];\n          var authorspan = document.createElement('span');\n          authorspan.style.fontWeight = 'bold';\n          var authornode = document.createTextNode(author + \": \");\n          authorspan.appendChild(authornode);\n          var textnode = document.createTextNode(message);\n          var textspan = document.createElement('span');\n          textspan.appendChild(textnode);\n          var wrapper = document.createElement('span');\n          wrapper.appendChild(authorspan);\n          wrapper.appendChild(textspan);\n          node.appendChild(wrapper);\n          document.getElementById('text-area').appendChild(node);\n        });\n      }\n    };\n\n    var trackUnsubscribed = function trackUnsubscribed(track) {\n      if (track.kind === \"video\") {\n        setVideoTracks(function (videoTracks) {\n          return videoTracks.filter(function (v) {\n            return v !== track;\n          });\n        });\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(function (audioTracks) {\n          return audioTracks.filter(function (a) {\n            return a !== track;\n          });\n        });\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return function () {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  useEffect(function () {\n    var videoTrack = videoTracks[0];\n\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current); // const blurBackground = new GaussianBlurBackgroundProcessor({\n      //   assetsPath: 'assets'\n      // });\n      // blurBackground.loadModel().then(() => {\n      //     videoTrack.addProcessor(blurBackground);\n      // });\n\n      return function () {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  useEffect(function () {\n    var audioTrack = audioTracks[0];\n\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return function () {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    id: participant.sid,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"overlayName\",\n      children: local ? \"You\" : participant.identity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Participant, \"clf+kKpAqvF2pJ/guTBAp9DH3mM=\");\n\n_c = Participant;\nexport default Participant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","local","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","lr","require","container","document","getElementById","containerWidth","getBoundingClientRect","width","containerHeight","height","numRects","getElementsByTagName","length","rectWidth","rectHeight","result","largestRect","console","log","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","on","data","node","createElement","author","JSON","parse","message","authorspan","style","fontWeight","authornode","createTextNode","appendChild","textnode","textspan","wrapper","trackUnsubscribed","v","a","removeAllListeners","videoTrack","attach","current","detach","audioTrack","sid","identity"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4B;AAAA;;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,kBACRL,QAAQ,CAAC,EAAD,CADA;AAAA;AAAA,MACvCM,WADuC;AAAA,MAC1BC,cAD0B;;AAAA,mBAERP,QAAQ,CAAC,EAAD,CAFA;AAAA;AAAA,MAEvCQ,WAFuC;AAAA,MAE1BC,cAF0B;;AAI9C,MAAMC,QAAQ,GAAGR,MAAM,EAAvB;AACA,MAAMS,QAAQ,GAAGT,MAAM,EAAvB,CAL8C,CAOhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEED,EAAAA,SAAS,CAAC,YAAI;AACZ,QAAMW,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAlB;;AACA,QAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CAAlB;AACA,QAAMC,cAAc,GAAGH,SAAS,CAACI,qBAAV,GAAkCC,KAAzD;AACA,QAAMC,eAAe,GAAGN,SAAS,CAACI,qBAAV,GAAkCG,MAA1D;AACA,QAAMC,QAAQ,GAAGP,QAAQ,CAACQ,oBAAT,CAA8B,OAA9B,EAAuCC,MAAxD;AACA,QAAMC,SAAS,GAAGV,QAAQ,CAACQ,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CL,qBAA1C,GAAkEC,KAApF;AACA,QAAMO,UAAU,GAAGX,QAAQ,CAACQ,oBAAT,CAA8B,OAA9B,EAAuC,CAAvC,EAA0CL,qBAA1C,GAAkEG,MAArF;AACA,QAAMM,MAAM,GAAGC,WAAW,CAACX,cAAD,EAAiBG,eAAjB,EAAkCE,QAAlC,EAA4CG,SAA5C,EAAuDC,UAAvD,CAA1B;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACD,GAVQ,CAAT;;AAYA,MAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD;AAAA,WACxBC,KAAK,CAACC,IAAN,CAAWF,QAAQ,CAACG,MAAT,EAAX,EACGC,GADH,CACO,UAACC,WAAD;AAAA,aAAiBA,WAAW,CAACC,KAA7B;AAAA,KADP,EAEGC,MAFH,CAEU,UAACD,KAAD;AAAA,aAAWA,KAAK,KAAK,IAArB;AAAA,KAFV,CADwB;AAAA,GAA1B;;AAKArC,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,cAAc,CAACwB,iBAAiB,CAAC3B,WAAW,CAACE,WAAb,CAAlB,CAAd;AACAG,IAAAA,cAAc,CAACsB,iBAAiB,CAAC3B,WAAW,CAACI,WAAb,CAAlB,CAAd;;AAEA,QAAMgC,eAAe,GAAG,SAAlBA,eAAkB,CAACF,KAAD,EAAW;AACjC,UAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AAC1BlC,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,8CAAqBA,WAArB,IAAkCgC,KAAlC;AAAA,SAAD,CAAd;AACD,OAFD,MAEO,IAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AACjChC,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,8CAAqBA,WAArB,IAAkC8B,KAAlC;AAAA,SAAD,CAAd;AACD,OAFM,MAEA,IAAIA,KAAK,CAACG,IAAN,KAAe,MAAnB,EAA0B;AAC7BH,QAAAA,KAAK,CAACI,EAAN,CAAS,SAAT,EAAoB,UAAAC,IAAI,EAAI;AAC1B,cAAMC,IAAI,GAAG7B,QAAQ,CAAC8B,aAAT,CAAuB,KAAvB,CAAb;AACA,cAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiB,QAAjB,CAAb;AACA,cAAIM,OAAO,GAAGF,IAAI,CAACC,KAAL,CAAWL,IAAX,EAAiB,MAAjB,CAAd;AACA,cAAMO,UAAU,GAAGnC,QAAQ,CAAC8B,aAAT,CAAuB,MAAvB,CAAnB;AACAK,UAAAA,UAAU,CAACC,KAAX,CAAiBC,UAAjB,GAA8B,MAA9B;AACA,cAAMC,UAAU,GAAGtC,QAAQ,CAACuC,cAAT,CAAwBR,MAAM,GAAG,IAAjC,CAAnB;AACAI,UAAAA,UAAU,CAACK,WAAX,CAAuBF,UAAvB;AACA,cAAMG,QAAQ,GAAGzC,QAAQ,CAACuC,cAAT,CAAwBL,OAAxB,CAAjB;AACA,cAAMQ,QAAQ,GAAG1C,QAAQ,CAAC8B,aAAT,CAAuB,MAAvB,CAAjB;AACAY,UAAAA,QAAQ,CAACF,WAAT,CAAqBC,QAArB;AACA,cAAME,OAAO,GAAG3C,QAAQ,CAAC8B,aAAT,CAAuB,MAAvB,CAAhB;AACAa,UAAAA,OAAO,CAACH,WAAR,CAAoBL,UAApB;AACAQ,UAAAA,OAAO,CAACH,WAAR,CAAoBE,QAApB;AACAb,UAAAA,IAAI,CAACW,WAAL,CAAiBG,OAAjB;AACA3C,UAAAA,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCuC,WAArC,CAAiDX,IAAjD;AACH,SAhBC;AAiBH;AACF,KAxBD;;AA0BA,QAAMe,iBAAiB,GAAG,SAApBA,iBAAoB,CAACrB,KAAD,EAAW;AACnC,UAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AAC1BlC,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,iBAAiBA,WAAW,CAACiC,MAAZ,CAAmB,UAACqB,CAAD;AAAA,mBAAOA,CAAC,KAAKtB,KAAb;AAAA,WAAnB,CAAjB;AAAA,SAAD,CAAd;AACD,OAFD,MAEO,IAAIA,KAAK,CAACG,IAAN,KAAe,OAAnB,EAA4B;AACjChC,QAAAA,cAAc,CAAC,UAACD,WAAD;AAAA,iBAAiBA,WAAW,CAAC+B,MAAZ,CAAmB,UAACsB,CAAD;AAAA,mBAAOA,CAAC,KAAKvB,KAAb;AAAA,WAAnB,CAAjB;AAAA,SAAD,CAAd;AACD;AACF,KAND;;AAQAlC,IAAAA,WAAW,CAACsC,EAAZ,CAAe,iBAAf,EAAkCF,eAAlC;AACApC,IAAAA,WAAW,CAACsC,EAAZ,CAAe,mBAAf,EAAoCiB,iBAApC;AAEA,WAAO,YAAM;AACXpD,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAE,MAAAA,cAAc,CAAC,EAAD,CAAd;AACAL,MAAAA,WAAW,CAAC0D,kBAAZ;AACD,KAJD;AAKD,GA9CQ,EA8CN,CAAC1D,WAAD,CA9CM,CAAT;AAgDAH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAM8D,UAAU,GAAGzD,WAAW,CAAC,CAAD,CAA9B;;AACA,QAAIyD,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACC,MAAX,CAAkBtD,QAAQ,CAACuD,OAA3B,EADc,CAEd;AACA;AACA;AACA;AACA;AACA;;AACA,aAAO,YAAM;AACXF,QAAAA,UAAU,CAACG,MAAX;AACD,OAFD;AAGD;AACF,GAdQ,EAcN,CAAC5D,WAAD,CAdM,CAAT;AAgBAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMkE,UAAU,GAAG3D,WAAW,CAAC,CAAD,CAA9B;;AACA,QAAI2D,UAAJ,EAAgB;AACdA,MAAAA,UAAU,CAACH,MAAX,CAAkBrD,QAAQ,CAACsD,OAA3B;AACA,aAAO,YAAM;AACXE,QAAAA,UAAU,CAACD,MAAX;AACD,OAFD;AAGD;AACF,GARQ,EAQN,CAAC1D,WAAD,CARM,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,EAAE,EAAGJ,WAAW,CAACgE,GAA9C;AAAA,4BACE;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA,6BACE;AAAO,QAAA,GAAG,EAAE1D,QAAZ;AAAsB,QAAA,QAAQ,EAAE;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAIE;AAAO,MAAA,GAAG,EAAEC,QAAZ;AAAsB,MAAA,QAAQ,EAAE,IAAhC;AAAsC,MAAA,KAAK,EAAE;AAA7C;AAAA;AAAA;AAAA;AAAA,aAJF,eAKE;AAAG,MAAA,SAAS,EAAG,aAAf;AAAA,gBAA8BN,KAAK,GAAC,KAAD,GAAOD,WAAW,CAACiE;AAAtD;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CA/JD;;GAAMlE,W;;KAAAA,W;AAiKN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\n\nconst Participant = ({ participant, local }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n  \n  const videoRef = useRef();\n  const audioRef = useRef();\n\n//   // Area:\n// function Area(Increment, Count, Width, Height, Margin = 10) {\n//   let i=0, w = 0;\n//   let h = Increment * 0.75 + (Margin * 2);\n//   while (i < (Count)) {\n//       if ((w + Increment) > Width) {\n//           w = 0;\n//           h = h + (Increment * 0.75) + (Margin * 2);\n//       }\n//       w = w + Increment + (Margin * 2);\n//       i++;\n//   }\n//   if (h > Height) return false;\n//   else return Increment;\n// }\n// // Dish:\n// function Dish() {\n\n//   // variables:\n//       let Margin = 2;\n//       let Scenary = document.getElementById('participants');\n//       let Width = Scenary.offsetWidth - (Margin * 2);\n//       let Height = Scenary.offsetHeight - (Margin * 2);\n//       let Cameras = document.getElementsByTagName('video');\n//       let max = 0;\n  \n//   // loop (i recommend you optimize this)\n//       let i = 1;\n//       while (i < 5000) {\n//           let w = Area(i, Cameras.length, Width, Height, Margin);\n//           if (w === false) {\n//               max =  i - 1;\n//               break;\n//           }\n//           i++;\n//       }\n  \n//   // set styles\n//       max = max - (Margin * 2);\n//       setWidth(max, Margin);\n//       console.log(max);\n// }\n\n// // Set Width and Margin \n// function setWidth(width, margin) {\n//   let Cameras = document.getElementsByTagName('video');\n//   for (var s = 0; s < Cameras.length; s++) {\n//       Cameras[s].style.width = width + \"px\";\n//       Cameras[s].style.margin = margin + \"px\";\n//       Cameras[s].style.height = (width * 0.75) + \"px\";\n//   }\n// }\n\n  useEffect(()=>{\n    const lr = require('rect-scaler');\n    const container = document.getElementById('participants');\n    const containerWidth = container.getBoundingClientRect().width;\n    const containerHeight = container.getBoundingClientRect().height;\n    const numRects = document.getElementsByTagName('video').length;\n    const rectWidth = document.getElementsByTagName('video')[0].getBoundingClientRect().width;\n    const rectHeight = document.getElementsByTagName('video')[0].getBoundingClientRect().height;\n    const result = largestRect(containerWidth, containerHeight, numRects, rectWidth, rectHeight);\n    console.log(result);\n  });\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      } else if (track.kind === 'data'){\n          track.on('message', data => {\n            const node = document.createElement('div');\n            let author = JSON.parse(data)['author'];\n            let message = JSON.parse(data)['data'];\n            const authorspan = document.createElement('span');\n            authorspan.style.fontWeight = 'bold';\n            const authornode = document.createTextNode(author + \": \");\n            authorspan.appendChild(authornode);\n            const textnode = document.createTextNode(message);\n            const textspan = document.createElement('span');\n            textspan.appendChild(textnode);\n            const wrapper = document.createElement('span');\n            wrapper.appendChild(authorspan);\n            wrapper.appendChild(textspan);\n            node.appendChild(wrapper);\n            document.getElementById('text-area').appendChild(node);\n        });\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      } \n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n  \n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      // const blurBackground = new GaussianBlurBackgroundProcessor({\n      //   assetsPath: 'assets'\n      // });\n      // blurBackground.loadModel().then(() => {\n      //     videoTrack.addProcessor(blurBackground);\n      // });\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return (\n    <div className=\"participant\" id ={participant.sid}>\n      <div className = 'video-container'>\n        <video ref={videoRef} autoPlay={true}/>\n      </div>\n      <audio ref={audioRef} autoPlay={true} muted={false} />\n      <p className = 'overlayName'>{local?\"You\":participant.identity}</p>\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}