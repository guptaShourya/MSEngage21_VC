{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV4 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\nexport function nonMaxSuppressionV4(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  const inputs = args.inputs,\n        backend = args.backend,\n        attrs = args.attrs;\n  const boxes = inputs.boxes,\n        scores = inputs.scores;\n  const maxOutputSize = attrs.maxOutputSize,\n        iouThreshold = attrs.iouThreshold,\n        scoreThreshold = attrs.scoreThreshold,\n        padToMaxOutputSize = attrs.padToMaxOutputSize;\n  const boxesVals = backend.readSync(boxes.dataId);\n  const scoresVals = backend.readSync(scores.dataId);\n\n  const _nonMaxSuppressionV4I = nonMaxSuppressionV4Impl(boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize),\n        selectedIndices = _nonMaxSuppressionV4I.selectedIndices,\n        validOutputs = _nonMaxSuppressionV4I.validOutputs;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))];\n}\nexport const nonMaxSuppressionV4Config = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV4.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,YAAtB,EAA8D,mBAA9D,QAAqK,uBAArK;AACA,MAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAIA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;AACC,EAAA,YAAY,CAAC,IAAb,CACI,0DACA,0CAFJ;AADD,QAKQ,MALR,GAKkC,IALlC,CAKQ,MALR;AAAA,QAKgB,OALhB,GAKkC,IALlC,CAKgB,OALhB;AAAA,QAKyB,KALzB,GAKkC,IALlC,CAKyB,KALzB;AAAA,QAMQ,KANR,GAMyB,MANzB,CAMQ,KANR;AAAA,QAMe,MANf,GAMyB,MANzB,CAMe,MANf;AAAA,QAOQ,aAPR,GAQK,KARL,CAOQ,aAPR;AAAA,QAOuB,YAPvB,GAQK,KARL,CAOuB,YAPvB;AAAA,QAOqC,cAPrC,GAQK,KARL,CAOqC,cAPrC;AAAA,QAOqD,kBAPrD,GAQK,KARL,CAOqD,kBAPrD;AAUC,QAAM,SAAS,GAAG,OAAO,CAAC,QAAR,CAAiB,KAAK,CAAC,MAAvB,CAAlB;AACA,QAAM,UAAU,GAAG,OAAO,CAAC,QAAR,CAAiB,MAAM,CAAC,MAAxB,CAAnB;;AAXD,gCAayC,uBAAuB,CAC3D,SAD2D,EAChD,UADgD,EACpC,aADoC,EACrB,YADqB,EACP,cADO,EAE3D,kBAF2D,CAbhE;AAAA,QAaQ,eAbR,yBAaQ,eAbR;AAAA,QAayB,YAbzB,yBAayB,YAbzB;;AAiBC,SAAO,CACL,OAAO,CAAC,cAAR,CACI,CAAC,eAAe,CAAC,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAI,UAAJ,CAAe,eAAf,CADvC,CADK,EAGL,OAAO,CAAC,cAAR,CAAuB,EAAvB,EAA2B,OAA3B,EAAoC,IAAI,UAAJ,CAAe,CAAC,YAAD,CAAf,CAApC,CAHK,CAAP;AAKD;AAED,OAAO,MAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,OAFwC;AAGrD,EAAA,UAAU,EAAE;AAHyC,CAAhD","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, kernel_impls, KernelConfig, KernelFunc, NonMaxSuppressionV4, NonMaxSuppressionV4Attrs, NonMaxSuppressionV4Inputs, TensorInfo, TypedArray} from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV4Impl = kernel_impls.nonMaxSuppressionV4Impl;\n\nimport {MathBackendWebGL} from '../backend_webgl';\n\nexport function nonMaxSuppressionV4(args: {\n  inputs: NonMaxSuppressionV4Inputs,\n  backend: MathBackendWebGL,\n  attrs: NonMaxSuppressionV4Attrs\n}): [TensorInfo, TensorInfo] {\n  backend_util.warn(\n      'tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n      'Call tf.nonMaxSuppressionAsync() instead');\n\n  const {inputs, backend, attrs} = args;\n  const {boxes, scores} = inputs;\n  const {maxOutputSize, iouThreshold, scoreThreshold, padToMaxOutputSize} =\n      attrs;\n\n  const boxesVals = backend.readSync(boxes.dataId) as TypedArray;\n  const scoresVals = backend.readSync(scores.dataId) as TypedArray;\n\n  const {selectedIndices, validOutputs} = nonMaxSuppressionV4Impl(\n      boxesVals, scoresVals, maxOutputSize, iouThreshold, scoreThreshold,\n      padToMaxOutputSize);\n\n  return [\n    backend.makeTensorInfo(\n        [selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n    backend.makeTensorInfo([], 'int32', new Int32Array([validOutputs]))\n  ];\n}\n\nexport const nonMaxSuppressionV4Config: KernelConfig = {\n  kernelName: NonMaxSuppressionV4,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV4 as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}