{"ast":null,"code":"import _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, Min, util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from './Reshape';\nimport { transpose } from './Transpose';\nexport function min(args) {\n  const inputs = args.inputs,\n        backend = args.backend,\n        attrs = args.attrs;\n  const x = inputs.x;\n  const axis = attrs.axis,\n        keepDims = attrs.keepDims;\n  const xRank = x.shape.length;\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let permutedX = x;\n\n  if (permutedAxes != null) {\n    permutedX = transpose({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, xRank);\n\n  const _backend_util$compute = backend_util.computeOutAndReduceShapes(permutedX.shape, axes),\n        _backend_util$compute2 = _slicedToArray(_backend_util$compute, 2),\n        outShape = _backend_util$compute2[0],\n        reduceShape = _backend_util$compute2[1];\n\n  const inSize = util.sizeFromShape(reduceShape);\n  const a2D = reshape({\n    inputs: {\n      x: permutedX\n    },\n    backend,\n    attrs: {\n      shape: [-1, inSize]\n    }\n  });\n  const reduced = reduce(a2D, a2D.dtype, 'min', backend);\n  let res;\n\n  if (keepDims) {\n    const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend,\n      attrs: {\n        shape: newShape\n      }\n    });\n  } else {\n    res = reshape({\n      inputs: {\n        x: reduced\n      },\n      backend,\n      attrs: {\n        shape: outShape\n      }\n    });\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\nexport const minConfig = {\n  kernelName: Min,\n  backendName: 'webgl',\n  kernelFunc: min\n};","map":{"version":3,"sources":["../../src/kernels/Min.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, KernelConfig, KernelFunc, Min, MinAttrs, MinInputs, TensorInfo, util} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {reduce} from '../kernel_utils/reduce';\n\nimport {reshape} from './Reshape';\nimport {transpose} from './Transpose';\n\nexport function min(\n    args: {inputs: MinInputs, backend: MathBackendWebGL, attrs: MinAttrs}):\n    TensorInfo {\n  const {inputs, backend, attrs} = args;\n  const {x} = inputs;\n  const {axis, keepDims} = attrs;\n\n  const xRank = x.shape.length;\n\n  const origAxes = util.parseAxisParam(axis, x.shape);\n  let axes = origAxes;\n  const permutedAxes = backend_util.getAxesPermutation(axes, xRank);\n  let permutedX = x;\n  if (permutedAxes != null) {\n    permutedX = transpose({inputs: {x}, backend, attrs: {perm: permutedAxes}});\n    axes = backend_util.getInnerMostAxes(axes.length, x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('min', axes, xRank);\n  const [outShape, reduceShape] =\n      backend_util.computeOutAndReduceShapes(permutedX.shape, axes);\n  const inSize = util.sizeFromShape(reduceShape);\n  const a2D =\n      reshape({inputs: {x: permutedX}, backend, attrs: {shape: [-1, inSize]}});\n  const reduced = reduce(a2D, a2D.dtype, 'min', backend);\n\n  let res;\n  if (keepDims) {\n    const newShape = backend_util.expandShapeToKeepDim(outShape, origAxes);\n    res = reshape({inputs: {x: reduced}, backend, attrs: {shape: newShape}});\n  } else {\n    res = reshape({inputs: {x: reduced}, backend, attrs: {shape: outShape}});\n  }\n\n  backend.disposeIntermediateTensorInfo(a2D);\n  backend.disposeIntermediateTensorInfo(reduced);\n\n  if (permutedAxes != null) {\n    backend.disposeIntermediateTensorInfo(permutedX);\n  }\n\n  return res;\n}\n\nexport const minConfig: KernelConfig = {\n  kernelName: Min,\n  backendName: 'webgl',\n  kernelFunc: min as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}