{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/test.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback } from \"react\";\nimport Lobby from \"./Lobby\";\nimport ChatScreen from \"./ChatUtils\";\nimport './App.css'; // child to App.js\n// VideoChat.js handles data about the chat\n\nvar Test = function Test() {\n  _s();\n\n  // state variables\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1]; //username\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomName = _useState4[0],\n      setRoomName = _useState4[1]; //roomname\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submit = _useState6[0],\n      setSubmit = _useState6[1]; //\n\n\n  var connecting = false; //update username on change\n\n  var handleUsernameChange = useCallback(function (event) {\n    setUsername(event.target.value);\n  }, []); // update room name on change\n\n  var handleRoomNameChange = useCallback(function (event) {\n    setRoomName(event.target.value);\n  }, []); // change component to chat screen\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setSubmit(!submit);\n  };\n\n  var render; // if logged in\n\n  if (submit) {\n    render = /*#__PURE__*/_jsxDEV(ChatScreen, {\n      email: username,\n      room: roomName,\n      setSubmit: setSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, _this);\n  } else {\n    // if not logged in\n    render = /*#__PURE__*/_jsxDEV(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      connecting: connecting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return render;\n};\n\n_s(Test, \"ansXiOX2tq7KfY/couz/LAKm7N8=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/test.js"],"names":["React","useState","useCallback","Lobby","ChatScreen","Test","username","setUsername","roomName","setRoomName","submit","setSubmit","connecting","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,WAAP,C,CACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAEjB;AAFiB,kBAGeJ,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,MAGVK,QAHU;AAAA,MAGAC,WAHA,kBAG6B;;;AAH7B,mBAIeN,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIVO,QAJU;AAAA,MAIAC,WAJA,kBAI6B;;;AAJ7B,mBAKWR,QAAQ,CAAC,KAAD,CALnB;AAAA;AAAA,MAKVS,MALU;AAAA,MAKFC,SALE,kBAK4B;;;AAC7C,MAAMC,UAAU,GAAG,KAAnB,CANiB,CAQjB;;AACA,MAAMC,oBAAoB,GAAGX,WAAW,CAAC,UAACY,KAAD,EAAW;AAClDP,IAAAA,WAAW,CAACO,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC,CATiB,CAajB;;AACA,MAAMC,oBAAoB,GAAGf,WAAW,CAAC,UAACY,KAAD,EAAW;AAClDL,IAAAA,WAAW,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC,CAdiB,CAkBjB;;AACA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACJ,KAAD,EAAS;AAC1BA,IAAAA,KAAK,CAACK,cAAN;AACAR,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAHH;;AAMA,MAAIU,MAAJ,CAzBiB,CA2BjB;;AACA,MAAIV,MAAJ,EAAY;AACVU,IAAAA,MAAM,gBACJ,QAAC,UAAD;AAAY,MAAA,KAAK,EAAId,QAArB;AAA+B,MAAA,IAAI,EAAIE,QAAvC;AAAiD,MAAA,SAAS,EAAIG;AAA9D;AAAA;AAAA;AAAA;AAAA,aADF;AAGD,GAJD,MAIO;AACL;AACAS,IAAAA,MAAM,gBACJ,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEd,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAEK,oBAHxB;AAIE,MAAA,oBAAoB,EAAEI,oBAJxB;AAKE,MAAA,YAAY,EAAEC,YALhB;AAME,MAAA,UAAU,EAAEN;AANd;AAAA;AAAA;AAAA;AAAA,aADF;AAUD;;AACD,SAAOQ,MAAP;AACD,CA9CD;;GAAMf,I;;KAAAA,I;AAgDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useCallback } from \"react\";\nimport Lobby from \"./Lobby\";\nimport ChatScreen from \"./ChatUtils\";\nimport './App.css';\n// child to App.js\n// VideoChat.js handles data about the chat\n\nconst Test = () => {\n\n  // state variables\n  const [username, setUsername] = useState(\"\"); //username\n  const [roomName, setRoomName] = useState(\"\"); //roomname\n  const [submit, setSubmit] = useState(false); //\n  const connecting = false;\n  \n  //update username on change\n  const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n  }, []);\n\n  // update room name on change\n  const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n  }, []);\n\n  // change component to chat screen\n  const handleSubmit = (event)=>{\n      event.preventDefault();\n      setSubmit(!submit);\n    }\n\n\n  let render;\n\n  // if logged in\n  if (submit) {\n    render = (\n      <ChatScreen email = {username} room = {roomName} setSubmit = {setSubmit}/>\n    );\n  } else { \n    // if not logged in\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n        connecting={connecting}\n      />\n    );\n  }\n  return render;\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}