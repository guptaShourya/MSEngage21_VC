{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/RoomHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport CallEndIcon from '@material-ui/icons/CallEndTwoTone';\nimport VideocamIcon from '@material-ui/icons/VideocamTwoTone';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffTwoTone';\nimport MicIcon from '@material-ui/icons/MicTwoTone';\nimport MicOffIcon from '@material-ui/icons/MicOffTwoTone';\nimport GroupAddIcon from '@material-ui/icons/GroupAddTwoTone';\nimport DialogBox from './DialogBox';\nimport Participant from './Participant';\n\nconst RoomHeader = ({\n  handleLogout,\n  room\n}) => {\n  _s();\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        isMic = _useState2[0],\n        setIsMic = _useState2[1];\n\n  const _useState3 = useState(true),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isCamera = _useState4[0],\n        setIsCamera = _useState4[1];\n\n  const handleMic = () => {\n    setIsMic(!isMic);\n  };\n\n  const handleVideo = () => {\n    if (isCamera) {\n      room.localParticipant.videoTracks.forEach(publication => {\n        publication.track.stop();\n        publication.unpublish();\n      });\n    } else {\n      const _require = require('twilio-video'),\n            createLocalVideoTrack = _require.createLocalVideoTrack;\n\n      createLocalVideoTrack().then(localVideoTrack => {\n        return room.localParticipant.publishTrack(localVideoTrack);\n      }).then(publication => {\n        console.log('Successfully unmuted your video:', publication);\n      });\n    }\n\n    setIsCamera(!isCamera);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"toolbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleVideo,\n        children: isCamera ? /*#__PURE__*/_jsxDEV(VideocamIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(VideocamOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMic,\n        children: !isMic ? /*#__PURE__*/_jsxDEV(MicIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(MicOffIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 32\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        style: {\n          backgroundColor: \"#ff484e\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CallEndIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(GroupAddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n};\n\n_s(RoomHeader, \"WilcwSbn0xqdrTLo3yuQ4+ggZdI=\");\n\n_c = RoomHeader;\nexport default RoomHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoomHeader\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/RoomHeader.js"],"names":["React","useState","CallEndIcon","VideocamIcon","VideocamOffIcon","MicIcon","MicOffIcon","GroupAddIcon","DialogBox","Participant","RoomHeader","handleLogout","room","isMic","setIsMic","isCamera","setIsCamera","handleMic","handleVideo","localParticipant","videoTracks","forEach","publication","track","stop","unpublish","require","createLocalVideoTrack","then","localVideoTrack","publishTrack","console","log","backgroundColor"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,WAAP,MAAwB,mCAAxB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA0B;AAAA;;AAAA,oBAEfX,QAAQ,CAAC,IAAD,CAFO;AAAA;AAAA,QAElCY,KAFkC;AAAA,QAE3BC,QAF2B;;AAAA,qBAGTb,QAAQ,CAAC,IAAD,CAHC;AAAA;AAAA,QAGlCc,QAHkC;AAAA,QAGxBC,WAHwB;;AAKzC,QAAMC,SAAS,GAAG,MAAM;AACtBH,IAAAA,QAAQ,CAAC,CAACD,KAAF,CAAR;AACD,GAFD;;AAGA,QAAMK,WAAW,GAAG,MAAM;AACxB,QAAGH,QAAH,EAAY;AACVH,MAAAA,IAAI,CAACO,gBAAL,CAAsBC,WAAtB,CAAkCC,OAAlC,CAA0CC,WAAW,IAAI;AACvDA,QAAAA,WAAW,CAACC,KAAZ,CAAkBC,IAAlB;AACAF,QAAAA,WAAW,CAACG,SAAZ;AACD,OAHD;AAID,KALD,MAKK;AAAA,uBAC+BC,OAAO,CAAC,cAAD,CADtC;AAAA,YACKC,qBADL,YACKA,qBADL;;AAEHA,MAAAA,qBAAqB,GAAGC,IAAxB,CAA6BC,eAAe,IAAI;AAC9C,eAAOjB,IAAI,CAACO,gBAAL,CAAsBW,YAAtB,CAAmCD,eAAnC,CAAP;AACD,OAFD,EAEGD,IAFH,CAEQN,WAAW,IAAI;AACrBS,QAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDV,WAAhD;AACD,OAJD;AAKD;;AACDN,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAfD;;AAgBA,sBACE;AAAK,IAAA,EAAE,EAAG,SAAV;AAAA,4BAEE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAIG,WAAnB;AAAA,kBACCH,QAAQ,gBAAC,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,gBAAD,gBAAiB,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAD1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAIE,SAAnB;AAAA,kBACG,CAACJ,KAAD,gBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAP,gBAAkB,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAcE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAIF,YAAnB;AAAiC,QAAA,KAAK,EAAI;AAACsB,UAAAA,eAAe,EAAC;AAAjB,SAA1C;AAAA,+BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF,eAoBE;AAAA,6BACE;AAAA,+BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BH,CArDD;;GAAMvB,U;;KAAAA,U;AAsDN,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport CallEndIcon from '@material-ui/icons/CallEndTwoTone';\nimport VideocamIcon from '@material-ui/icons/VideocamTwoTone';\nimport VideocamOffIcon from '@material-ui/icons/VideocamOffTwoTone';\nimport MicIcon from '@material-ui/icons/MicTwoTone';\nimport MicOffIcon from '@material-ui/icons/MicOffTwoTone';\nimport GroupAddIcon from '@material-ui/icons/GroupAddTwoTone';\nimport DialogBox from './DialogBox';\nimport Participant from './Participant';\n\nconst RoomHeader = ({handleLogout, room}) => {\n\n    const [isMic, setIsMic] = useState(true);\n    const [isCamera, setIsCamera] = useState(true);\n\n    const handleMic = () => {\n      setIsMic(!isMic);\n    }\n    const handleVideo = () => {\n      if(isCamera){\n        room.localParticipant.videoTracks.forEach(publication => {\n          publication.track.stop();\n          publication.unpublish();\n        });\n      }else{\n        const { createLocalVideoTrack } = require('twilio-video');\n        createLocalVideoTrack().then(localVideoTrack => {\n          return room.localParticipant.publishTrack(localVideoTrack);\n        }).then(publication => {\n          console.log('Successfully unmuted your video:', publication);\n        });\n      }\n      setIsCamera(!isCamera);\n    }\n    return(\n      <div id = \"toolbar\">\n        {/* video camera icon */}\n        <div>\n          <button onClick = {handleVideo}>\n          {isCamera?<VideocamIcon/>:<VideocamOffIcon/>}\n          </button>\n        </div>\n        {/* microphone icon */}\n        <div>\n          <button onClick = {handleMic}>\n            {!isMic?<MicIcon/>:<MicOffIcon/>}\n          </button>\n        </div>\n        {/* End call icon */}\n        <div>\n          <button onClick = {handleLogout} style = {{backgroundColor:\"#ff484e\"}}>\n            <CallEndIcon/>\n          </button>\n        </div>\n        {/* Add others icon */}\n        <div>\n          <button>\n            <GroupAddIcon/>\n          </button>\n        </div>\n\n      </div>\n  );\n}\nexport default RoomHeader;"]},"metadata":{},"sourceType":"module"}