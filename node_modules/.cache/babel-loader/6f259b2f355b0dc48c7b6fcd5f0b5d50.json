{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar DataSessionList;\nvar DataSessionPage;\nvar DataSessionInstance;\n/* jshint ignore:start */\n\n/**\n * Initialize the DataSessionList\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n * @param {string} simSid -\n *          The SID of the Sim resource that the Data Session is for\n */\n\n/* jshint ignore:end */\n\nDataSessionList = function DataSessionList(version, simSid) {\n  /* jshint ignore:start */\n\n  /**\n   * @function dataSessions\n   * @memberof Twilio.Wireless.V1.SimContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext.DataSessionContext}\n   */\n\n  /* jshint ignore:end */\n  function DataSessionListInstance(sid) {\n    return DataSessionListInstance.get(sid);\n  }\n\n  DataSessionListInstance._version = version; // Path Solution\n\n  DataSessionListInstance._solution = {\n    simSid: simSid\n  };\n  DataSessionListInstance._uri = \"/Sims/\".concat(simSid, \"/DataSessions\");\n  /* jshint ignore:start */\n\n  /**\n   * Streams DataSessionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  DataSessionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists DataSessionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DataSessionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of DataSessionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DataSessionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DataSessionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of DataSessionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DataSessionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DataSessionPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  DataSessionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DataSessionListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DataSessionListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DataSessionPage\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DataSessionSolution} solution - Path solution\n *\n * @returns DataSessionPage\n */\n\n/* jshint ignore:end */\n\n\nDataSessionPage = function DataSessionPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DataSessionPage.prototype, Page.prototype);\n\nDataSessionPage.prototype.constructor = DataSessionPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of DataSessionInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionPage#\n *\n * @param {DataSessionPayload} payload - Payload response from the API\n *\n * @returns DataSessionInstance\n */\n\n/* jshint ignore:end */\n\nDataSessionPage.prototype.getInstance = function getInstance(payload) {\n  return new DataSessionInstance(this._version, payload, this._solution.simSid);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDataSessionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDataSessionPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DataSessionContext\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} simSid -\n *          The SID of the Sim resource that the Data Session is for\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} radioLink -\n *          The generation of wireless technology that the device was using\n * @property {string} operatorMcc -\n *          The 'mobile country code' is the unique ID of the home country where the Data Session took place\n * @property {string} operatorMnc -\n *          The 'mobile network code' is the unique ID specific to the mobile operator network where the Data Session took place\n * @property {string} operatorCountry -\n *          The three letter country code representing where the device's Data Session took place\n * @property {string} operatorName -\n *          The friendly name of the mobile operator network that the SIM-connected device is attached to\n * @property {string} cellId -\n *          The unique ID of the cellular tower that the device was attached to at the moment when the Data Session was last updated\n * @property {object} cellLocationEstimate -\n *          An object with the estimated location where the device's Data Session took place\n * @property {number} packetsUploaded -\n *          The number of packets uploaded by the device between the start time and when the Data Session was last updated\n * @property {number} packetsDownloaded -\n *          The number of packets downloaded by the device between the start time and when the Data Session was last updated\n * @property {Date} lastUpdated -\n *          The date that the resource was last updated, given as GMT in ISO 8601 format\n * @property {Date} start -\n *          The date that the Data Session started, given as GMT in ISO 8601 format\n * @property {Date} end -\n *          The date that the record ended, given as GMT in ISO 8601 format\n * @property {string} imei - The unique ID of the device using the SIM to connect\n *\n * @param {V1} version - Version of the resource\n * @param {DataSessionPayload} payload - The instance payload\n * @param {sid_like} simSid -\n *          The SID of the Sim resource that the Data Session is for\n */\n\n/* jshint ignore:end */\n\n\nDataSessionInstance = function DataSessionInstance(version, payload, simSid) {\n  this._version = version; // Marshaled Properties\n\n  this.sid = payload.sid; // jshint ignore:line\n\n  this.simSid = payload.sim_sid; // jshint ignore:line\n\n  this.accountSid = payload.account_sid; // jshint ignore:line\n\n  this.radioLink = payload.radio_link; // jshint ignore:line\n\n  this.operatorMcc = payload.operator_mcc; // jshint ignore:line\n\n  this.operatorMnc = payload.operator_mnc; // jshint ignore:line\n\n  this.operatorCountry = payload.operator_country; // jshint ignore:line\n\n  this.operatorName = payload.operator_name; // jshint ignore:line\n\n  this.cellId = payload.cell_id; // jshint ignore:line\n\n  this.cellLocationEstimate = payload.cell_location_estimate; // jshint ignore:line\n\n  this.packetsUploaded = deserialize.integer(payload.packets_uploaded); // jshint ignore:line\n\n  this.packetsDownloaded = deserialize.integer(payload.packets_downloaded); // jshint ignore:line\n\n  this.lastUpdated = deserialize.iso8601DateTime(payload.last_updated); // jshint ignore:line\n\n  this.start = deserialize.iso8601DateTime(payload.start); // jshint ignore:line\n\n  this.end = deserialize.iso8601DateTime(payload.end); // jshint ignore:line\n\n  this.imei = payload.imei; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    simSid: simSid\n  };\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDataSessionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDataSessionInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DataSessionList: DataSessionList,\n  DataSessionPage: DataSessionPage,\n  DataSessionInstance: DataSessionInstance\n};","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio/lib/rest/wireless/v1/sim/dataSession.js"],"names":["Q","require","_","util","Page","deserialize","values","DataSessionList","DataSessionPage","DataSessionInstance","version","simSid","DataSessionListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","sim_sid","accountSid","account_sid","radioLink","radio_link","operatorMcc","operator_mcc","operatorMnc","operator_mnc","operatorCountry","operator_country","operatorName","operator_name","cellId","cell_id","cellLocationEstimate","cell_location_estimate","packetsUploaded","integer","packets_uploaded","packetsDownloaded","packets_downloaded","lastUpdated","iso8601DateTime","last_updated","start","end","imei","_context","undefined","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar DataSessionList;\nvar DataSessionPage;\nvar DataSessionInstance;\n\n/* jshint ignore:start */\n/**\n * Initialize the DataSessionList\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionList\n *\n * @param {Twilio.Wireless.V1} version - Version of the resource\n * @param {string} simSid -\n *          The SID of the Sim resource that the Data Session is for\n */\n/* jshint ignore:end */\nDataSessionList = function DataSessionList(version, simSid) {\n  /* jshint ignore:start */\n  /**\n   * @function dataSessions\n   * @memberof Twilio.Wireless.V1.SimContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Wireless.V1.SimContext.DataSessionContext}\n   */\n  /* jshint ignore:end */\n  function DataSessionListInstance(sid) {\n    return DataSessionListInstance.get(sid);\n  }\n\n  DataSessionListInstance._version = version;\n  // Path Solution\n  DataSessionListInstance._solution = {simSid: simSid};\n  DataSessionListInstance._uri = `/Sims/${simSid}/DataSessions`;\n  /* jshint ignore:start */\n  /**\n   * Streams DataSessionInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  DataSessionListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists DataSessionInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DataSessionListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of DataSessionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DataSessionListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DataSessionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of DataSessionInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DataSessionListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DataSessionPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Wireless.V1.SimContext.DataSessionList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  DataSessionListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DataSessionListInstance[util.inspect.custom] = function inspect(depth, options)\n      {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DataSessionListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DataSessionPage\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DataSessionSolution} solution - Path solution\n *\n * @returns DataSessionPage\n */\n/* jshint ignore:end */\nDataSessionPage = function DataSessionPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DataSessionPage.prototype, Page.prototype);\nDataSessionPage.prototype.constructor = DataSessionPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of DataSessionInstance\n *\n * @function getInstance\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionPage#\n *\n * @param {DataSessionPayload} payload - Payload response from the API\n *\n * @returns DataSessionInstance\n */\n/* jshint ignore:end */\nDataSessionPage.prototype.getInstance = function getInstance(payload) {\n  return new DataSessionInstance(this._version, payload, this._solution.simSid);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDataSessionPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDataSessionPage.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DataSessionContext\n *\n * @constructor Twilio.Wireless.V1.SimContext.DataSessionInstance\n *\n * @property {string} sid - The unique string that identifies the resource\n * @property {string} simSid -\n *          The SID of the Sim resource that the Data Session is for\n * @property {string} accountSid - The SID of the Account that created the resource\n * @property {string} radioLink -\n *          The generation of wireless technology that the device was using\n * @property {string} operatorMcc -\n *          The 'mobile country code' is the unique ID of the home country where the Data Session took place\n * @property {string} operatorMnc -\n *          The 'mobile network code' is the unique ID specific to the mobile operator network where the Data Session took place\n * @property {string} operatorCountry -\n *          The three letter country code representing where the device's Data Session took place\n * @property {string} operatorName -\n *          The friendly name of the mobile operator network that the SIM-connected device is attached to\n * @property {string} cellId -\n *          The unique ID of the cellular tower that the device was attached to at the moment when the Data Session was last updated\n * @property {object} cellLocationEstimate -\n *          An object with the estimated location where the device's Data Session took place\n * @property {number} packetsUploaded -\n *          The number of packets uploaded by the device between the start time and when the Data Session was last updated\n * @property {number} packetsDownloaded -\n *          The number of packets downloaded by the device between the start time and when the Data Session was last updated\n * @property {Date} lastUpdated -\n *          The date that the resource was last updated, given as GMT in ISO 8601 format\n * @property {Date} start -\n *          The date that the Data Session started, given as GMT in ISO 8601 format\n * @property {Date} end -\n *          The date that the record ended, given as GMT in ISO 8601 format\n * @property {string} imei - The unique ID of the device using the SIM to connect\n *\n * @param {V1} version - Version of the resource\n * @param {DataSessionPayload} payload - The instance payload\n * @param {sid_like} simSid -\n *          The SID of the Sim resource that the Data Session is for\n */\n/* jshint ignore:end */\nDataSessionInstance = function DataSessionInstance(version, payload, simSid) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.sid = payload.sid; // jshint ignore:line\n  this.simSid = payload.sim_sid; // jshint ignore:line\n  this.accountSid = payload.account_sid; // jshint ignore:line\n  this.radioLink = payload.radio_link; // jshint ignore:line\n  this.operatorMcc = payload.operator_mcc; // jshint ignore:line\n  this.operatorMnc = payload.operator_mnc; // jshint ignore:line\n  this.operatorCountry = payload.operator_country; // jshint ignore:line\n  this.operatorName = payload.operator_name; // jshint ignore:line\n  this.cellId = payload.cell_id; // jshint ignore:line\n  this.cellLocationEstimate = payload.cell_location_estimate; // jshint ignore:line\n  this.packetsUploaded = deserialize.integer(payload.packets_uploaded); // jshint ignore:line\n  this.packetsDownloaded = deserialize.integer(payload.packets_downloaded); // jshint ignore:line\n  this.lastUpdated = deserialize.iso8601DateTime(payload.last_updated); // jshint ignore:line\n  this.start = deserialize.iso8601DateTime(payload.start); // jshint ignore:line\n  this.end = deserialize.iso8601DateTime(payload.end); // jshint ignore:line\n  this.imei = payload.imei; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {simSid: simSid, };\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Wireless.V1.SimContext.DataSessionInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDataSessionInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDataSessionInstance.prototype[util.inspect.custom] = function inspect(depth,\n    options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DataSessionList: DataSessionList,\n  DataSessionPage: DataSessionPage,\n  DataSessionInstance: DataSessionInstance\n};\n"]},"metadata":{},"sourceType":"script"}