{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js\";\nimport React from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, Grid, IconButton, List, TextField, Toolbar, Typography, Button, Tooltip } from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat from \"./VideoChat\";\nimport getToken from \"./getChatToken\";\nimport joinChat from \"./joinChatRoom\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar ChatScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n\n    _this.setLoading = function (val) {\n      _this.setState({\n        loading: val\n      });\n    };\n\n    _this.setChannel = function (val) {\n      _this.setState({\n        channel: val\n      });\n    };\n\n    _this.setMessages = function (val) {\n      _this.setState({\n        messages: val\n      });\n    };\n\n    _this.setChannelList = function (val) {\n      _this.setState({\n        channelList: val\n      });\n    };\n\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this$state, email, room, token, client;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n              _this$state = _this.state, email = _this$state.email, room = _this$state.room;\n              token = \"\";\n\n              _this.setState({\n                loading: true\n              });\n\n              _context3.prev = 4;\n              _context3.next = 7;\n              return getToken(email);\n\n            case 7:\n              token = _context3.sent;\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](4);\n              throw new Error(\"unable to get token, please reload thissss page\");\n\n            case 13:\n              _context3.next = 15;\n              return Chat.Client.create(token);\n\n            case 15:\n              client = _context3.sent;\n\n              _this.setState({\n                client: client\n              });\n\n              client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context2.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n              joinChat(room, client, _this.setChannel, _this.setMessages, _this.setChannelList, _this.setLoading);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 10]]);\n    }));\n\n    _this.sendMessage = function () {\n      var _this$state2 = _this.state,\n          text = _this$state2.text,\n          channel = _this$state2.channel;\n\n      if (text && String(text).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(text);\n\n        _this.setState({\n          text: \"\",\n          loading: false\n        });\n      }\n    };\n\n    _this.sendMessageExternal = function (info) {\n      var channel = _this.state.channel;\n\n      if (info && String(info).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(info);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.setIsVideo = function (val) {\n      _this.setState({\n        isVideo: val\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isVideo: true\n      });\n    };\n\n    _this.switchChannel = function (roomName) {\n      _this.setState({\n        room: roomName\n      });\n\n      var client = _this.state.client;\n      joinChat(roomName, client, _this.setChannel, _this.setMessages, _this.setChannelList, _this.setLoading);\n    };\n\n    _this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n      channelList: [],\n      client: null,\n      email: _this.props.email,\n      room: _this.props.room\n    };\n    _this.scrollDiv = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          loading = _this$state3.loading,\n          text = _this$state3.text,\n          messages = _this$state3.messages,\n          channel = _this$state3.channel,\n          isVideo = _this$state3.isVideo,\n          channelList = _this$state3.channelList,\n          email = _this$state3.email,\n          room = _this$state3.room;\n      var setSubmit = this.props.setSubmit;\n      var channels = [];\n\n      var _loop = function _loop(i) {\n        channels.push( /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: \"block\"\n          },\n          onClick: function onClick() {\n            _this2.switchChannel(channelList[i].friendlyName);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 11\n            }, _this2), channelList[i].friendlyName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 9\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, _this2));\n      };\n\n      for (var i = 0; i < channelList.length; i++) {\n        _loop(i);\n      }\n\n      var component;\n\n      if (isVideo) {\n        component = /*#__PURE__*/_jsxDEV(VideoChat, {\n          username: email,\n          roomName: room,\n          messages: messages,\n          setIsVideo: this.setIsVideo,\n          sendMessage: this.sendMessageExternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 19\n        }, this);\n      } else {\n        component = /*#__PURE__*/_jsxDEV(Container, {\n          component: \"main\",\n          maxWidth: \"md\",\n          style: {\n            maxWidth: \"none\",\n            paddingLeft: \"0px\",\n            background: \"rgb(242, 243, 248)\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n            open: loading,\n            style: {\n              zIndex: 99999\n            },\n            children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n              style: {\n                color: \"white\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(AppBar, {\n            elevation: 10,\n            children: /*#__PURE__*/_jsxDEV(Toolbar, {\n              style: {\n                justifyContent: 'space-between'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                style: {\n                  width: \"30%\"\n                },\n                children: \"YOUR ROOMS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row-reverse\",\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"h6\",\n                    children: \"\".concat(room)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"row-reverse\",\n                style: {\n                  width: \"84%\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Leave\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: function onClick() {\n                        setSubmit();\n                      },\n                      children: /*#__PURE__*/_jsxDEV(ExitToAppOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"2.45rem\",\n                          color: \"white\",\n                          marginTop: '4px'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 217,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Add others\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      children: /*#__PURE__*/_jsxDEV(GroupAddOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"xxx-large\",\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Switch to Video call\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      onClick: this.handleClick,\n                      children: /*#__PURE__*/_jsxDEV(VideoCallOutlinedIcon, {\n                        style: {\n                          position: 'relative',\n                          fontSize: \"xxx-large\",\n                          color: \"white\"\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 231,\n                        columnNumber: 21\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 230,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 17\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            style: {\n              width: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: \"18%\",\n                background: \"rgb(242, 243, 248)\",\n                marginRightght: \"15px\",\n                height: \"100vh\"\n              },\n              children: /*#__PURE__*/_jsxDEV(List, {\n                style: {\n                  paddingTop: \"100px\"\n                },\n                children: channels\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                width: \"80%\",\n                paddingRight: \"15px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                direction: \"column\",\n                style: styles.mainGrid,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: styles.gridItemChatList,\n                  children: /*#__PURE__*/_jsxDEV(List, {\n                    dense: true,\n                    children: messages && messages.map(function (message) {\n                      return /*#__PURE__*/_jsxDEV(ChatItem, {\n                        message: message,\n                        email: email\n                      }, message.index, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 251,\n                        columnNumber: 19\n                      }, _this2);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  style: styles.gridItemMessage,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    direction: \"row\",\n                    justify: \"center\",\n                    alignItems: \"center\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      style: styles.textFieldContainer,\n                      children: /*#__PURE__*/_jsxDEV(TextField, {\n                        required: true,\n                        style: styles.textField,\n                        placeholder: \"Send a message to everyone\",\n                        variant: \"outlined\",\n                        multiline: true,\n                        rows: 2,\n                        value: text,\n                        disabled: !channel,\n                        onChange: function onChange(event) {\n                          return _this2.setState({\n                            text: event.target.value\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 267,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 266,\n                      columnNumber: 15\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(IconButton, {\n                        style: styles.sendButton,\n                        onClick: this.sendMessage,\n                        disabled: !channel || !text,\n                        children: /*#__PURE__*/_jsxDEV(Send, {\n                          style: styles.sendIcon\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 287,\n                          columnNumber: 19\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 282,\n                        columnNumber: 17\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 281,\n                      columnNumber: 15\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 19\n        }, this);\n      }\n\n      return component;\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1,\n    background: \"white\",\n    borderRadius: \"3px\",\n    paddingRight: \"10px\",\n    paddingLeft: \"10px\"\n  }\n};\nexport default ChatScreen;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js"],"names":["React","AppBar","Backdrop","CircularProgress","Container","Grid","IconButton","List","TextField","Toolbar","Typography","Button","Tooltip","ListItem","ChevronRightIcon","VideoCallOutlinedIcon","ExitToAppOutlinedIcon","GroupAddOutlinedIcon","Send","ChatItem","VideoChat","getToken","joinChat","Chat","require","ChatScreen","props","setLoading","val","setState","loading","setChannel","channel","setMessages","messages","setChannelList","channelList","componentDidMount","document","getElementsByTagName","style","background","state","email","room","token","Error","Client","create","client","on","updateToken","sendMessage","text","String","trim","sendMessageExternal","info","setIsVideo","isVideo","handleClick","switchChannel","roomName","scrollDiv","createRef","setSubmit","channels","i","push","display","friendlyName","length","component","maxWidth","paddingLeft","zIndex","color","justifyContent","width","position","fontSize","marginTop","marginRightght","height","paddingTop","paddingRight","styles","mainGrid","gridItemChatList","map","message","index","gridItemMessage","textFieldContainer","textField","event","target","value","sendButton","sendIcon","Component","borderWidth","borderColor","flex","marginRight","gridItem","paddingBottom","overflow","marginBottom","backgroundColor","borderRadius"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Backdrop,\n  CircularProgress,\n  Container,\n  Grid,\n  IconButton,\n  List,\n  TextField,\n  Toolbar,\n  Typography,\n  Button,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat from \"./VideoChat\";\nimport getToken from \"./getChatToken\";\nimport joinChat from \"./joinChatRoom\";\nconst Chat = require(\"twilio-chat\");\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n      channelList: [],\n      client: null,\n      email: this.props.email,\n      room: this.props.room,\n    };\n\n    this.scrollDiv = React.createRef();\n  };\n  // getToken = async (email) => {\n  //   var data = await fetch(\"/chat/token\", {\n  //     method: \"POST\",\n  //     body: JSON.stringify({\n  //       identity: email,\n  //     }),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   }).then((res) => res.json());\n  //   return data.token;\n  // };\n\n  setLoading = (val)=>{\n    this.setState({loading: val});\n  }\n  setChannel = (val)=>{\n    this.setState({channel: val});\n  }\n  setMessages = (val)=>{\n    this.setState({messages: val});\n  }\n  setChannelList = (val)=>{\n    this.setState({channelList: val});\n  }\n  componentDidMount = async () => {\n    document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n    const { email, room } = this.state;\n    let token = \"\";\n\n    this.setState({ loading: true });\n\n    try {\n      token = await getToken(email);\n    } catch {\n      throw new Error(\"unable to get token, please reload thissss page\");\n    }\n    const client = await Chat.Client.create(token);\n    this.setState({client : client});\n\n    client.on(\"tokenAboutToExpire\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"tokenExpired\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n    joinChat(room, client, this.setChannel, this.setMessages, this.setChannelList, this.setLoading);\n  }\n  // joine = async (room)=>{\n  //   try {\n  //     const {client} = this.state;\n  //     console.log(room);\n  //     const channel = await client.getChannelByUniqueName(room);\n  //     await this.joinChannel(channel);\n  //     this.setState({ channel, loading: false });\n  //     const messages = await channel.getMessages();\n  //     this.setState({ messages: messages.items || [] });\n  //     const channels = await client.getSubscribedChannels();\n  //     this.setState({channelList: channels.items || []});\n  //   } catch {\n  //     try {\n  //       const {client} = this.state;\n  //       const channel = await client.createChannel({\n  //         uniqueName: room,\n  //         friendlyName: room,\n  //       });\n  //       await this.joinChannel(channel);\n  //       this.setState({ channel, loading: false });\n  //       const channels = await client.getSubscribedChannels();\n  //       this.setState({channelList: channels.items || []});\n  //     } catch {\n  //       throw new Error(\"unable to create channel, please reload this page\");\n  //     }\n  //   }\n  // };\n\n  // joinChannel = async (channel) => {\n  //   if (channel.channelState.status !== \"joined\") {\n  //     await channel.join();\n  //   }\n  //   channel.on(\"messageAdded\", this.handleMessageAdded);\n  // };\n\n  // handleMessageAdded = (message) => {\n  //   const { messages } = this.state;\n  //   this.setState(\n  //     {\n  //       messages: !!messages ? [...messages, message] : [message],\n  //     },\n  //     //   this.scrollToBottom\n  //   );\n  // };\n\n  //   scrollToBottom = () => {\n  //     const scrollHeight = this.scrollDiv.current.scrollHeight;\n  //     const height = this.scrollDiv.current.clientHeight;\n  //     const maxScrollTop = scrollHeight - height;\n  //     this.scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  //   };\n\n  sendMessage = () => {\n    const { text, channel } = this.state;\n    if (text && String(text).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(text);\n      this.setState({ text: \"\", loading: false });\n    }\n  };\n\n  sendMessageExternal = (info) => {\n    const { channel } = this.state;\n    if (info && String(info).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(info);\n      this.setState({ loading: false });\n    }\n  }\n\n  setIsVideo = (val) => {\n    this.setState({ isVideo: val });\n  }\n\n  handleClick = () => {\n    this.setState({ isVideo: true });\n  }\n\n  switchChannel = (roomName)=>{\n    this.setState({room: roomName});\n    const {client} = this.state;\n    joinChat(roomName, client, this.setChannel, this.setMessages, this.setChannelList, this.setLoading);\n  }\n  render() {\n    const { loading, text, messages, channel, isVideo, channelList, email, room} = this.state;\n    const { setSubmit } = this.props;\n    const channels = [];\n    for(let i = 0; i < channelList.length; i++){\n      channels.push(<Button style = {{display: \"block\"}} onClick = {()=>{this.switchChannel(channelList[i].friendlyName)}}>\n        <ListItem>\n          <ChevronRightIcon/>\n          {channelList[i].friendlyName}\n        </ListItem>\n      </Button>);\n    }\n    let component;\n    if (isVideo) {\n      component = <VideoChat username={email} roomName={room} messages={messages}\n        setIsVideo={this.setIsVideo} sendMessage={this.sendMessageExternal} />\n    } else {\n      component = <Container component=\"main\" maxWidth=\"md\" style = {{maxWidth:\"none\", paddingLeft: \"0px\", background:\"rgb(242, 243, 248)\"}}>\n        <Backdrop open={loading} style={{ zIndex: 99999 }}>\n          <CircularProgress style={{ color: \"white\" }} />\n        </Backdrop>\n        <AppBar elevation={10}>\n          <Toolbar style={{ justifyContent: 'space-between' }}>\n            <Typography variant=\"h6\" style = {{width : \"30%\"}}>\n              YOUR ROOMS\n            </Typography>\n            <Grid container direction = \"row-reverse\">\n              <Grid item>\n                <Typography variant = 'h6'>\n                  {`${room}`}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid container direction=\"row-reverse\" style = {{width: \"84%\"}}>\n              <Grid item>\n                <Tooltip title=\"Leave\">\n                  <Button onClick = {() => {setSubmit()}}>\n                    <ExitToAppOutlinedIcon style={{ position: 'relative', fontSize: \"2.45rem\", color: \"white\", marginTop :'4px' }}></ExitToAppOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Add others\">\n                  <Button >\n                    <GroupAddOutlinedIcon style={{ position: 'relative', fontSize: \"xxx-large\", color: \"white\" }}></GroupAddOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n              <Grid item>\n                <Tooltip title=\"Switch to Video call\">\n                  <Button onClick={this.handleClick}>\n                    <VideoCallOutlinedIcon style={{ position: 'relative', fontSize: \"xxx-large\", color: \"white\" }}></VideoCallOutlinedIcon>\n                  </Button>\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Toolbar>\n        </AppBar>\n        {/* <CssBaseline /> */}\n        <Grid container style = {{width : \"100%\"}}>\n          <Grid item style = {{width :\"18%\", background: \"rgb(242, 243, 248)\", marginRightght: \"15px\", height:\"100vh\"}}>\n            <List style = {{paddingTop: \"100px\"}}>\n              {channels}\n            </List>\n          </Grid>\n          <Grid item style = {{width: \"80%\", paddingRight:\"15px\"}}>\n          <Grid container direction=\"column\" style={styles.mainGrid}>\n          <Grid item style={styles.gridItemChatList} >\n            <List dense={true}>\n              {messages &&\n                messages.map((message) => (\n                  <ChatItem\n                    key={message.index}\n                    message={message}\n                    email={email}\n                  />\n                ))}\n            </List>\n          </Grid>\n          <Grid item style={styles.gridItemMessage}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item style={styles.textFieldContainer}>\n                <TextField\n                  required\n                  style={styles.textField}\n                  placeholder=\"Send a message to everyone\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  value={text}\n                  disabled={!channel}\n                  onChange={(event) =>\n                    this.setState({ text: event.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <IconButton\n                  style={styles.sendButton}\n                  onClick={this.sendMessage}\n                  disabled={!channel || !text}\n                >\n                  <Send style={styles.sendIcon} />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n          </Grid>\n        </Grid>\n        \n      </Container>\n    }\n\n    return (\n      component\n    );\n  }\n}\n\nconst styles = {\n  textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n  textFieldContainer: { flex: 1, marginRight: 12 },\n  gridItem: { paddingTop: 12, paddingBottom: 12 },\n  gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n  gridItemMessage: { marginTop: 12, marginBottom: 12 },\n  sendButton: { backgroundColor: \"#3f51b5\" },\n  sendIcon: { color: \"white\" },\n  mainGrid: { paddingTop: 100, borderWidth: 1 , background:\"white\", borderRadius:\"3px\", paddingRight: \"10px\", paddingLeft: \"10px\"},\n};\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}