{"ast":null,"code":"'use strict';\n/* jshint ignore:start */\n\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n\n/* jshint ignore:end */\n\nvar Q = require('q');\n/* jshint ignore:line */\n\n\nvar _ = require('lodash');\n/* jshint ignore:line */\n\n\nvar util = require('util');\n/* jshint ignore:line */\n\n\nvar Page = require('../../../../base/Page');\n/* jshint ignore:line */\n\n\nvar deserialize = require('../../../../base/deserialize');\n/* jshint ignore:line */\n\n\nvar values = require('../../../../base/values');\n/* jshint ignore:line */\n\n\nvar DayList;\nvar DayPage;\nvar DayInstance;\nvar DayContext;\n/* jshint ignore:start */\n\n/**\n * Initialize the DayList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayList\n *\n * @param {Twilio.Bulkexports.V1} version - Version of the resource\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n */\n\n/* jshint ignore:end */\n\nDayList = function DayList(version, resourceType) {\n  /* jshint ignore:start */\n\n  /**\n   * @function days\n   * @memberof Twilio.Bulkexports.V1.ExportContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportContext.DayContext}\n   */\n\n  /* jshint ignore:end */\n  function DayListInstance(sid) {\n    return DayListInstance.get(sid);\n  }\n\n  DayListInstance._version = version; // Path Solution\n\n  DayListInstance._solution = {\n    resourceType: resourceType\n  };\n  DayListInstance._uri = \"/Exports/\".concat(resourceType, \"/Days\");\n  /* jshint ignore:start */\n\n  /**\n   * Streams DayInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n\n  /* jshint ignore:end */\n\n  DayListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function (page) {\n        _.each(page.instances, function (instance) {\n          if (done || !_.isUndefined(opts.limit) && currentResource >= opts.limit) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if (limits.pageLimit && limits.pageLimit <= currentPage) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Lists DayInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DayListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n\n    opts.callback = function (resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function (error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single page of DayInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DayListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n\n    opts = opts || {};\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({\n      uri: this._uri,\n      method: 'GET',\n      params: data\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DayPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Retrieve a single target page of DayInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n\n  /* jshint ignore:end */\n\n\n  DayListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({\n      method: 'GET',\n      uri: targetUrl\n    });\n\n    promise = promise.then(function (payload) {\n      deferred.resolve(new DayPage(this._version, payload, this._solution));\n    }.bind(this));\n    promise.catch(function (error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Constructs a day\n   *\n   * @function get\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {string} day - The date of the data in the file\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportContext.DayContext}\n   */\n\n  /* jshint ignore:end */\n\n\n  DayListInstance.get = function get(day) {\n    return new DayContext(this._version, this._solution.resourceType, day);\n  };\n  /* jshint ignore:start */\n\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @returns Object\n   */\n\n  /* jshint ignore:end */\n\n\n  DayListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DayListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DayListInstance;\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DayPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DaySolution} solution - Path solution\n *\n * @returns DayPage\n */\n\n/* jshint ignore:end */\n\n\nDayPage = function DayPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DayPage.prototype, Page.prototype);\n\nDayPage.prototype.constructor = DayPage;\n/* jshint ignore:start */\n\n/**\n * Build an instance of DayInstance\n *\n * @function getInstance\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayPage#\n *\n * @param {DayPayload} payload - Payload response from the API\n *\n * @returns DayInstance\n */\n\n/* jshint ignore:end */\n\nDayPage.prototype.getInstance = function getInstance(payload) {\n  return new DayInstance(this._version, payload, this._solution.resourceType);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayPage#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDayPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDayPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DayContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayInstance\n *\n * @property {string} redirectTo - The redirect_to\n * @property {string} day - The date of the data in the file\n * @property {number} size - Size of the file in bytes\n * @property {string} createDate - The date when resource is created\n * @property {string} friendlyName -\n *          The friendly name specified when creating the job\n * @property {string} resourceType - The type of communication â€“ Messages, Calls\n *\n * @param {V1} version - Version of the resource\n * @param {DayPayload} payload - The instance payload\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n * @param {string} day - The date of the data in the file\n */\n\n/* jshint ignore:end */\n\n\nDayInstance = function DayInstance(version, payload, resourceType, day) {\n  this._version = version; // Marshaled Properties\n\n  this.redirectTo = payload.redirect_to; // jshint ignore:line\n\n  this.day = payload.day; // jshint ignore:line\n\n  this.size = deserialize.integer(payload.size); // jshint ignore:line\n\n  this.createDate = payload.create_date; // jshint ignore:line\n\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n\n  this.resourceType = payload.resource_type; // jshint ignore:line\n  // Context\n\n  this._context = undefined;\n  this._solution = {\n    resourceType: resourceType,\n    day: day || this.day\n  };\n};\n\nObject.defineProperty(DayInstance.prototype, '_proxy', {\n  get: function get() {\n    if (!this._context) {\n      this._context = new DayContext(this._version, this._solution.resourceType, this._solution.day);\n    }\n\n    return this._context;\n  }\n});\n/* jshint ignore:start */\n\n/**\n * fetch a DayInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DayInstance\n */\n\n/* jshint ignore:end */\n\nDayInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayInstance#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDayInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n\n  _.forOwn(this, function (value, key) {\n    if (!_.startsWith(key, '_') && !_.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n\n  return clone;\n};\n\nDayInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n/* jshint ignore:start */\n\n/**\n * Initialize the DayContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n * @param {string} day - The date of the data in the file\n */\n\n/* jshint ignore:end */\n\n\nDayContext = function DayContext(version, resourceType, day) {\n  this._version = version; // Path Solution\n\n  this._solution = {\n    resourceType: resourceType,\n    day: day\n  };\n  this._uri = \"/Exports/\".concat(resourceType, \"/Days/\").concat(day);\n};\n/* jshint ignore:start */\n\n/**\n * fetch a DayInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DayInstance\n */\n\n/* jshint ignore:end */\n\n\nDayContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n\n  var promise = this._version.fetch({\n    uri: this._uri,\n    method: 'GET'\n  });\n\n  promise = promise.then(function (payload) {\n    deferred.resolve(new DayInstance(this._version, payload, this._solution.resourceType, this._solution.day));\n  }.bind(this));\n  promise.catch(function (error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n/* jshint ignore:start */\n\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayContext#\n *\n * @returns Object\n */\n\n/* jshint ignore:end */\n\n\nDayContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nDayContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DayList: DayList,\n  DayPage: DayPage,\n  DayInstance: DayInstance,\n  DayContext: DayContext\n};","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio/lib/rest/bulkexports/v1/export/day.js"],"names":["Q","require","_","util","Page","deserialize","values","DayList","DayPage","DayInstance","DayContext","version","resourceType","DayListInstance","sid","get","_version","_solution","_uri","each","opts","callback","isFunction","isUndefined","Error","done","currentPage","currentResource","limits","readLimits","limit","pageSize","onComplete","error","fetchNextPage","fn","promise","then","page","instances","instance","pageLimit","bind","nextPage","catch","merge","list","deferred","defer","allResources","resource","push","length","resolve","reject","nodeify","data","of","pageToken","pageNumber","uri","method","params","payload","getPage","targetUrl","_domain","twilio","request","day","toJSON","inspect","custom","depth","options","response","solution","prototype","constructor","call","extend","getInstance","clone","forOwn","value","key","startsWith","redirectTo","redirect_to","size","integer","createDate","create_date","friendlyName","friendly_name","resource_type","_context","undefined","Object","defineProperty","fetch","_proxy","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\n/* jshint ignore:start */\n/**\n * This code was generated by\n * \\ / _    _  _|   _  _\n *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n *       /       /\n */\n/* jshint ignore:end */\n\nvar Q = require('q');  /* jshint ignore:line */\nvar _ = require('lodash');  /* jshint ignore:line */\nvar util = require('util');  /* jshint ignore:line */\nvar Page = require('../../../../base/Page');  /* jshint ignore:line */\nvar deserialize = require(\n    '../../../../base/deserialize');  /* jshint ignore:line */\nvar values = require('../../../../base/values');  /* jshint ignore:line */\n\nvar DayList;\nvar DayPage;\nvar DayInstance;\nvar DayContext;\n\n/* jshint ignore:start */\n/**\n * Initialize the DayList\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayList\n *\n * @param {Twilio.Bulkexports.V1} version - Version of the resource\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n */\n/* jshint ignore:end */\nDayList = function DayList(version, resourceType) {\n  /* jshint ignore:start */\n  /**\n   * @function days\n   * @memberof Twilio.Bulkexports.V1.ExportContext#\n   *\n   * @param {string} sid - sid of instance\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportContext.DayContext}\n   */\n  /* jshint ignore:end */\n  function DayListInstance(sid) {\n    return DayListInstance.get(sid);\n  }\n\n  DayListInstance._version = version;\n  // Path Solution\n  DayListInstance._solution = {resourceType: resourceType};\n  DayListInstance._uri = `/Exports/${resourceType}/Days`;\n  /* jshint ignore:start */\n  /**\n   * Streams DayInstance records from the API.\n   *\n   * This operation lazily loads records as efficiently as possible until the limit\n   * is reached.\n   *\n   * The results are passed into the callback function, so this operation is memory\n   * efficient.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function each\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         each() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no pageSize is defined but a limit is defined,\n   *         each() will attempt to read the limit with the most efficient\n   *         page size, i.e. min(limit, 1000)\n   * @param {Function} [opts.callback] -\n   *         Function to process each record. If this and a positional\n   *         callback are passed, this one will be used\n   * @param {Function} [opts.done] -\n   *          Function to be called upon completion of streaming\n   * @param {Function} [callback] - Function to process each record\n   */\n  /* jshint ignore:end */\n  DayListInstance.each = function each(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    if (opts.callback) {\n      callback = opts.callback;\n    }\n    if (_.isUndefined(callback)) {\n      throw new Error('Callback function must be provided');\n    }\n\n    var done = false;\n    var currentPage = 1;\n    var currentResource = 0;\n    var limits = this._version.readLimits({\n      limit: opts.limit,\n      pageSize: opts.pageSize\n    });\n\n    function onComplete(error) {\n      done = true;\n      if (_.isFunction(opts.done)) {\n        opts.done(error);\n      }\n    }\n\n    function fetchNextPage(fn) {\n      var promise = fn();\n      if (_.isUndefined(promise)) {\n        onComplete();\n        return;\n      }\n\n      promise.then(function(page) {\n        _.each(page.instances, function(instance) {\n          if (done || (!_.isUndefined(opts.limit) && currentResource >= opts.limit)) {\n            done = true;\n            return false;\n          }\n\n          currentResource++;\n          callback(instance, onComplete);\n        });\n\n        if ((limits.pageLimit && limits.pageLimit <= currentPage)) {\n          onComplete();\n        } else if (!done) {\n          currentPage++;\n          fetchNextPage(_.bind(page.nextPage, page));\n        }\n      });\n\n      promise.catch(onComplete);\n    }\n\n    fetchNextPage(_.bind(this.page, this, _.merge(opts, limits)));\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Lists DayInstance records from the API as a list.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function list\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {number} [opts.limit] -\n   *         Upper limit for the number of records to return.\n   *         list() guarantees never to return more than limit.\n   *         Default is no limit\n   * @param {number} [opts.pageSize] -\n   *         Number of records to fetch per request,\n   *         when not set will use the default value of 50 records.\n   *         If no page_size is defined but a limit is defined,\n   *         list() will attempt to read the limit with the most\n   *         efficient page size, i.e. min(limit, 1000)\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DayListInstance.list = function list(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n    var deferred = Q.defer();\n    var allResources = [];\n    opts.callback = function(resource, done) {\n      allResources.push(resource);\n\n      if (!_.isUndefined(opts.limit) && allResources.length === opts.limit) {\n        done();\n      }\n    };\n\n    opts.done = function(error) {\n      if (_.isUndefined(error)) {\n        deferred.resolve(allResources);\n      } else {\n        deferred.reject(error);\n      }\n    };\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    this.each(opts);\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single page of DayInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function page\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {object} [opts] - Options for request\n   * @param {string} [opts.pageToken] - PageToken provided by the API\n   * @param {number} [opts.pageNumber] -\n   *          Page Number, this value is simply for client state\n   * @param {number} [opts.pageSize] - Number of records to return, defaults to 50\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DayListInstance.page = function page(opts, callback) {\n    if (_.isFunction(opts)) {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts || {};\n\n    var deferred = Q.defer();\n    var data = values.of({\n      'PageToken': opts.pageToken,\n      'Page': opts.pageNumber,\n      'PageSize': opts.pageSize\n    });\n\n    var promise = this._version.page({uri: this._uri, method: 'GET', params: data});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DayPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Retrieve a single target page of DayInstance records from the API.\n   *\n   * The request is executed immediately.\n   *\n   * If a function is passed as the first argument, it will be used as the callback\n   * function.\n   *\n   * @function getPage\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {string} [targetUrl] - API-generated URL for the requested results page\n   * @param {function} [callback] - Callback to handle list of records\n   *\n   * @returns {Promise} Resolves to a list of records\n   */\n  /* jshint ignore:end */\n  DayListInstance.getPage = function getPage(targetUrl, callback) {\n    var deferred = Q.defer();\n\n    var promise = this._version._domain.twilio.request({method: 'GET', uri: targetUrl});\n\n    promise = promise.then(function(payload) {\n      deferred.resolve(new DayPage(this._version, payload, this._solution));\n    }.bind(this));\n\n    promise.catch(function(error) {\n      deferred.reject(error);\n    });\n\n    if (_.isFunction(callback)) {\n      deferred.promise.nodeify(callback);\n    }\n\n    return deferred.promise;\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Constructs a day\n   *\n   * @function get\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @param {string} day - The date of the data in the file\n   *\n   * @returns {Twilio.Bulkexports.V1.ExportContext.DayContext}\n   */\n  /* jshint ignore:end */\n  DayListInstance.get = function get(day) {\n    return new DayContext(this._version, this._solution.resourceType, day);\n  };\n\n  /* jshint ignore:start */\n  /**\n   * Provide a user-friendly representation\n   *\n   * @function toJSON\n   * @memberof Twilio.Bulkexports.V1.ExportContext.DayList#\n   *\n   * @returns Object\n   */\n  /* jshint ignore:end */\n  DayListInstance.toJSON = function toJSON() {\n    return this._solution;\n  };\n\n  DayListInstance[util.inspect.custom] = function inspect(depth, options) {\n    return util.inspect(this.toJSON(), options);\n  };\n\n  return DayListInstance;\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DayPage\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayPage\n *\n * @param {V1} version - Version of the resource\n * @param {Response<string>} response - Response from the API\n * @param {DaySolution} solution - Path solution\n *\n * @returns DayPage\n */\n/* jshint ignore:end */\nDayPage = function DayPage(version, response, solution) {\n  // Path Solution\n  this._solution = solution;\n\n  Page.prototype.constructor.call(this, version, response, this._solution);\n};\n\n_.extend(DayPage.prototype, Page.prototype);\nDayPage.prototype.constructor = DayPage;\n\n/* jshint ignore:start */\n/**\n * Build an instance of DayInstance\n *\n * @function getInstance\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayPage#\n *\n * @param {DayPayload} payload - Payload response from the API\n *\n * @returns DayInstance\n */\n/* jshint ignore:end */\nDayPage.prototype.getInstance = function getInstance(payload) {\n  return new DayInstance(this._version, payload, this._solution.resourceType);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayPage#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDayPage.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDayPage.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DayContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayInstance\n *\n * @property {string} redirectTo - The redirect_to\n * @property {string} day - The date of the data in the file\n * @property {number} size - Size of the file in bytes\n * @property {string} createDate - The date when resource is created\n * @property {string} friendlyName -\n *          The friendly name specified when creating the job\n * @property {string} resourceType - The type of communication â€“ Messages, Calls\n *\n * @param {V1} version - Version of the resource\n * @param {DayPayload} payload - The instance payload\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n * @param {string} day - The date of the data in the file\n */\n/* jshint ignore:end */\nDayInstance = function DayInstance(version, payload, resourceType, day) {\n  this._version = version;\n\n  // Marshaled Properties\n  this.redirectTo = payload.redirect_to; // jshint ignore:line\n  this.day = payload.day; // jshint ignore:line\n  this.size = deserialize.integer(payload.size); // jshint ignore:line\n  this.createDate = payload.create_date; // jshint ignore:line\n  this.friendlyName = payload.friendly_name; // jshint ignore:line\n  this.resourceType = payload.resource_type; // jshint ignore:line\n\n  // Context\n  this._context = undefined;\n  this._solution = {resourceType: resourceType, day: day || this.day, };\n};\n\nObject.defineProperty(DayInstance.prototype,\n  '_proxy', {\n    get: function() {\n      if (!this._context) {\n        this._context = new DayContext(this._version, this._solution.resourceType, this._solution.day);\n      }\n\n      return this._context;\n    }\n});\n\n/* jshint ignore:start */\n/**\n * fetch a DayInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayInstance#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DayInstance\n */\n/* jshint ignore:end */\nDayInstance.prototype.fetch = function fetch(callback) {\n  return this._proxy.fetch(callback);\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayInstance#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDayInstance.prototype.toJSON = function toJSON() {\n  let clone = {};\n  _.forOwn(this, function(value, key) {\n    if (!_.startsWith(key, '_') && ! _.isFunction(value)) {\n      clone[key] = value;\n    }\n  });\n  return clone;\n};\n\nDayInstance.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\n\n/* jshint ignore:start */\n/**\n * Initialize the DayContext\n *\n * PLEASE NOTE that this class contains beta products that are subject to change.\n * Use them with caution.\n *\n * @constructor Twilio.Bulkexports.V1.ExportContext.DayContext\n *\n * @param {V1} version - Version of the resource\n * @param {string} resourceType - The type of communication â€“ Messages, Calls\n * @param {string} day - The date of the data in the file\n */\n/* jshint ignore:end */\nDayContext = function DayContext(version, resourceType, day) {\n  this._version = version;\n\n  // Path Solution\n  this._solution = {resourceType: resourceType, day: day, };\n  this._uri = `/Exports/${resourceType}/Days/${day}`;\n};\n\n/* jshint ignore:start */\n/**\n * fetch a DayInstance\n *\n * @function fetch\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayContext#\n *\n * @param {function} [callback] - Callback to handle processed record\n *\n * @returns {Promise} Resolves to processed DayInstance\n */\n/* jshint ignore:end */\nDayContext.prototype.fetch = function fetch(callback) {\n  var deferred = Q.defer();\n  var promise = this._version.fetch({uri: this._uri, method: 'GET'});\n\n  promise = promise.then(function(payload) {\n    deferred.resolve(new DayInstance(\n      this._version,\n      payload,\n      this._solution.resourceType,\n      this._solution.day\n    ));\n  }.bind(this));\n\n  promise.catch(function(error) {\n    deferred.reject(error);\n  });\n\n  if (_.isFunction(callback)) {\n    deferred.promise.nodeify(callback);\n  }\n\n  return deferred.promise;\n};\n\n/* jshint ignore:start */\n/**\n * Provide a user-friendly representation\n *\n * @function toJSON\n * @memberof Twilio.Bulkexports.V1.ExportContext.DayContext#\n *\n * @returns Object\n */\n/* jshint ignore:end */\nDayContext.prototype.toJSON = function toJSON() {\n  return this._solution;\n};\n\nDayContext.prototype[util.inspect.custom] = function inspect(depth, options) {\n  return util.inspect(this.toJSON(), options);\n};\n\nmodule.exports = {\n  DayList: DayList,\n  DayPage: DayPage,\n  DayInstance: DayInstance,\n  DayContext: DayContext\n};\n"]},"metadata":{},"sourceType":"script"}