{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/NewChat.js\";\nimport React from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, CssBaseline, Grid, IconButton, List, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"../../ChatItem\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar NewChat = /*#__PURE__*/function (_React$Component) {\n  _inherits(NewChat, _React$Component);\n\n  var _super = _createSuper(NewChat);\n\n  function NewChat(props) {\n    var _this;\n\n    _classCallCheck(this, NewChat);\n\n    _this = _super.call(this, props);\n\n    _this.getToken = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(email) {\n        var data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"/chat/token\", {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    identity: email\n                  }),\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                data = _context.sent;\n                return _context.abrupt(\"return\", data.token);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n      var _this$props, email, room, token, client, channel, _channel;\n\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              console.log(\"IN\");\n              _this$props = _this.props, email = _this$props.email, room = _this$props.room;\n              token = \"\";\n\n              _this.setState({\n                loading: true\n              });\n\n              _context5.prev = 4;\n              _context5.next = 7;\n              return _this.getToken(email);\n\n            case 7:\n              token = _context5.sent;\n              _context5.next = 13;\n              break;\n\n            case 10:\n              _context5.prev = 10;\n              _context5.t0 = _context5[\"catch\"](4);\n              throw new Error(\"unable to get token, please reload thissss page\");\n\n            case 13:\n              _context5.next = 15;\n              return Chat.Client.create(token);\n\n            case 15:\n              client = _context5.sent;\n              client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context2.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n              client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context3.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                }, _callee3);\n              })));\n              client.on(\"channelJoined\", /*#__PURE__*/function () {\n                var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(channel) {\n                  var messages;\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          _context4.next = 2;\n                          return channel.getMessages();\n\n                        case 2:\n                          messages = _context4.sent;\n\n                          _this.setState({\n                            messages: messages.items || []\n                          }); // this.scrollToBottom();\n\n\n                        case 4:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x2) {\n                  return _ref5.apply(this, arguments);\n                };\n              }());\n              _context5.prev = 19;\n              _context5.next = 22;\n              return client.getChannelByUniqueName(room);\n\n            case 22:\n              channel = _context5.sent;\n              _context5.next = 25;\n              return _this.joinChannel(channel);\n\n            case 25:\n              _this.setState({\n                channel: channel,\n                loading: false\n              });\n\n              _context5.next = 42;\n              break;\n\n            case 28:\n              _context5.prev = 28;\n              _context5.t1 = _context5[\"catch\"](19);\n              _context5.prev = 30;\n              _context5.next = 33;\n              return client.createChannel({\n                uniqueName: room,\n                friendlyName: room\n              });\n\n            case 33:\n              _channel = _context5.sent;\n              _context5.next = 36;\n              return _this.joinChannel(_channel);\n\n            case 36:\n              _this.setState({\n                channel: _channel,\n                loading: false\n              });\n\n              _context5.next = 42;\n              break;\n\n            case 39:\n              _context5.prev = 39;\n              _context5.t2 = _context5[\"catch\"](30);\n              throw new Error(\"unable to create channel, please reload this page\");\n\n            case 42:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, null, [[4, 10], [19, 28], [30, 39]]);\n    }));\n\n    _this.joinChannel = /*#__PURE__*/function () {\n      var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(channel) {\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                if (!(channel.channelState.status !== \"joined\")) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                _context6.next = 3;\n                return channel.join();\n\n              case 3:\n                channel.on(\"messageAdded\", _this.handleMessageAdded);\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6);\n      }));\n\n      return function (_x3) {\n        return _ref6.apply(this, arguments);\n      };\n    }();\n\n    _this.handleMessageAdded = function (message) {\n      var messages = _this.state.messages;\n\n      _this.setState({\n        messages: !!messages ? [].concat(_toConsumableArray(messages), [message]) : [message]\n      } // this.scrollToBottom\n      );\n    };\n\n    _this.sendMessage = function () {\n      var _this$state = _this.state,\n          text = _this$state.text,\n          channel = _this$state.channel;\n\n      if (text && String(text).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(text);\n\n        _this.setState({\n          text: \"\",\n          loading: false\n        });\n      }\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isVideo: true\n      });\n    };\n\n    _this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false\n    };\n    _this.scrollDiv = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(NewChat, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          text = _this$state2.text,\n          messages = _this$state2.messages,\n          channel = _this$state2.channel;\n      var _this$props2 = this.props,\n          email = _this$props2.email,\n          room = _this$props2.room;\n\n      var component = /*#__PURE__*/_jsxDEV(Container, {\n        component: \"main\",\n        maxWidth: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n          open: loading,\n          style: {\n            zIndex: 99999\n          },\n          children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n            style: {\n              color: \"white\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          style: styles.mainGrid,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: styles.gridItemChatList,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: messages && messages.map(function (message) {\n                return /*#__PURE__*/_jsxDEV(ChatItem, {\n                  message: message,\n                  email: email\n                }, message.index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, _this2);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: styles.gridItemMessage,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              justify: \"center\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                style: styles.textFieldContainer,\n                children: /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  style: styles.textField,\n                  placeholder: \"Enter message\",\n                  variant: \"outlined\",\n                  multiline: true,\n                  rows: 2,\n                  value: text,\n                  disabled: !channel,\n                  onChange: function onChange(event) {\n                    return _this2.setState({\n                      text: event.target.value\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  style: styles.sendButton,\n                  onClick: this.sendMessage,\n                  disabled: !channel || !text,\n                  children: /*#__PURE__*/_jsxDEV(Send, {\n                    style: styles.sendIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 19\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 21\n      }, this);\n\n      return component;\n    }\n  }]);\n\n  return NewChat;\n}(React.Component);\n\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1\n  }\n};\nexport default NewChat;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/toolbar/icons/NewChat.js"],"names":["React","AppBar","Backdrop","CircularProgress","Container","CssBaseline","Grid","IconButton","List","TextField","Toolbar","Typography","VideoCallIcon","Send","ChatItem","Chat","require","NewChat","props","getToken","email","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","token","componentDidMount","console","log","room","setState","loading","Error","Client","create","client","on","updateToken","channel","getMessages","messages","items","getChannelByUniqueName","joinChannel","createChannel","uniqueName","friendlyName","channelState","status","join","handleMessageAdded","message","state","sendMessage","text","String","trim","handleClick","isVideo","scrollDiv","createRef","component","zIndex","color","styles","mainGrid","gridItemChatList","map","index","gridItemMessage","textFieldContainer","textField","event","target","value","sendButton","sendIcon","Component","width","borderWidth","borderColor","flex","marginRight","gridItem","paddingTop","paddingBottom","overflow","height","marginTop","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Backdrop,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  IconButton,\n  List,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"../../ChatItem\";\nconst Chat = require(\"twilio-chat\");\n\n\nclass NewChat extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n    };\n\n    this.scrollDiv = React.createRef();\n  };\n  getToken = async (email) => {\n    var data = await fetch(\"/chat/token\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        identity: email,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }).then((res) => res.json());\n    return data.token;\n  };\n\ncomponentDidMount = async () => {\n    console.log(\"IN\");\n    const { email, room } = this.props;\n    let token = \"\";\n\n    this.setState({ loading: true });\n\n    try {\n      token = await this.getToken(email);\n    } catch {\n      throw new Error(\"unable to get token, please reload thissss page\");\n    }\n    const client = await Chat.Client.create(token);\n\n    client.on(\"tokenAboutToExpire\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"tokenExpired\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"channelJoined\", async (channel) => {\n      // getting list of all messages since this is an existing channel\n      const messages = await channel.getMessages();\n      this.setState({ messages: messages.items || [] });\n      // this.scrollToBottom();\n    });\n\n    try {\n      const channel = await client.getChannelByUniqueName(room);\n      await this.joinChannel(channel);\n      this.setState({ channel, loading: false });\n    } catch {\n      try {\n        const channel = await client.createChannel({\n          uniqueName: room,\n          friendlyName: room,\n        });\n        await this.joinChannel(channel);\n        this.setState({ channel, loading: false });\n      } catch {\n        throw new Error(\"unable to create channel, please reload this page\");\n      }\n    }\n  };\n\n  joinChannel = async (channel) => {\n    if (channel.channelState.status !== \"joined\") {\n      await channel.join();\n    }\n    channel.on(\"messageAdded\", this.handleMessageAdded);\n  };\n\n  handleMessageAdded = (message) => {\n    const { messages } = this.state;\n    this.setState(\n      {\n        messages: !!messages ? [...messages, message] : [message],\n      },\n      // this.scrollToBottom\n    );\n  };\n\n  // scrollToBottom = () => {\n  //   const scrollHeight = this.scrollDiv.current.scrollHeight;\n  //   const height = this.scrollDiv.current.clientHeight;\n  //   const maxScrollTop = scrollHeight - height;\n  //   this.scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  // };\n\n  sendMessage = () => {\n    const { text, channel } = this.state;\n    if (text && String(text).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(text);\n      this.setState({ text: \"\", loading: false });\n    }\n  };\n\n  handleClick = ()=>{\n      this.setState({isVideo : true});\n  }\n\n  render() {\n    const { loading, text, messages, channel } = this.state;\n    const { email, room } = this.props;\n    let component = <Container component=\"main\" maxWidth=\"md\">\n        <Backdrop open={loading} style={{ zIndex: 99999 }}>\n          <CircularProgress style={{ color: \"white\" }} />\n        </Backdrop>\n        <CssBaseline />\n        <Grid container direction=\"column\" style={styles.mainGrid}>\n          <Grid item style={styles.gridItemChatList}>\n            <List dense={true}>\n              {messages &&\n                messages.map((message) => (\n                  <ChatItem\n                    key={message.index}\n                    message={message}\n                    email={email}\n                  />\n                ))}\n            </List>\n          </Grid>\n          <Grid item style={styles.gridItemMessage}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"center\"\n              alignItems=\"center\"\n            >\n              <Grid item style={styles.textFieldContainer}>\n                <TextField\n                  required\n                  style={styles.textField}\n                  placeholder=\"Enter message\"\n                  variant=\"outlined\"\n                  multiline\n                  rows={2}\n                  value={text}\n                  disabled={!channel}\n                  onChange={(event) =>\n                    this.setState({ text: event.target.value })\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <IconButton\n                  style={styles.sendButton}\n                  onClick={this.sendMessage}\n                  disabled={!channel || !text}\n                >\n                  <Send style={styles.sendIcon} />\n                </IconButton>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Container>\n\n    return (\n      component\n    );\n  }\n}\n\nconst styles = {\n  textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n  textFieldContainer: { flex: 1, marginRight: 12 },\n  gridItem: { paddingTop: 12, paddingBottom: 12 },\n  gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n  gridItemMessage: { marginTop: 12, marginBottom: 12 },\n  sendButton: { backgroundColor: \"#3f51b5\" },\n  sendIcon: { color: \"white\" },\n  mainGrid: { paddingTop: 100, borderWidth: 1 },\n};\n\nexport default NewChat;\n"]},"metadata":{},"sourceType":"module"}