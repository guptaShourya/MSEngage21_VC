{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar TokenStorage = /*#__PURE__*/function () {\n  function TokenStorage() {\n    _classCallCheck(this, TokenStorage);\n  }\n\n  _createClass(TokenStorage, null, [{\n    key: \"storeToken\",\n    value: function storeToken(continuationToken, productId) {\n      if (TokenStorage.canStore) {\n        TokenStorage.sessionStorage.setItem(TokenStorage.getKeyName(productId), continuationToken);\n      }\n    }\n  }, {\n    key: \"getStoredToken\",\n    value: function getStoredToken(productId) {\n      if (!TokenStorage.canStore) {\n        return null;\n      }\n\n      return TokenStorage.sessionStorage.getItem(TokenStorage.getKeyName(productId));\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      if (TokenStorage.canStore) {\n        var flag = TokenStorage.sessionStorage.getItem(TokenStorage.initializedFlag); // Duplicated tab, cleaning up all stored keys\n\n        if (flag) {\n          this.clear();\n        }\n\n        TokenStorage.sessionStorage.setItem(TokenStorage.initializedFlag, 'true'); // When leaving page or refreshing\n\n        TokenStorage.window.addEventListener('unload', function () {\n          TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n        });\n      }\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      if (TokenStorage.canStore) {\n        var keyToDelete = [];\n\n        for (var i = 0; i < TokenStorage.sessionStorage.length; i++) {\n          var key = TokenStorage.sessionStorage.key(i); // We manually removed startsWith here due to some problems with babel polyfill setup.\n          // Restore it when we figure out what's wrong.\n          //if (key.startsWith(TokenStorage.tokenStoragePrefix)) {\n\n          if (key.indexOf(TokenStorage.tokenStoragePrefix) === 0) {\n            keyToDelete.push(key);\n          }\n        }\n\n        keyToDelete.forEach(function (key) {\n          return TokenStorage.sessionStorage.removeItem(key);\n        });\n        TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n      }\n    }\n  }, {\n    key: \"getKeyName\",\n    value: function getKeyName(productId) {\n      return \"\".concat(TokenStorage.tokenStoragePrefix).concat(productId);\n    }\n  }, {\n    key: \"sessionStorage\",\n    get: function get() {\n      try {\n        return global['sessionStorage'];\n      } catch (err) {\n        return null;\n      }\n    }\n  }, {\n    key: \"window\",\n    get: function get() {\n      try {\n        return global['window'];\n      } catch (err) {\n        return null;\n      }\n    }\n  }, {\n    key: \"canStore\",\n    get: function get() {\n      return TokenStorage.sessionStorage && TokenStorage.window;\n    }\n  }]);\n\n  return TokenStorage;\n}();\n\nexports.TokenStorage = TokenStorage;\nTokenStorage.initializedFlag = 'twilio_twilsock_token_storage';\nTokenStorage.tokenStoragePrefix = 'twilio_continuation_token_';\nTokenStorage.initialize();","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilsock/lib/tokenStorage.js"],"names":["Object","defineProperty","exports","value","TokenStorage","continuationToken","productId","canStore","sessionStorage","setItem","getKeyName","getItem","flag","initializedFlag","clear","window","addEventListener","removeItem","keyToDelete","i","length","key","indexOf","tokenStoragePrefix","push","forEach","global","err","initialize"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;IACMC,Y;;;;;;;+BAiBgBC,iB,EAAmBC,S,EAAW;AAC5C,UAAIF,YAAY,CAACG,QAAjB,EAA2B;AACvBH,QAAAA,YAAY,CAACI,cAAb,CAA4BC,OAA5B,CAAoCL,YAAY,CAACM,UAAb,CAAwBJ,SAAxB,CAApC,EAAwED,iBAAxE;AACH;AACJ;;;mCACqBC,S,EAAW;AAC7B,UAAI,CAACF,YAAY,CAACG,QAAlB,EAA4B;AACxB,eAAO,IAAP;AACH;;AACD,aAAOH,YAAY,CAACI,cAAb,CAA4BG,OAA5B,CAAoCP,YAAY,CAACM,UAAb,CAAwBJ,SAAxB,CAApC,CAAP;AACH;;;iCACmB;AAChB,UAAIF,YAAY,CAACG,QAAjB,EAA2B;AACvB,YAAMK,IAAI,GAAGR,YAAY,CAACI,cAAb,CAA4BG,OAA5B,CAAoCP,YAAY,CAACS,eAAjD,CAAb,CADuB,CAEvB;;AACA,YAAID,IAAJ,EAAU;AACN,eAAKE,KAAL;AACH;;AACDV,QAAAA,YAAY,CAACI,cAAb,CAA4BC,OAA5B,CAAoCL,YAAY,CAACS,eAAjD,EAAkE,MAAlE,EANuB,CAOvB;;AACAT,QAAAA,YAAY,CAACW,MAAb,CAAoBC,gBAApB,CAAqC,QAArC,EAA+C,YAAM;AACjDZ,UAAAA,YAAY,CAACI,cAAb,CAA4BS,UAA5B,CAAuCb,YAAY,CAACS,eAApD;AACH,SAFD;AAGH;AACJ;;;4BACc;AACX,UAAIT,YAAY,CAACG,QAAjB,EAA2B;AACvB,YAAIW,WAAW,GAAG,EAAlB;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,YAAY,CAACI,cAAb,CAA4BY,MAAhD,EAAwDD,CAAC,EAAzD,EAA6D;AACzD,cAAME,GAAG,GAAGjB,YAAY,CAACI,cAAb,CAA4Ba,GAA5B,CAAgCF,CAAhC,CAAZ,CADyD,CAEzD;AACA;AACA;;AACA,cAAIE,GAAG,CAACC,OAAJ,CAAYlB,YAAY,CAACmB,kBAAzB,MAAiD,CAArD,EAAwD;AACpDL,YAAAA,WAAW,CAACM,IAAZ,CAAiBH,GAAjB;AACH;AACJ;;AACDH,QAAAA,WAAW,CAACO,OAAZ,CAAoB,UAAAJ,GAAG;AAAA,iBAAIjB,YAAY,CAACI,cAAb,CAA4BS,UAA5B,CAAuCI,GAAvC,CAAJ;AAAA,SAAvB;AACAjB,QAAAA,YAAY,CAACI,cAAb,CAA4BS,UAA5B,CAAuCb,YAAY,CAACS,eAApD;AACH;AACJ;;;+BACiBP,S,EAAW;AACzB,uBAAUF,YAAY,CAACmB,kBAAvB,SAA4CjB,SAA5C;AACH;;;wBA3D2B;AACxB,UAAI;AACA,eAAOoB,MAAM,CAAC,gBAAD,CAAb;AACH,OAFD,CAGA,OAAOC,GAAP,EAAY;AACR,eAAO,IAAP;AACH;AACJ;;;wBACmB;AAChB,UAAI;AACA,eAAOD,MAAM,CAAC,QAAD,CAAb;AACH,OAFD,CAGA,OAAOC,GAAP,EAAY;AACR,eAAO,IAAP;AACH;AACJ;;;wBA6CqB;AAClB,aAAOvB,YAAY,CAACI,cAAb,IAA+BJ,YAAY,CAACW,MAAnD;AACH;;;;;;AAELb,OAAO,CAACE,YAAR,GAAuBA,YAAvB;AACAA,YAAY,CAACS,eAAb,GAA+B,+BAA/B;AACAT,YAAY,CAACmB,kBAAb,GAAkC,4BAAlC;AACAnB,YAAY,CAACwB,UAAb","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass TokenStorage {\n    static get sessionStorage() {\n        try {\n            return global['sessionStorage'];\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    static get window() {\n        try {\n            return global['window'];\n        }\n        catch (err) {\n            return null;\n        }\n    }\n    static storeToken(continuationToken, productId) {\n        if (TokenStorage.canStore) {\n            TokenStorage.sessionStorage.setItem(TokenStorage.getKeyName(productId), continuationToken);\n        }\n    }\n    static getStoredToken(productId) {\n        if (!TokenStorage.canStore) {\n            return null;\n        }\n        return TokenStorage.sessionStorage.getItem(TokenStorage.getKeyName(productId));\n    }\n    static initialize() {\n        if (TokenStorage.canStore) {\n            const flag = TokenStorage.sessionStorage.getItem(TokenStorage.initializedFlag);\n            // Duplicated tab, cleaning up all stored keys\n            if (flag) {\n                this.clear();\n            }\n            TokenStorage.sessionStorage.setItem(TokenStorage.initializedFlag, 'true');\n            // When leaving page or refreshing\n            TokenStorage.window.addEventListener('unload', () => {\n                TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n            });\n        }\n    }\n    static clear() {\n        if (TokenStorage.canStore) {\n            let keyToDelete = [];\n            for (let i = 0; i < TokenStorage.sessionStorage.length; i++) {\n                const key = TokenStorage.sessionStorage.key(i);\n                // We manually removed startsWith here due to some problems with babel polyfill setup.\n                // Restore it when we figure out what's wrong.\n                //if (key.startsWith(TokenStorage.tokenStoragePrefix)) {\n                if (key.indexOf(TokenStorage.tokenStoragePrefix) === 0) {\n                    keyToDelete.push(key);\n                }\n            }\n            keyToDelete.forEach(key => TokenStorage.sessionStorage.removeItem(key));\n            TokenStorage.sessionStorage.removeItem(TokenStorage.initializedFlag);\n        }\n    }\n    static getKeyName(productId) {\n        return `${TokenStorage.tokenStoragePrefix}${productId}`;\n    }\n    static get canStore() {\n        return TokenStorage.sessionStorage && TokenStorage.window;\n    }\n}\nexports.TokenStorage = TokenStorage;\nTokenStorage.initializedFlag = 'twilio_twilsock_token_storage';\nTokenStorage.tokenStoragePrefix = 'twilio_continuation_token_';\nTokenStorage.initialize();\n"]},"metadata":{},"sourceType":"script"}