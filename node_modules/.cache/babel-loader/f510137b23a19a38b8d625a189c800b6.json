{"ast":null,"code":"// Area:\nfunction Area(increment, count, width, height) {\n  var margin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 10;\n  var i = 0,\n      w = 0;\n  var h = increment * 0.75 + margin * 2;\n\n  while (i < count) {\n    if (w + increment > width) {\n      w = 0;\n      h = h + increment * 0.75 + margin * 2;\n    }\n\n    w = w + increment + margin * 2;\n    i++;\n  }\n\n  if (h > height) return false;else return increment;\n} // Set Width and Margin \n\n\n_c = Area;\n\nvar setWidth = function setWidth(width, margin) {\n  var participants = document.getElementsByClassName('participant');\n\n  for (var s = 0; s < participants.length; s++) {\n    participants[s].style.width = width + \"px\";\n    participants[s].style.margin = margin + \"px\";\n    participants[s].style.height = width * 0.75 + \"px\";\n  }\n}; // calculate new width of participants on change\n\n\nvar FindNewWidth = function FindNewWidth() {\n  var margin = 2;\n  var scenary = document.getElementById('root');\n  var width = scenary.offsetWidth - margin * 2;\n  var height = scenary.offsetHeight - margin * 2;\n  var participants = document.getElementsByClassName('participant');\n  var newWidth = 0;\n  var i = 1;\n\n  while (i < 5000) {\n    var w = Area(i, participants.length, width, height, margin);\n\n    if (w === false) {\n      newWidth = i - 1;\n      break;\n    }\n\n    i++;\n  } // set styles\n\n\n  newWidth = newWidth - margin * 2;\n  setWidth(newWidth, margin);\n};\n\n_c2 = FindNewWidth;\nexport default FindNewWidth;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Area\");\n$RefreshReg$(_c2, \"FindNewWidth\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/GridLayout.js"],"names":["Area","increment","count","width","height","margin","i","w","h","setWidth","participants","document","getElementsByClassName","s","length","style","FindNewWidth","scenary","getElementById","offsetWidth","offsetHeight","newWidth"],"mappings":"AAAE;AACA,SAASA,IAAT,CAAcC,SAAd,EAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,MAAvC,EAA4D;AAAA,MAAbC,MAAa,uEAAJ,EAAI;AAC1D,MAAIC,CAAC,GAAC,CAAN;AAAA,MAASC,CAAC,GAAG,CAAb;AACA,MAAIC,CAAC,GAAGP,SAAS,GAAG,IAAZ,GAAoBI,MAAM,GAAG,CAArC;;AACA,SAAOC,CAAC,GAAIJ,KAAZ,EAAoB;AAChB,QAAKK,CAAC,GAAGN,SAAL,GAAkBE,KAAtB,EAA6B;AACzBI,MAAAA,CAAC,GAAG,CAAJ;AACAC,MAAAA,CAAC,GAAGA,CAAC,GAAIP,SAAS,GAAG,IAAjB,GAA0BI,MAAM,GAAG,CAAvC;AACH;;AACDE,IAAAA,CAAC,GAAGA,CAAC,GAAGN,SAAJ,GAAiBI,MAAM,GAAG,CAA9B;AACAC,IAAAA,CAAC;AACJ;;AACD,MAAIE,CAAC,GAAGJ,MAAR,EAAgB,OAAO,KAAP,CAAhB,KACK,OAAOH,SAAP;AACN,C,CAED;;;KAfSD,I;;AAgBT,IAAMS,QAAQ,GAAG,SAAXA,QAAW,CAACN,KAAD,EAAQE,MAAR,EAAmB;AAClC,MAAIK,YAAY,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAAY,CAACI,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC1CH,IAAAA,YAAY,CAACG,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBZ,KAAtB,GAA8BA,KAAK,GAAG,IAAtC;AACAO,IAAAA,YAAY,CAACG,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBV,MAAtB,GAA+BA,MAAM,GAAG,IAAxC;AACAK,IAAAA,YAAY,CAACG,CAAD,CAAZ,CAAgBE,KAAhB,CAAsBX,MAAtB,GAAgCD,KAAK,GAAG,IAAT,GAAiB,IAAhD;AACH;AACF,CAPD,C,CASA;;;AACA,IAAMa,YAAY,GAAG,SAAfA,YAAe,GAAM;AAErB,MAAIX,MAAM,GAAG,CAAb;AACA,MAAIY,OAAO,GAAGN,QAAQ,CAACO,cAAT,CAAwB,MAAxB,CAAd;AACA,MAAIf,KAAK,GAAGc,OAAO,CAACE,WAAR,GAAuBd,MAAM,GAAG,CAA5C;AACA,MAAID,MAAM,GAAGa,OAAO,CAACG,YAAR,GAAwBf,MAAM,GAAG,CAA9C;AACA,MAAIK,YAAY,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAnB;AACA,MAAIS,QAAQ,GAAG,CAAf;AAEA,MAAIf,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAG,IAAX,EAAiB;AACb,QAAIC,CAAC,GAAGP,IAAI,CAACM,CAAD,EAAII,YAAY,CAACI,MAAjB,EAAyBX,KAAzB,EAAgCC,MAAhC,EAAwCC,MAAxC,CAAZ;;AACA,QAAIE,CAAC,KAAK,KAAV,EAAiB;AACbc,MAAAA,QAAQ,GAAIf,CAAC,GAAG,CAAhB;AACA;AACH;;AACDA,IAAAA,CAAC;AACJ,GAjBoB,CAmBzB;;;AACIe,EAAAA,QAAQ,GAAGA,QAAQ,GAAIhB,MAAM,GAAG,CAAhC;AACAI,EAAAA,QAAQ,CAACY,QAAD,EAAWhB,MAAX,CAAR;AACL,CAtBD;;MAAMW,Y;AAuBN,eAAeA,YAAf","sourcesContent":["  // Area:\n  function Area(increment, count, width, height, margin = 10) {\n    let i=0, w = 0;\n    let h = increment * 0.75 + (margin * 2);\n    while (i < (count)) {\n        if ((w + increment) > width) {\n            w = 0;\n            h = h + (increment * 0.75) + (margin * 2);\n        }\n        w = w + increment + (margin * 2);\n        i++;\n    }\n    if (h > height) return false;\n    else return increment;\n  }\n\n  // Set Width and Margin \n  const setWidth = (width, margin) => {\n    let participants = document.getElementsByClassName('participant');\n    for (var s = 0; s < participants.length; s++) {\n        participants[s].style.width = width + \"px\";\n        participants[s].style.margin = margin + \"px\";\n        participants[s].style.height = (width * 0.75) + \"px\";\n    }\n  }\n\n  // calculate new width of participants on change\n  const FindNewWidth = () => {\n  \n        let margin = 2;\n        let scenary = document.getElementById('root');\n        let width = scenary.offsetWidth - (margin * 2);\n        let height = scenary.offsetHeight - (margin * 2);\n        let participants = document.getElementsByClassName('participant');\n        let newWidth = 0;\n    \n        let i = 1;\n        while (i < 5000) {\n            let w = Area(i, participants.length, width, height, margin);\n            if (w === false) {\n                newWidth =  i - 1;\n                break;\n            }\n            i++;\n        }\n    \n    // set styles\n        newWidth = newWidth - (margin * 2);\n        setWidth(newWidth, margin);\n  }\n  export default FindNewWidth;"]},"metadata":{},"sourceType":"module"}