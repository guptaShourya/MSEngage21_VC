{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip'; // Rooms.js - connects to Twilio video services\n\nconst Room = ({\n  roomName,\n  room,\n  handleLogout\n}) => {\n  _s();\n\n  // State Variables - list of participants in the chat\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        participants = _useState2[0],\n        setParticipants = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        prevDominantSpeaker = _useState4[0],\n        setDominantSpeaker = _useState4[1];\n\n  useEffect(() => {\n    // Methods to connect & disconnect a participant\n    const participantConnected = participant => {\n      setParticipants(prevParticipants => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = participant => {\n      setParticipants(prevParticipants => prevParticipants.filter(p => p !== participant));\n    }; // Connects / Disconnect once the component is rendered\n\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected); // Remove the eventlisteners once unmounted\n\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n  const remoteParticipants = participants.map(participant => /*#__PURE__*/_jsxDEV(Participant, {\n    participant: participant\n  }, participant.sid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this));\n  room.on('dominantSpeakerChanged', participant => {\n    if (prevDominantSpeaker !== 0) {\n      document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant');\n    }\n\n    document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n    setDominantSpeaker(participant.sid);\n    setTimeout(() => {\n      document.getElementById(participant.sid).setAttribute('class', 'participant');\n    }, 3000);\n  });\n\n  const zoomTrack = event => {\n    // console.log(event.target);\n    const trackElement = event.target;\n\n    if (trackElement.childNodes.length === 0) {\n      if (!trackElement.classList.contains('screenZoomed')) {\n        // zoom in\n        trackElement.classList.add('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.add('participantHidden');\n        document.getElementById('toolbar').classList.add('toolbarMin');\n      } else {\n        // zoom out\n        trackElement.classList.remove('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.remove('participantHidden');\n        document.getElementById('toolbar').classList.remove('toolbarMin');\n      }\n    }\n  };\n\n  document.title = \"ROOM - \" + roomName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Click to toogle full screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"screen\",\n        onClick: zoomTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-participant\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      id: \"participants\",\n      children: [room ? /*#__PURE__*/_jsxDEV(Participant, {\n        participant: room.localParticipant,\n        local: true\n      }, room.localParticipant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this) : \"\", remoteParticipants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Room, \"Z9cMtH+rsVRt9xun5mdar5JA0VQ=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js"],"names":["React","useEffect","useState","Participant","Tooltip","Room","roomName","room","handleLogout","participants","setParticipants","prevDominantSpeaker","setDominantSpeaker","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","off","remoteParticipants","map","sid","document","getElementById","setAttribute","setTimeout","zoomTrack","event","trackElement","target","childNodes","length","classList","contains","add","container","remove","title","display","flexWrap","localParticipant"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Rooms.js - connects to Twilio video services\n\nconst Room = ({ roomName, room, handleLogout }) => {\n\n  // State Variables - list of participants in the chat\n  const [participants, setParticipants] = useState([]);\n  const [prevDominantSpeaker, setDominantSpeaker] = useState(0);\n\n  useEffect(() => {\n\n    // Methods to connect & disconnect a participant\n    const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n    };\n\n    const participantDisconnected = (participant) => {\n      setParticipants((prevParticipants) =>\n        prevParticipants.filter((p) => p !== participant)\n      );\n    };\n\n    // Connects / Disconnect once the component is rendered\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n\n    // Remove the eventlisteners once unmounted\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n\n  const remoteParticipants = participants.map((participant) => (\n    <Participant key={participant.sid} participant={participant} />\n  ));\n\n  room.on('dominantSpeakerChanged', (participant) => {\n    if(prevDominantSpeaker !== 0){\n      document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant');\n    }\n    document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n    setDominantSpeaker(participant.sid);\n    setTimeout(()=>{document.getElementById(participant.sid).setAttribute('class', 'participant');}, 3000)\n  });\n\n  const zoomTrack = (event) => {\n    // console.log(event.target);\n    const trackElement = event.target;\n    if(trackElement.childNodes.length === 0){\n      if (!trackElement.classList.contains('screenZoomed')) {\n        // zoom in\n        trackElement.classList.add('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.add('participantHidden');\n        document.getElementById('toolbar').classList.add('toolbarMin');\n      }\n      else {\n        // zoom out\n        trackElement.classList.remove('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.remove('participantHidden');\n        document.getElementById('toolbar').classList.remove('toolbarMin');\n      }\n    }\n  }\n\n  document.title = \"ROOM - \" + roomName;\n  return (\n    <div className=\"room\">\n      <Tooltip title = 'Click to toogle full screen'>\n        <div id = 'screen' onClick = {zoomTrack}></div>\n      </Tooltip>\n      <div className=\"local-participant\" style = {{display:'flex', flexWrap:'wrap'}} id = 'participants'>\n        {room ? (\n          <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n            local = {true}\n          />\n        ) : (\n          \"\"\n        )}\n        {remoteParticipants}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}