{"ast":null,"code":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar AsyncVar = require('../../util/asyncvar');\n/**\n * @interface MediaSignalingTransport\n * @property {function(object): boolean} send\n * @emits MediaSignalingTransport#message\n */\n\n/**\n * The {@link MediaSignalingTransport} received a message.\n * @event MediaSignalingTransport#message\n * @param {object} message\n */\n\n/**\n * @interface LatencyStats\n * @property {number} jitter\n * @property {number} rtt\n * @property {number} level\n */\n\n/**\n * @interface FractionLostStats\n * @property {number} fractionLost\n * @property {number} level\n */\n\n/**\n * @interface BandwidthStats\n * @property {number} actual\n * @property {number} available\n * @property {number} level\n */\n\n/**\n * @interface SendOrRecvStats\n * @property {BandwidthStats} bandwidth\n * @property {FractionLostStats} fractionLost\n * @property {LatencyStats} latency\n */\n\n/**\n * @interface MediaLevels\n * @property {number} send\n * @property {SendOrRecvStats} sendStats\n * @property {number} recv\n * @property {SendOrRecvStats} recvStats\n */\n\n/**\n * @interface NetworkQualityLevels\n * @property {number} level\n * @property {MediaLevels} audio\n * @property {MediaLevels} video\n */\n\n/**\n * @typedef {PeerConnectionSummary} NetworkQualityInputs\n */\n\n/**\n * @classdesc The {@link NetworkQualitySignaling} class allows submitting\n *   {@link NetworkQualityInputs} for computing {@link NetworkQualityLevel}. It\n *   does so by sending and receiving messages over a\n *   {@link MediaSignalingTransport}. The exact transport used depends on the\n *   topology of the {@link Room} that {@link NetworkQualitySignaling} is being\n *   used within: for P2P Rooms, we re-use the {@link TransportV2}; and for\n *   Group Rooms, we use a {@link DataTransport}.\n * @emits NetworkQualitySignaling#updated\n */\n\n\nvar NetworkQualitySignaling = function (_MediaSignaling) {\n  _inherits(NetworkQualitySignaling, _MediaSignaling);\n  /**\n   * Construct a {@link NetworkQualitySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   */\n\n\n  function NetworkQualitySignaling(getReceiver, networkQualityConfiguration, options) {\n    _classCallCheck(this, NetworkQualitySignaling);\n\n    var _this = _possibleConstructorReturn(this, (NetworkQualitySignaling.__proto__ || Object.getPrototypeOf(NetworkQualitySignaling)).call(this, getReceiver, 'network_quality', options));\n\n    Object.defineProperties(_this, {\n      _level: {\n        value: null,\n        writable: true\n      },\n      _levels: {\n        value: null,\n        writable: true\n      },\n      _remoteLevels: {\n        value: new Map(),\n        writable: true\n      },\n      _networkQualityInputs: {\n        value: new AsyncVar()\n      },\n      _networkQualityReportLevels: {\n        get: function get() {\n          return {\n            reportLevel: networkQualityConfiguration.local,\n            remoteReportLevel: networkQualityConfiguration.remote\n          };\n        }\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'network_quality':\n            _this._handleNetworkQualityMessage(message);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    _this._sendNetworkQualityInputs();\n\n    return _this;\n  }\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} level - initially null\n   */\n\n\n  _createClass(NetworkQualitySignaling, [{\n    key: '_handleNetworkQualityMessage',\n\n    /**\n     * Check to see if the {@link NetworkQualityLevel} is new, and raise an\n     * event if necessary.\n     * @private\n     * @param {object} message\n     * @returns {void}\n     */\n    value: function _handleNetworkQualityMessage(message) {\n      var _this2 = this;\n\n      var updated = false;\n      var level = null;\n      var local = message ? message.local : null;\n\n      if (typeof local === 'number') {\n        // NOTE(mroberts): In prod, we plan to only send the level.\n        level = local;\n        this._levels = null;\n      } else if ((typeof local === 'undefined' ? 'undefined' : _typeof(local)) === 'object' && local) {\n        // NOTE(mroberts): In dev, we plan to send the decomposed levels. An early\n        // VMS version does not compute `level` for us, so we fallback to taking\n        // the minimum ourselves.\n        this._levels = local;\n        level = typeof local.level === 'number' ? local.level : Math.min(local.audio.send, local.audio.recv, local.video.send, local.video.recv);\n      }\n\n      if (level !== null && this.level !== level) {\n        this._level = level;\n        updated = true;\n      }\n\n      this._remoteLevels = message && message.remotes ? message.remotes.reduce(function (levels, obj) {\n        var oldObj = _this2._remoteLevels.get(obj.sid) || {};\n\n        if (oldObj.level !== obj.level) {\n          updated = true;\n        }\n\n        return levels.set(obj.sid, obj);\n      }, new Map()) : this._remoteLevels;\n\n      if (updated) {\n        this.emit('updated');\n      }\n\n      setTimeout(function () {\n        return _this2._sendNetworkQualityInputs();\n      }, 1000);\n    }\n    /**\n     * Start sending {@link NetworkQualityInputs}.\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_sendNetworkQualityInputs',\n    value: function _sendNetworkQualityInputs() {\n      var _this3 = this;\n\n      return this._networkQualityInputs.take().then(function (networkQualityInputs) {\n        if (_this3._transport) {\n          _this3._transport.publish(createNetworkQualityInputsMessage(networkQualityInputs, _this3._networkQualityReportLevels));\n        }\n      });\n    }\n    /**\n     * Put {@link NetworkQualityInputs} to be used for computing\n     * {@link NetworkQualityLevel}.\n     * @param {NetworkQualityInputs} networkQualityInputs\n     * @returns {void}\n     */\n\n  }, {\n    key: 'put',\n    value: function put(networkQualityInputs) {\n      this._networkQualityInputs.put(networkQualityInputs);\n    }\n  }, {\n    key: 'level',\n    get: function get() {\n      return this._level;\n    }\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this._levels;\n    }\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n\n  }, {\n    key: 'remoteLevels',\n    get: function get() {\n      return this._remoteLevels;\n    }\n  }]);\n\n  return NetworkQualitySignaling;\n}(MediaSignaling);\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualitySignaling#updated\n */\n\n/**\n * @typedef {object} NetworkQualityReportLevels\n * @param {number} reportLevel\n * @param {number} remoteReportLevel\n */\n\n/**\n * @param {NetworkQualityInputs} networkQualityInputs\n * @param {NetworkQualityReportLevels} networkQualityReportLevels\n * @returns {object} message\n */\n\n\nfunction createNetworkQualityInputsMessage(networkQualityInputs, networkQualityReportLevels) {\n  return Object.assign({\n    type: 'network_quality'\n  }, networkQualityInputs, networkQualityReportLevels);\n}\n\nmodule.exports = NetworkQualitySignaling;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio-video/es5/signaling/v2/networkqualitysignaling.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","value","setPrototypeOf","__proto__","MediaSignaling","require","AsyncVar","NetworkQualitySignaling","_MediaSignaling","getReceiver","networkQualityConfiguration","options","_this","getPrototypeOf","_level","_levels","_remoteLevels","Map","_networkQualityInputs","_networkQualityReportLevels","get","reportLevel","local","remoteReportLevel","remote","on","transport","message","type","_handleNetworkQualityMessage","_sendNetworkQualityInputs","_this2","updated","level","Math","min","audio","send","recv","video","remotes","reduce","levels","oldObj","sid","set","emit","setTimeout","_this3","take","then","networkQualityInputs","_transport","publish","createNetworkQualityInputsMessage","put","networkQualityReportLevels","assign","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar MediaSignaling = require('./mediasignaling');\nvar AsyncVar = require('../../util/asyncvar');\n\n/**\n * @interface MediaSignalingTransport\n * @property {function(object): boolean} send\n * @emits MediaSignalingTransport#message\n */\n\n/**\n * The {@link MediaSignalingTransport} received a message.\n * @event MediaSignalingTransport#message\n * @param {object} message\n */\n\n/**\n * @interface LatencyStats\n * @property {number} jitter\n * @property {number} rtt\n * @property {number} level\n */\n\n/**\n * @interface FractionLostStats\n * @property {number} fractionLost\n * @property {number} level\n */\n\n/**\n * @interface BandwidthStats\n * @property {number} actual\n * @property {number} available\n * @property {number} level\n */\n\n/**\n * @interface SendOrRecvStats\n * @property {BandwidthStats} bandwidth\n * @property {FractionLostStats} fractionLost\n * @property {LatencyStats} latency\n */\n\n/**\n * @interface MediaLevels\n * @property {number} send\n * @property {SendOrRecvStats} sendStats\n * @property {number} recv\n * @property {SendOrRecvStats} recvStats\n */\n\n/**\n * @interface NetworkQualityLevels\n * @property {number} level\n * @property {MediaLevels} audio\n * @property {MediaLevels} video\n */\n\n/**\n * @typedef {PeerConnectionSummary} NetworkQualityInputs\n */\n\n/**\n * @classdesc The {@link NetworkQualitySignaling} class allows submitting\n *   {@link NetworkQualityInputs} for computing {@link NetworkQualityLevel}. It\n *   does so by sending and receiving messages over a\n *   {@link MediaSignalingTransport}. The exact transport used depends on the\n *   topology of the {@link Room} that {@link NetworkQualitySignaling} is being\n *   used within: for P2P Rooms, we re-use the {@link TransportV2}; and for\n *   Group Rooms, we use a {@link DataTransport}.\n * @emits NetworkQualitySignaling#updated\n */\n\nvar NetworkQualitySignaling = function (_MediaSignaling) {\n  _inherits(NetworkQualitySignaling, _MediaSignaling);\n\n  /**\n   * Construct a {@link NetworkQualitySignaling}.\n   * @param {Promise<DataTrackReceiver>} getReceiver\n   * @param {NetworkQualityConfigurationImpl} networkQualityConfiguration\n   */\n  function NetworkQualitySignaling(getReceiver, networkQualityConfiguration, options) {\n    _classCallCheck(this, NetworkQualitySignaling);\n\n    var _this = _possibleConstructorReturn(this, (NetworkQualitySignaling.__proto__ || Object.getPrototypeOf(NetworkQualitySignaling)).call(this, getReceiver, 'network_quality', options));\n\n    Object.defineProperties(_this, {\n      _level: {\n        value: null,\n        writable: true\n      },\n      _levels: {\n        value: null,\n        writable: true\n      },\n      _remoteLevels: {\n        value: new Map(),\n        writable: true\n      },\n      _networkQualityInputs: {\n        value: new AsyncVar()\n      },\n      _networkQualityReportLevels: {\n        get: function get() {\n          return {\n            reportLevel: networkQualityConfiguration.local,\n            remoteReportLevel: networkQualityConfiguration.remote\n          };\n        }\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'network_quality':\n            _this._handleNetworkQualityMessage(message);\n            break;\n          default:\n            break;\n        }\n      });\n    });\n\n    _this._sendNetworkQualityInputs();\n    return _this;\n  }\n\n  /**\n   * Get the current {@link NetworkQualityLevel}, if any.\n   * @returns {?NetworkQualityLevel} level - initially null\n   */\n\n\n  _createClass(NetworkQualitySignaling, [{\n    key: '_handleNetworkQualityMessage',\n\n\n    /**\n     * Check to see if the {@link NetworkQualityLevel} is new, and raise an\n     * event if necessary.\n     * @private\n     * @param {object} message\n     * @returns {void}\n     */\n    value: function _handleNetworkQualityMessage(message) {\n      var _this2 = this;\n\n      var updated = false;\n      var level = null;\n      var local = message ? message.local : null;\n      if (typeof local === 'number') {\n        // NOTE(mroberts): In prod, we plan to only send the level.\n        level = local;\n        this._levels = null;\n      } else if ((typeof local === 'undefined' ? 'undefined' : _typeof(local)) === 'object' && local) {\n        // NOTE(mroberts): In dev, we plan to send the decomposed levels. An early\n        // VMS version does not compute `level` for us, so we fallback to taking\n        // the minimum ourselves.\n        this._levels = local;\n        level = typeof local.level === 'number' ? local.level : Math.min(local.audio.send, local.audio.recv, local.video.send, local.video.recv);\n      }\n      if (level !== null && this.level !== level) {\n        this._level = level;\n        updated = true;\n      }\n      this._remoteLevels = message && message.remotes ? message.remotes.reduce(function (levels, obj) {\n        var oldObj = _this2._remoteLevels.get(obj.sid) || {};\n        if (oldObj.level !== obj.level) {\n          updated = true;\n        }\n        return levels.set(obj.sid, obj);\n      }, new Map()) : this._remoteLevels;\n\n      if (updated) {\n        this.emit('updated');\n      }\n      setTimeout(function () {\n        return _this2._sendNetworkQualityInputs();\n      }, 1000);\n    }\n\n    /**\n     * Start sending {@link NetworkQualityInputs}.\n     * @private\n     * @returns {Promise<void>}\n     */\n\n  }, {\n    key: '_sendNetworkQualityInputs',\n    value: function _sendNetworkQualityInputs() {\n      var _this3 = this;\n\n      return this._networkQualityInputs.take().then(function (networkQualityInputs) {\n        if (_this3._transport) {\n          _this3._transport.publish(createNetworkQualityInputsMessage(networkQualityInputs, _this3._networkQualityReportLevels));\n        }\n      });\n    }\n\n    /**\n     * Put {@link NetworkQualityInputs} to be used for computing\n     * {@link NetworkQualityLevel}.\n     * @param {NetworkQualityInputs} networkQualityInputs\n     * @returns {void}\n     */\n\n  }, {\n    key: 'put',\n    value: function put(networkQualityInputs) {\n      this._networkQualityInputs.put(networkQualityInputs);\n    }\n  }, {\n    key: 'level',\n    get: function get() {\n      return this._level;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels}, if any.\n     * @returns {?NetworkQualityLevels} levels - initially null\n     */\n\n  }, {\n    key: 'levels',\n    get: function get() {\n      return this._levels;\n    }\n\n    /**\n     * Get the current {@link NetworkQualityLevels} of remote participants, if any.\n     * @returns {Map<String, NetworkQualityLevels>} remoteLevels\n     */\n\n  }, {\n    key: 'remoteLevels',\n    get: function get() {\n      return this._remoteLevels;\n    }\n  }]);\n\n  return NetworkQualitySignaling;\n}(MediaSignaling);\n\n/**\n * The {@link NetworkQualityLevel} changed.\n * @event NetworkQualitySignaling#updated\n */\n\n/**\n * @typedef {object} NetworkQualityReportLevels\n * @param {number} reportLevel\n * @param {number} remoteReportLevel\n */\n\n/**\n * @param {NetworkQualityInputs} networkQualityInputs\n * @param {NetworkQualityReportLevels} networkQualityReportLevels\n * @returns {object} message\n */\n\n\nfunction createNetworkQualityInputsMessage(networkQualityInputs, networkQualityReportLevels) {\n  return Object.assign({ type: 'network_quality' }, networkQualityInputs, networkQualityReportLevels);\n}\n\nmodule.exports = NetworkQualitySignaling;"]},"metadata":{},"sourceType":"script"}