{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/HomeScreen.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, CssBaseline, Grid, IconButton, List, TextField, Toolbar, Typography } from \"@material-ui/core\";\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar HomeScreen = function HomeScreen() {\n  _s();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      messages = _useState4[0],\n      setMessages = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loading = _useState6[0],\n      setLoading = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      channel = _useState8[0],\n      setChannel = _useState8[1];\n\n  var _useState9 = useState(\"fungal\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      username = _useState10[0],\n      setUsername = _useState10[1];\n\n  var _useState11 = useState(\"un\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      roomName = _useState12[0],\n      setRoomName = _useState12[1];\n\n  var scrollDiv = /*#__PURE__*/React.createRef(); //     //update username on change\n  // const handleUsernameChange = useCallback((event) => {\n  //     setUsername(event.target.value);\n  // }, []);\n  // // update room name on change\n  // const handleRoomNameChange = useCallback((event) => {\n  //     setRoomName(event.target.value);\n  // }, []);\n\n  var getToken = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(username) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/chat/token\", {\n                method: \"POST\",\n                body: JSON.stringify({\n                  identity: username\n                }),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              }).then(function (res) {\n                return res.json();\n              });\n\n            case 2:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.token);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getToken(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  useCallback( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n    var token, client, channelData, _channelData;\n\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            token = '';\n            setLoading(true);\n            _context5.prev = 2;\n            _context5.next = 5;\n            return getToken(username);\n\n          case 5:\n            token = _context5.sent;\n            _context5.next = 11;\n            break;\n\n          case 8:\n            _context5.prev = 8;\n            _context5.t0 = _context5[\"catch\"](2);\n            throw new Error(\"unable to get token, please reload this page\");\n\n          case 11:\n            _context5.next = 13;\n            return Chat.Client.create(token);\n\n          case 13:\n            client = _context5.sent;\n            client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n              var token;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) {\n                  switch (_context2.prev = _context2.next) {\n                    case 0:\n                      _context2.next = 2;\n                      return getToken(username);\n\n                    case 2:\n                      token = _context2.sent;\n                      client.updateToken(token);\n\n                    case 4:\n                    case \"end\":\n                      return _context2.stop();\n                  }\n                }\n              }, _callee2);\n            })));\n            client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n              var token;\n              return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                while (1) {\n                  switch (_context3.prev = _context3.next) {\n                    case 0:\n                      _context3.next = 2;\n                      return getToken(username);\n\n                    case 2:\n                      token = _context3.sent;\n                      client.updateToken(token);\n\n                    case 4:\n                    case \"end\":\n                      return _context3.stop();\n                  }\n                }\n              }, _callee3);\n            })));\n            client.on(\"channelJoined\", /*#__PURE__*/function () {\n              var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(channel) {\n                var prevMessages;\n                return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                  while (1) {\n                    switch (_context4.prev = _context4.next) {\n                      case 0:\n                        _context4.next = 2;\n                        return channel.getMessages();\n\n                      case 2:\n                        prevMessages = _context4.sent;\n                        console.log(prevMessages);\n                        setMessages(prevMessages.items || []);\n                        scrollToBottom();\n\n                      case 6:\n                      case \"end\":\n                        return _context4.stop();\n                    }\n                  }\n                }, _callee4);\n              }));\n\n              return function (_x2) {\n                return _ref5.apply(this, arguments);\n              };\n            }());\n            _context5.prev = 17;\n            _context5.next = 20;\n            return client.getChannelByUniqueName(roomName);\n\n          case 20:\n            channelData = _context5.sent;\n            _context5.next = 23;\n            return joinChannel(channelData);\n\n          case 23:\n            setChannel(channelData);\n            setLoading(false); // this.setState({ channel, loading: false });\n\n            _context5.next = 42;\n            break;\n\n          case 27:\n            _context5.prev = 27;\n            _context5.t1 = _context5[\"catch\"](17);\n            _context5.prev = 29;\n            _context5.next = 32;\n            return client.createChannel({\n              uniqueName: roomName,\n              friendlyName: roomName\n            });\n\n          case 32:\n            _channelData = _context5.sent;\n            _context5.next = 35;\n            return joinChannel(_channelData);\n\n          case 35:\n            setChannel(_channelData);\n            setLoading(false);\n            _context5.next = 42;\n            break;\n\n          case 39:\n            _context5.prev = 39;\n            _context5.t2 = _context5[\"catch\"](29);\n            throw new Error(\"unable to create channel, please reload this page\");\n\n          case 42:\n            return _context5.abrupt(\"return\", function () {\n              console.log(\":\");\n            });\n\n          case 43:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5, null, [[2, 8], [17, 27], [29, 39]]);\n  })), [roomName, username, joinChannel]);\n\n  var joinChannel = /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(channel) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              if (!(channel.channelState.status !== \"joined\")) {\n                _context6.next = 3;\n                break;\n              }\n\n              _context6.next = 3;\n              return channel.join();\n\n            case 3:\n              channel.on(\"messageAdded\", handleMessageAdded);\n\n            case 4:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function joinChannel(_x3) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n\n  var handleMessageAdded = function handleMessageAdded(message) {\n    console.log(channel);\n\n    if (messages) {\n      setMessages([].concat(_toConsumableArray(messages), [message]));\n      console.log(messages);\n    } else {\n      console.log(\"JI\");\n      setMessages([message]);\n    } //   !!messages ? setMessages([...messages, message]) :[message];\n\n\n    scrollToBottom();\n  };\n\n  var scrollToBottom = function scrollToBottom() {// const scrollHeight = scrollDiv.current.scrollHeight;\n    // const height = scrollDiv.current.clientHeight;\n    // const maxScrollTop = scrollHeight - height;\n    // scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n  };\n\n  var sendMessage = function sendMessage() {\n    if (text && String(text).trim()) {\n      setLoading(true);\n      channel && channel.sendMessage(text);\n      setText(\"\");\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(Backdrop, {\n      open: loading,\n      style: {\n        zIndex: 99999\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        style: {\n          color: \"white\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(AppBar, {\n      elevation: 10,\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Room: \".concat(roomName, \", User: \").concat(username)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 11\n    }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      direction: \"column\",\n      style: styles.mainGrid,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: styles.gridItemChatList,\n        ref: scrollDiv,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          dense: true,\n          children: messages && messages.map(function (message) {\n            return /*#__PURE__*/_jsxDEV(ChatItem, {\n              message: message,\n              email: username\n            }, message.index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        style: styles.gridItemMessage,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"row\",\n          justify: \"center\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            style: styles.textFieldContainer,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              style: styles.textField,\n              placeholder: \"Enter message\",\n              variant: \"outlined\",\n              multiline: true,\n              rows: 2,\n              value: text,\n              disabled: !channel,\n              onChange: function onChange(event) {\n                setText(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              style: styles.sendButton,\n              onClick: sendMessage,\n              disabled: !channel || !text,\n              children: /*#__PURE__*/_jsxDEV(Send, {\n                style: styles.sendIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 15\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 11\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(HomeScreen, \"aFVVL5pU/kpwaD6IHTsTklhYiLE=\");\n\n_c = HomeScreen;\nvar styles = {\n  textField: {\n    width: \"100%\",\n    borderWidth: 0,\n    borderColor: \"transparent\"\n  },\n  textFieldContainer: {\n    flex: 1,\n    marginRight: 12\n  },\n  gridItem: {\n    paddingTop: 12,\n    paddingBottom: 12\n  },\n  gridItemChatList: {\n    overflow: \"auto\",\n    height: \"70vh\"\n  },\n  gridItemMessage: {\n    marginTop: 12,\n    marginBottom: 12\n  },\n  sendButton: {\n    backgroundColor: \"#3f51b5\"\n  },\n  sendIcon: {\n    color: \"white\"\n  },\n  mainGrid: {\n    paddingTop: 100,\n    borderWidth: 1\n  }\n};\nexport default HomeScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/HomeScreen.js"],"names":["React","useCallback","useEffect","useState","AppBar","Backdrop","CircularProgress","Container","CssBaseline","Grid","IconButton","List","TextField","Toolbar","Typography","Send","ChatItem","Chat","require","HomeScreen","text","setText","messages","setMessages","loading","setLoading","channel","setChannel","username","setUsername","roomName","setRoomName","scrollDiv","createRef","getToken","fetch","method","body","JSON","stringify","identity","headers","then","res","json","data","token","Error","Client","create","client","on","updateToken","getMessages","prevMessages","console","log","items","scrollToBottom","getChannelByUniqueName","channelData","joinChannel","createChannel","uniqueName","friendlyName","channelState","status","join","handleMessageAdded","message","sendMessage","String","trim","zIndex","color","styles","mainGrid","gridItemChatList","map","index","gridItemMessage","textFieldContainer","textField","event","target","value","sendButton","sendIcon","width","borderWidth","borderColor","flex","marginRight","gridItem","paddingTop","paddingBottom","overflow","height","marginTop","marginBottom","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  AppBar,\n  Backdrop,\n  CircularProgress,\n  Container,\n  CssBaseline,\n  Grid,\n  IconButton,\n  List,\n  TextField,\n  Toolbar,\n  Typography,\n} from \"@material-ui/core\";\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nconst Chat = require(\"twilio-chat\");\n\n\nconst HomeScreen = () => {\n    \n    const [text, setText] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [channel, setChannel] = useState(null);\n    const [username, setUsername] = useState(\"fungal\");\n    const [roomName, setRoomName] = useState(\"un\");\n    const scrollDiv = React.createRef();\n    //     //update username on change\n    // const handleUsernameChange = useCallback((event) => {\n    //     setUsername(event.target.value);\n    // }, []);\n\n    // // update room name on change\n    // const handleRoomNameChange = useCallback((event) => {\n    //     setRoomName(event.target.value);\n    // }, []);\n\n    const getToken = async (username) => {\n        const data = await fetch(\"/chat/token\", {\n            method: \"POST\",\n            body: JSON.stringify({\n              identity: username,\n            }),\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n          }).then((res) => res.json());\n          return data.token;\n    }\n\n  useCallback(async ()=>{\n\n      let token = '';\n      setLoading(true);\n      \n      try{\n          token = await getToken(username);\n      }catch{\n          throw new Error(\"unable to get token, please reload this page\");\n      }\n\n      const client = await Chat.Client.create(token);\n\n      client.on(\"tokenAboutToExpire\", async () => {\n          const token = await getToken(username);\n          client.updateToken(token);\n        });\n    \n        client.on(\"tokenExpired\", async () => {\n          const token = await getToken(username);\n          client.updateToken(token);\n        });\n    \n        client.on(\"channelJoined\", async (channel) => {\n          // getting list of all messages since this is an existing channel\n          const prevMessages = await channel.getMessages();\n          console.log(prevMessages);\n          setMessages(prevMessages.items || []);\n          scrollToBottom();\n        });\n    \n        try {\n          const channelData = await client.getChannelByUniqueName(roomName);\n          await joinChannel(channelData);\n          setChannel(channelData);\n          setLoading(false);\n          // this.setState({ channel, loading: false });\n        } catch {\n          try {\n            const channelData = await client.createChannel({\n              uniqueName: roomName,\n              friendlyName: roomName,\n            });\n            await joinChannel(channelData);\n            setChannel(channelData);\n            setLoading(false);\n          } catch {\n            throw new Error(\"unable to create channel, please reload this page\");\n              }\n          }\n          return () => {\n            console.log(\":\");\n          }\n  }, [roomName, username, joinChannel]);\n\n    const joinChannel = async (channel) => {\n        if (channel.channelState.status !== \"joined\") {\n          await channel.join();\n        }\n        channel.on(\"messageAdded\", handleMessageAdded);\n      };\n    \n      const handleMessageAdded = (message) => {\n        console.log(channel);\n          if(messages){\n              setMessages([...messages, message]);\n              console.log(messages);\n          }else{\n            console.log(\"JI\")\n              setMessages([message]);\n          }\n        //   !!messages ? setMessages([...messages, message]) :[message];\n          scrollToBottom();\n      };\n  \n      \n\n      const scrollToBottom = () => {\n        // const scrollHeight = scrollDiv.current.scrollHeight;\n        // const height = scrollDiv.current.clientHeight;\n        // const maxScrollTop = scrollHeight - height;\n        // scrollDiv.current.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\n      };\n    \n      const sendMessage = () => {\n        if (text && String(text).trim()) {\n            setLoading(true);\n          channel && channel.sendMessage(text);\n          setText(\"\");\n          setLoading(false);\n        }\n      };\n\n      return (\n        <Container component=\"main\" maxWidth=\"md\">\n          <Backdrop open={loading} style={{ zIndex: 99999 }}>\n            <CircularProgress style={{ color: \"white\" }} />\n          </Backdrop>\n          <AppBar elevation={10}>\n            <Toolbar>\n              <Typography variant=\"h6\">\n                {`Room: ${roomName}, User: ${username}`}\n              </Typography>\n            </Toolbar>\n          </AppBar>\n          <CssBaseline />\n          <Grid container direction=\"column\" style={styles.mainGrid}>\n            <Grid item style={styles.gridItemChatList} ref={scrollDiv}>\n              <List dense={true}>\n                {messages &&\n                  messages.map((message) => (\n                    <ChatItem\n                      key={message.index}\n                      message={message}\n                      email={username}\n                    />\n                  ))}\n              </List>\n            </Grid>\n            <Grid item style={styles.gridItemMessage}>\n              <Grid\n                container\n                direction=\"row\"\n                justify=\"center\"\n                alignItems=\"center\"\n              >\n                <Grid item style={styles.textFieldContainer}>\n                  <TextField\n                    required\n                    style={styles.textField}\n                    placeholder=\"Enter message\"\n                    variant=\"outlined\"\n                    multiline\n                    rows={2}\n                    value={text}\n                    disabled={!channel}\n                    onChange={(event) =>{\n                        setText(event.target.value)\n                    }\n                    }\n                  />\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    style={styles.sendButton}\n                    onClick={sendMessage}\n                    disabled={!channel || !text}\n                  >\n                    <Send style={styles.sendIcon} />\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Container>\n      );  \n\n};\n\nconst styles = {\n    textField: { width: \"100%\", borderWidth: 0, borderColor: \"transparent\" },\n    textFieldContainer: { flex: 1, marginRight: 12 },\n    gridItem: { paddingTop: 12, paddingBottom: 12 },\n    gridItemChatList: { overflow: \"auto\", height: \"70vh\" },\n    gridItemMessage: { marginTop: 12, marginBottom: 12 },\n    sendButton: { backgroundColor: \"#3f51b5\" },\n    sendIcon: { color: \"white\" },\n    mainGrid: { paddingTop: 100, borderWidth: 1 },\n  };\n\n  export default HomeScreen;"]},"metadata":{},"sourceType":"module"}