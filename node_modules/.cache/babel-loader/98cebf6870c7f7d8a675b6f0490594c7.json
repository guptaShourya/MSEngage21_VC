{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, DepthwiseConv2dNativeBackpropFilter } from '@tensorflow/tfjs-core';\nimport { DepthwiseConv2DDerFilterProgram } from '../conv_backprop_gpu_depthwise';\nexport function depthwiseConv2dNativeBackpropFilter(args) {\n  const inputs = args.inputs,\n        backend = args.backend,\n        attrs = args.attrs;\n  const x = inputs.x,\n        dy = inputs.dy;\n  const strides = attrs.strides,\n        dilations = attrs.dilations,\n        pad = attrs.pad,\n        dimRoundingMode = attrs.dimRoundingMode,\n        filterShape = attrs.filterShape;\n  const convInfo = backend_util.computeConv2DInfo(x.shape, filterShape, strides, dilations, pad, dimRoundingMode, true\n  /* depthwise */\n  );\n  const program = new DepthwiseConv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\nexport const depthwiseConv2dNativeBackpropFilterConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropFilter\n};","map":{"version":3,"sources":["../../src/kernels/DepthwiseConv2dNativeBackpropFilter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,mCAAtB,QAA+K,uBAA/K;AAGA,SAAQ,+BAAR,QAA8C,gCAA9C;AAEA,OAAM,SAAU,mCAAV,CAA8C,IAA9C,EAIL;AAAA,QACQ,MADR,GACkC,IADlC,CACQ,MADR;AAAA,QACgB,OADhB,GACkC,IADlC,CACgB,OADhB;AAAA,QACyB,KADzB,GACkC,IADlC,CACyB,KADzB;AAAA,QAEQ,CAFR,GAEiB,MAFjB,CAEQ,CAFR;AAAA,QAEW,EAFX,GAEiB,MAFjB,CAEW,EAFX;AAAA,QAGQ,OAHR,GAGiE,KAHjE,CAGQ,OAHR;AAAA,QAGiB,SAHjB,GAGiE,KAHjE,CAGiB,SAHjB;AAAA,QAG4B,GAH5B,GAGiE,KAHjE,CAG4B,GAH5B;AAAA,QAGiC,eAHjC,GAGiE,KAHjE,CAGiC,eAHjC;AAAA,QAGkD,WAHlD,GAGiE,KAHjE,CAGkD,WAHlD;AAKC,QAAM,QAAQ,GAAG,YAAY,CAAC,iBAAb,CACb,CAAC,CAAC,KADW,EACgC,WADhC,EAC6C,OAD7C,EAEb,SAFa,EAEF,GAFE,EAEG,eAFH,EAEoB;AAAK;AAFzB,GAAjB;AAIA,QAAM,OAAO,GAAG,IAAI,+BAAJ,CAAoC,QAApC,CAAhB;AACA,SAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,CAAD,EAAI,EAAJ,CAAjC,EAA0C,SAA1C,CAAP;AACD;AAED,OAAO,MAAM,yCAAyC,GAAiB;AACrE,EAAA,UAAU,EAAE,mCADyD;AAErE,EAAA,WAAW,EAAE,OAFwD;AAGrE,EAAA,UAAU,EAAE;AAHyD,CAAhE","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\nimport {backend_util, DepthwiseConv2dNativeBackpropFilter, DepthwiseConv2dNativeBackpropFilterAttrs, DepthwiseConv2dNativeBackpropFilterInputs, KernelConfig, KernelFunc} from '@tensorflow/tfjs-core';\n\nimport {MathBackendWebGL} from '../backend_webgl';\nimport {DepthwiseConv2DDerFilterProgram} from '../conv_backprop_gpu_depthwise';\n\nexport function depthwiseConv2dNativeBackpropFilter(args: {\n  inputs: DepthwiseConv2dNativeBackpropFilterInputs,\n  attrs: DepthwiseConv2dNativeBackpropFilterAttrs,\n  backend: MathBackendWebGL\n}) {\n  const {inputs, backend, attrs} = args;\n  const {x, dy} = inputs;\n  const {strides, dilations, pad, dimRoundingMode, filterShape} = attrs;\n\n  const convInfo = backend_util.computeConv2DInfo(\n      x.shape as [number, number, number, number], filterShape, strides,\n      dilations, pad, dimRoundingMode, true /* depthwise */);\n\n  const program = new DepthwiseConv2DDerFilterProgram(convInfo);\n  return backend.runWebGLProgram(program, [x, dy], 'float32');\n}\n\nexport const depthwiseConv2dNativeBackpropFilterConfig: KernelConfig = {\n  kernelName: DepthwiseConv2dNativeBackpropFilter,\n  backendName: 'webgl',\n  kernelFunc: depthwiseConv2dNativeBackpropFilter as {} as KernelFunc\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}