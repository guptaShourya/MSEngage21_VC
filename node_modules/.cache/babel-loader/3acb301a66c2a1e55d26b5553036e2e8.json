{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip'; // Rooms.js - connects to Twilio video services\n\nvar Room = function Room(_ref) {\n  _s();\n\n  var roomName = _ref.roomName,\n      room = _ref.room,\n      handleLogout = _ref.handleLogout;\n\n  // State Variables - list of participants in the chat\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      participants = _useState2[0],\n      setParticipants = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevDominantSpeaker = _useState4[0],\n      setDominantSpeaker = _useState4[1];\n\n  useEffect(function () {\n    // Methods to connect & disconnect a participant\n    var participantConnected = function participantConnected(participant) {\n      setParticipants(function (prevParticipants) {\n        return [].concat(_toConsumableArray(prevParticipants), [participant]);\n      });\n\n      var _require = require('rect-scaler'),\n          largestRect = _require.largestRect;\n\n      var container = document.getElementById('participants');\n      var containerInfo = container.getBoundingClientRect();\n      var containerWidth = containerInfo.width;\n      var containerHeight = containerInfo.height;\n      var vids = document.getElementsByTagName('video');\n      var numRects = vids.length;\n      var rectWidth = vids[0].getBoundingClientRect().width;\n      var rectHeight = vids[0].getBoundingClientRect().height;\n      var result = largestRect(containerWidth, containerHeight, numRects, rectWidth, rectHeight);\n      console.log(result);\n\n      for (var i = 0; i < numRects; i++) {\n        vids[i].style.width = result.width + \"px\";\n        vids[i].style.height = result.height + \"px\";\n      }\n    };\n\n    var participantDisconnected = function participantDisconnected(participant) {\n      setParticipants(function (prevParticipants) {\n        return prevParticipants.filter(function (p) {\n          return p !== participant;\n        });\n      });\n    }; // Connects / Disconnect once the component is rendered\n\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected); // Remove the eventlisteners once unmounted\n\n    return function () {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n  var remoteParticipants = participants.map(function (participant) {\n    return /*#__PURE__*/_jsxDEV(Participant, {\n      participant: participant\n    }, participant.sid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, _this);\n  });\n  room.on('dominantSpeakerChanged', function (participant) {\n    if (prevDominantSpeaker !== 0) {\n      document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant');\n    }\n\n    document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n    setDominantSpeaker(participant.sid);\n    setTimeout(function () {\n      document.getElementById(participant.sid).setAttribute('class', 'participant');\n    }, 3000);\n  });\n\n  var zoomTrack = function zoomTrack(event) {\n    // console.log(event.target);\n    var trackElement = event.target;\n\n    if (trackElement.childNodes.length === 0) {\n      if (!trackElement.classList.contains('screenZoomed')) {\n        // zoom in\n        trackElement.classList.add('screenZoomed');\n        var container = document.getElementById('participants');\n        container.classList.add('participantHidden');\n        document.getElementById('toolbar').classList.add('toolbarMin');\n      } else {\n        // zoom out\n        trackElement.classList.remove('screenZoomed');\n\n        var _container = document.getElementById('participants');\n\n        _container.classList.remove('participantHidden');\n\n        document.getElementById('toolbar').classList.remove('toolbarMin');\n      }\n    }\n  };\n\n  document.title = \"ROOM - \" + roomName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Click screen to toogle full screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"screen\",\n        onClick: zoomTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-participant\",\n      id: \"participants\",\n      children: [room ? /*#__PURE__*/_jsxDEV(Participant, {\n        participant: room.localParticipant,\n        local: true\n      }, room.localParticipant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, _this) : \"\", remoteParticipants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Room, \"Z9cMtH+rsVRt9xun5mdar5JA0VQ=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js"],"names":["React","useEffect","useState","Participant","Tooltip","Room","roomName","room","handleLogout","participants","setParticipants","prevDominantSpeaker","setDominantSpeaker","participantConnected","participant","prevParticipants","require","largestRect","container","document","getElementById","containerInfo","getBoundingClientRect","containerWidth","width","containerHeight","height","vids","getElementsByTagName","numRects","length","rectWidth","rectHeight","result","console","log","i","style","participantDisconnected","filter","p","on","forEach","off","remoteParticipants","map","sid","setAttribute","setTimeout","zoomTrack","event","trackElement","target","childNodes","classList","contains","add","remove","title","localParticipant"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip';\n\n// Rooms.js - connects to Twilio video services\n\nconst Room = ({ roomName, room, handleLogout }) => {\n\n  // State Variables - list of participants in the chat\n  const [participants, setParticipants] = useState([]);\n  const [prevDominantSpeaker, setDominantSpeaker] = useState(0);\n\n  useEffect(() => {\n\n    // Methods to connect & disconnect a participant\n    const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n      const {largestRect} = require('rect-scaler');\n      const container = document.getElementById('participants');\n      const containerInfo = container.getBoundingClientRect();\n      const containerWidth = containerInfo.width;\n      const containerHeight = containerInfo.height;\n      const vids = document.getElementsByTagName('video');\n      const numRects = vids.length;\n      const rectWidth = vids[0].getBoundingClientRect().width;\n      const rectHeight = vids[0].getBoundingClientRect().height;\n      const result = largestRect(containerWidth, containerHeight, numRects, rectWidth, rectHeight);\n      console.log(result);\n      for(let i = 0; i < numRects; i++){\n        vids[i].style.width = result.width + \"px\";\n        vids[i].style.height = result.height + \"px\";\n      }\n    };\n\n    const participantDisconnected = (participant) => {\n      setParticipants((prevParticipants) =>\n        prevParticipants.filter((p) => p !== participant)\n      );\n    };\n\n    // Connects / Disconnect once the component is rendered\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n\n    // Remove the eventlisteners once unmounted\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n\n  const remoteParticipants = participants.map((participant) => (\n    <Participant key={participant.sid} participant={participant} />\n  ));\n\n  room.on('dominantSpeakerChanged', (participant) => {\n    if(prevDominantSpeaker !== 0){\n      document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant');\n    }\n    document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n    setDominantSpeaker(participant.sid);\n    setTimeout(()=>{document.getElementById(participant.sid).setAttribute('class', 'participant');}, 3000)\n  });\n\n  const zoomTrack = (event) => {\n    // console.log(event.target);\n    const trackElement = event.target;\n    if(trackElement.childNodes.length === 0){\n      if (!trackElement.classList.contains('screenZoomed')) {\n        // zoom in\n        trackElement.classList.add('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.add('participantHidden');\n        document.getElementById('toolbar').classList.add('toolbarMin');\n      }\n      else {\n        // zoom out\n        trackElement.classList.remove('screenZoomed');\n        let container = document.getElementById('participants');\n        container.classList.remove('participantHidden');\n        document.getElementById('toolbar').classList.remove('toolbarMin');\n      }\n    }\n  }\n\n  document.title = \"ROOM - \" + roomName;\n  return (\n    <div className=\"room\">\n      <Tooltip title = 'Click screen to toogle full screen'>\n        <div id = 'screen' onClick = {zoomTrack}></div>\n      </Tooltip>\n      <div className=\"local-participant\"  id = 'participants'>\n        {room ? (\n          <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n            local = {true}\n          />\n        ) : (\n          \"\"\n        )}\n        {remoteParticipants}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}