{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Participant.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({\n  participant,\n  local,\n  room\n}) => {\n  _s();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        videoTracks = _useState2[0],\n        setVideoTracks = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        audioTracks = _useState4[0],\n        setAudioTracks = _useState4[1];\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = trackMap => Array.from(trackMap.values()).map(publication => publication.track).filter(track => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks)); // setScreenTracks(trackpubsToTracks(participant.screenTracks));\n\n    const trackSubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => [...audioTracks, track]);\n      } // else{\n      //   setScreenTracks((screenTracks) => [...screenTracks, track]);\n      // }\n\n    };\n\n    const trackUnsubscribed = track => {\n      if (track.kind === \"video\") {\n        setVideoTracks(videoTracks => videoTracks.filter(v => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks(audioTracks => audioTracks.filter(a => a !== track));\n      } // else{\n      //   setScreenTracks((screenTracks) => screenTracks.filter((s) => s !== track));\n      // }\n\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]); // setScreenTracks([]);\n\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  const _require = require('twilio-video'),\n        LocalVideoTrack = _require.LocalVideoTrack;\n\n  var screenTrack;\n  navigator.mediaDevices.getDisplayMedia().then(stream => {\n    screenTrack = new LocalVideoTrack(stream.getTracks()[0]);\n    room.localParticipant.publishTrack(screenTrack);\n    console.log(screenTrack);\n  }).catch(() => {\n    alert('Could not share the screen.');\n  });\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"participant\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      autoPlay: true,\n      muted: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: local ? \"You\" : participant.identity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Participant, \"mkU8c/5Desq4gBVgG4t6VGqYbcQ=\");\n\n_c = Participant;\nexport default Participant;\n\nvar _c;\n\n$RefreshReg$(_c, \"Participant\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","local","room","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","require","LocalVideoTrack","screenTrack","navigator","mediaDevices","getDisplayMedia","then","stream","getTracks","localParticipant","publishTrack","console","log","catch","alert","videoTrack","attach","current","detach","audioTrack","identity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant, local, room }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n    // setScreenTracks(trackpubsToTracks(participant.screenTracks));\n\n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n      // else{\n      //   setScreenTracks((screenTracks) => [...screenTracks, track]);\n      // }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n      // else{\n      //   setScreenTracks((screenTracks) => screenTracks.filter((s) => s !== track));\n      // }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      // setScreenTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n  const {LocalVideoTrack} = require('twilio-video');\n  var screenTrack;\n  navigator.mediaDevices.getDisplayMedia().then(stream => {\n    screenTrack = new LocalVideoTrack(stream.getTracks()[0]);\n    room.localParticipant.publishTrack(screenTrack);\n    console.log(screenTrack)\n}).catch(() => {\n    alert('Could not share the screen.')\n});\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n  return (\n    <div className=\"participant\">\n      <video ref={videoRef} autoPlay={true}/>\n      <audio ref={audioRef} autoPlay={true} muted={false} />\n      <p>{local?\"You\":participant.identity}</p>\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}