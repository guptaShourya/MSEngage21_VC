{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar SessionStorage = /*#__PURE__*/function () {\n  function SessionStorage(config, storage) {\n    _classCallCheck(this, SessionStorage);\n\n    this.config = config;\n    this.storageId = null;\n\n    try {\n      this.storage = storage || sessionStorage;\n    } catch (e) {}\n  }\n\n  _createClass(SessionStorage, [{\n    key: \"storageKey\",\n    value: function storageKey(type, key) {\n      return \"\".concat(this.storageId, \"::\").concat(type, \"::\").concat(key);\n    }\n  }, {\n    key: \"updateStorageId\",\n    value: function updateStorageId(storageId) {\n      this.storageId = storageId;\n    }\n  }, {\n    key: \"store\",\n    value: function store(type, id, value) {\n      if (!this.isReady) {\n        return null;\n      }\n\n      return this._store(this.storageKey(type, id), value);\n    }\n  }, {\n    key: \"read\",\n    value: function read(type, id) {\n      if (!this.isReady) {\n        return null;\n      }\n\n      return this._read(this.storageKey(type, id));\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(type, sid, uniqueName) {\n      if (!this.isReady) {\n        return null;\n      }\n\n      try {\n        this.storage.removeItem(this.storageKey(type, sid));\n\n        if (uniqueName) {\n          this.storage.removeItem(this.storageKey(type, uniqueName));\n        }\n      } catch (e) {}\n    }\n  }, {\n    key: \"update\",\n    value: function update(type, sid, uniqueName, patch) {\n      if (!this.isReady) {\n        return null;\n      } // Currently cache may have root stored twice - by sid and by uniqueName\n      // Maybe need to create some index if needed\n\n\n      this._apply(this.storageKey(type, sid), patch);\n\n      if (uniqueName) {\n        this._apply(this.storageKey(type, uniqueName), patch);\n      }\n    }\n  }, {\n    key: \"_store\",\n    value: function _store(key, value) {\n      try {\n        this.storage.setItem(key, JSON.stringify(value));\n      } catch (e) {}\n    }\n  }, {\n    key: \"_read\",\n    value: function _read(key) {\n      try {\n        var storedData = this.storage.getItem(key);\n\n        if (storedData) {\n          return JSON.parse(storedData);\n        }\n      } catch (e) {}\n\n      return null;\n    }\n  }, {\n    key: \"_apply\",\n    value: function _apply(key, patch) {\n      var value = this._read(key);\n\n      if (!value) {\n        return false;\n      }\n\n      this._store(key, Object.assign(value, patch));\n    }\n  }, {\n    key: \"isReady\",\n    get: function get() {\n      return this.config.sessionStorageEnabled && !!this.storageId;\n    }\n  }]);\n\n  return SessionStorage;\n}();\n\nexports.SessionStorage = SessionStorage;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio-sync/lib/services/storage.js"],"names":["Object","defineProperty","exports","value","SessionStorage","config","storage","storageId","sessionStorage","e","type","key","id","isReady","_store","storageKey","_read","sid","uniqueName","removeItem","patch","_apply","setItem","JSON","stringify","storedData","getItem","parse","assign","sessionStorageEnabled"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SessionStorage {\n    constructor(config, storage) {\n        this.config = config;\n        this.storageId = null;\n        try {\n            this.storage = storage || sessionStorage;\n        }\n        catch (e) {\n        }\n    }\n    storageKey(type, key) {\n        return `${this.storageId}::${type}::${key}`;\n    }\n    get isReady() {\n        return this.config.sessionStorageEnabled && !!this.storageId;\n    }\n    updateStorageId(storageId) {\n        this.storageId = storageId;\n    }\n    store(type, id, value) {\n        if (!this.isReady) {\n            return null;\n        }\n        return this._store(this.storageKey(type, id), value);\n    }\n    read(type, id) {\n        if (!this.isReady) {\n            return null;\n        }\n        return this._read(this.storageKey(type, id));\n    }\n    remove(type, sid, uniqueName) {\n        if (!this.isReady) {\n            return null;\n        }\n        try {\n            this.storage.removeItem(this.storageKey(type, sid));\n            if (uniqueName) {\n                this.storage.removeItem(this.storageKey(type, uniqueName));\n            }\n        }\n        catch (e) {\n        }\n    }\n    update(type, sid, uniqueName, patch) {\n        if (!this.isReady) {\n            return null;\n        }\n        // Currently cache may have root stored twice - by sid and by uniqueName\n        // Maybe need to create some index if needed\n        this._apply(this.storageKey(type, sid), patch);\n        if (uniqueName) {\n            this._apply(this.storageKey(type, uniqueName), patch);\n        }\n    }\n    _store(key, value) {\n        try {\n            this.storage.setItem(key, JSON.stringify(value));\n        }\n        catch (e) {\n        }\n    }\n    _read(key) {\n        try {\n            let storedData = this.storage.getItem(key);\n            if (storedData) {\n                return JSON.parse(storedData);\n            }\n        }\n        catch (e) {\n        }\n        return null;\n    }\n    _apply(key, patch) {\n        let value = this._read(key);\n        if (!value) {\n            return false;\n        }\n        this._store(key, Object.assign(value, patch));\n    }\n}\nexports.SessionStorage = SessionStorage;\n"]},"metadata":{},"sourceType":"script"}