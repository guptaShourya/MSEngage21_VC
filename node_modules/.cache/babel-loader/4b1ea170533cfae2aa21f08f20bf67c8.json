{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/DisplayPreviewUtil.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport DisplayPreview from './DisplayPreview';\n\nvar DisplayPreviewUtil = function DisplayPreviewUtil(_ref) {\n  _s();\n\n  var handleSubmit = _ref.handleSubmit,\n      connecting = _ref.connecting,\n      setAudio = _ref.setAudio,\n      setVideo = _ref.setVideo,\n      audio = _ref.audio,\n      video = _ref.video;\n  var dep = 'x';\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      videoTrack = _useState2[0],\n      setVideoTrack = _useState2[1];\n\n  document.getElementsByTagName(\"body\")[0].style.background = \"#ebecf2\";\n  useEffect(function () {\n    var _require = require('twilio-video'),\n        createLocalVideoTrack = _require.createLocalVideoTrack;\n\n    var localMediaContainer = document.getElementById('local-media');\n    createLocalVideoTrack().then(function (track) {\n      localMediaContainer.appendChild(track.attach());\n      setVideoTrack(track);\n    });\n  }, [dep]);\n\n  var handleClick = function handleClick() {\n    videoTrack.stop();\n  };\n\n  var toggleVideo = function toggleVideo() {\n    setVideo(!video);\n\n    if (!video) {\n      var _require2 = require('twilio-video'),\n          createLocalVideoTrack = _require2.createLocalVideoTrack;\n\n      var localMediaContainer = document.getElementById('local-media');\n      localMediaContainer.removeChild(localMediaContainer.childNodes[0]);\n      createLocalVideoTrack().then(function (track) {\n        localMediaContainer.appendChild(track.attach());\n        setVideoTrack(track);\n      });\n    } else {\n      videoTrack.stop();\n    }\n  };\n\n  var toggleAudio = function toggleAudio() {\n    setAudio(!audio);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DisplayPreview, {\n    toggleAudio: toggleAudio,\n    toggleVideo: toggleVideo,\n    handleClick: handleClick,\n    handleSubmit: handleSubmit,\n    connecting: connecting,\n    audio: audio,\n    video: video\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(DisplayPreviewUtil, \"kYkR113GvpcorxSFp1KIj1Np4pc=\");\n\n_c = DisplayPreviewUtil;\nexport default DisplayPreviewUtil;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayPreviewUtil\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/DisplayPreviewUtil.js"],"names":["React","useEffect","useState","DisplayPreview","DisplayPreviewUtil","handleSubmit","connecting","setAudio","setVideo","audio","video","dep","videoTrack","setVideoTrack","document","getElementsByTagName","style","background","require","createLocalVideoTrack","localMediaContainer","getElementById","then","track","appendChild","attach","handleClick","stop","toggleVideo","removeChild","childNodes","toggleAudio"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAoE;AAAA;;AAAA,MAAjEC,YAAiE,QAAjEA,YAAiE;AAAA,MAAnDC,UAAmD,QAAnDA,UAAmD;AAAA,MAAvCC,QAAuC,QAAvCA,QAAuC;AAAA,MAA7BC,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBC,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AAC3F,MAAMC,GAAG,GAAG,GAAZ;;AAD2F,kBAEvDT,QAAQ,CAAC,EAAD,CAF+C;AAAA;AAAA,MAEpFU,UAFoF;AAAA,MAExEC,aAFwE;;AAG3FC,EAAAA,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,KAAzC,CAA+CC,UAA/C,GAA4D,SAA5D;AACAhB,EAAAA,SAAS,CAAC,YAAM;AAAA,mBACsBiB,OAAO,CAAC,cAAD,CAD7B;AAAA,QACJC,qBADI,YACJA,qBADI;;AAEZ,QAAMC,mBAAmB,GAAGN,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAA5B;AACAF,IAAAA,qBAAqB,GAAGG,IAAxB,CAA6B,UAAAC,KAAK,EAAI;AAClCH,MAAAA,mBAAmB,CAACI,WAApB,CAAgCD,KAAK,CAACE,MAAN,EAAhC;AACAZ,MAAAA,aAAa,CAACU,KAAD,CAAb;AACH,KAHD;AAIH,GAPQ,EAON,CAACZ,GAAD,CAPM,CAAT;;AASA,MAAMe,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBd,IAAAA,UAAU,CAACe,IAAX;AACH,GAFD;;AAGA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBpB,IAAAA,QAAQ,CAAC,CAACE,KAAF,CAAR;;AACA,QAAI,CAACA,KAAL,EAAY;AAAA,sBAC0BQ,OAAO,CAAC,cAAD,CADjC;AAAA,UACAC,qBADA,aACAA,qBADA;;AAER,UAAMC,mBAAmB,GAAGN,QAAQ,CAACO,cAAT,CAAwB,aAAxB,CAA5B;AACAD,MAAAA,mBAAmB,CAACS,WAApB,CAAgCT,mBAAmB,CAACU,UAApB,CAA+B,CAA/B,CAAhC;AACAX,MAAAA,qBAAqB,GAAGG,IAAxB,CAA6B,UAAAC,KAAK,EAAI;AAClCH,QAAAA,mBAAmB,CAACI,WAApB,CAAgCD,KAAK,CAACE,MAAN,EAAhC;AACAZ,QAAAA,aAAa,CAACU,KAAD,CAAb;AACH,OAHD;AAIH,KARD,MAQO;AACHX,MAAAA,UAAU,CAACe,IAAX;AACH;AACJ,GAbD;;AAcA,MAAMI,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtBxB,IAAAA,QAAQ,CAAC,CAACE,KAAF,CAAR;AACH,GAFD;;AAGA,sBACI,QAAC,cAAD;AAAgB,IAAA,WAAW,EAAIsB,WAA/B;AAA4C,IAAA,WAAW,EAAIH,WAA3D;AAAwE,IAAA,WAAW,EAAIF,WAAvF;AACA,IAAA,YAAY,EAAIrB,YADhB;AAC8B,IAAA,UAAU,EAAIC,UAD5C;AACwD,IAAA,KAAK,EAAIG,KADjE;AACwE,IAAA,KAAK,EAAIC;AADjF;AAAA;AAAA;AAAA;AAAA,WADJ;AAIH,CArCD;;GAAMN,kB;;KAAAA,kB;AAsCM,eAAeA,kBAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport DisplayPreview from './DisplayPreview';\n\nconst DisplayPreviewUtil = ({ handleSubmit, connecting, setAudio, setVideo, audio, video }) => {\n    const dep = 'x';\n    const [videoTrack, setVideoTrack] = useState(\"\");\n    document.getElementsByTagName(\"body\")[0].style.background = \"#ebecf2\";\n    useEffect(() => {\n        const { createLocalVideoTrack } = require('twilio-video');\n        const localMediaContainer = document.getElementById('local-media');\n        createLocalVideoTrack().then(track => {\n            localMediaContainer.appendChild(track.attach());\n            setVideoTrack(track);\n        });\n    }, [dep]);\n\n    const handleClick = () => {\n        videoTrack.stop();\n    }\n    const toggleVideo = () => {\n        setVideo(!video);\n        if (!video) {\n            const { createLocalVideoTrack } = require('twilio-video');\n            const localMediaContainer = document.getElementById('local-media');\n            localMediaContainer.removeChild(localMediaContainer.childNodes[0]);\n            createLocalVideoTrack().then(track => {\n                localMediaContainer.appendChild(track.attach());\n                setVideoTrack(track);\n            });\n        } else {\n            videoTrack.stop();\n        }\n    }\n    const toggleAudio = () => {\n        setAudio(!audio);\n    }\n    return (\n        <DisplayPreview toggleAudio = {toggleAudio} toggleVideo = {toggleVideo} handleClick = {handleClick} \n        handleSubmit = {handleSubmit} connecting = {connecting} audio = {audio} video = {video}/>\n        );\n}\n            export default DisplayPreviewUtil;"]},"metadata":{},"sourceType":"module"}