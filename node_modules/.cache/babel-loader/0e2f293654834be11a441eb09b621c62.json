{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Configuration = void 0;\nvar MINIMUM_RETRY_DELAY = 1000;\nvar MAXIMUM_RETRY_DELAY = 4000;\nvar MAXIMUM_ATTEMPTS_COUNT = 3;\nvar RETRY_WHEN_THROTTLED = true;\n\nvar Configuration = /*#__PURE__*/function () {\n  function Configuration(token, baseUrl, options) {\n    _classCallCheck(this, Configuration);\n\n    var constructorOptions = options.MCS || options || {};\n    this.region = constructorOptions.region || options.region;\n    this.baseUrl = baseUrl;\n    this.token = token;\n    this.retryWhenThrottledOverride = constructorOptions.retryWhenThrottledOverride;\n    this.backoffConfigOverride = constructorOptions.backoffConfigOverride;\n  }\n\n  _createClass(Configuration, [{\n    key: \"updateToken\",\n    value: function updateToken(token) {\n      this.token = token;\n    }\n  }], [{\n    key: \"backoffConfigDefault\",\n    get: function get() {\n      return {\n        min: MINIMUM_RETRY_DELAY,\n        max: MAXIMUM_RETRY_DELAY,\n        maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT\n      };\n    }\n  }, {\n    key: \"retryWhenThrottledDefault\",\n    get: function get() {\n      return RETRY_WHEN_THROTTLED;\n    }\n  }]);\n\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/twilio-chat/node_modules/twilio-mcs-client/lib/configuration.js"],"names":["Object","defineProperty","exports","value","Configuration","MINIMUM_RETRY_DELAY","MAXIMUM_RETRY_DELAY","MAXIMUM_ATTEMPTS_COUNT","RETRY_WHEN_THROTTLED","token","baseUrl","options","constructorOptions","MCS","region","retryWhenThrottledOverride","backoffConfigOverride","min","max","maxAttemptsCount"],"mappings":"AAAA;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,aAAR,GAAwB,KAAK,CAA7B;AACA,IAAMC,mBAAmB,GAAG,IAA5B;AACA,IAAMC,mBAAmB,GAAG,IAA5B;AACA,IAAMC,sBAAsB,GAAG,CAA/B;AACA,IAAMC,oBAAoB,GAAG,IAA7B;;IACMJ,a;AACF,yBAAYK,KAAZ,EAAmBC,OAAnB,EAA4BC,OAA5B,EAAqC;AAAA;;AACjC,QAAIC,kBAAkB,GAAGD,OAAO,CAACE,GAAR,IAAeF,OAAf,IAA0B,EAAnD;AACA,SAAKG,MAAL,GAAcF,kBAAkB,CAACE,MAAnB,IAA6BH,OAAO,CAACG,MAAnD;AACA,SAAKJ,OAAL,GAAeA,OAAf;AACA,SAAKD,KAAL,GAAaA,KAAb;AACA,SAAKM,0BAAL,GAAkCH,kBAAkB,CAACG,0BAArD;AACA,SAAKC,qBAAL,GAA6BJ,kBAAkB,CAACI,qBAAhD;AACH;;;;gCASWP,K,EAAO;AACf,WAAKA,KAAL,GAAaA,KAAb;AACH;;;wBAViC;AAC9B,aAAO;AACHQ,QAAAA,GAAG,EAAEZ,mBADF;AAEHa,QAAAA,GAAG,EAAEZ,mBAFF;AAGHa,QAAAA,gBAAgB,EAAEZ;AAHf,OAAP;AAKH;;;wBACsC;AAAE,aAAOC,oBAAP;AAA8B;;;;;;AAK3EN,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Configuration = void 0;\nconst MINIMUM_RETRY_DELAY = 1000;\nconst MAXIMUM_RETRY_DELAY = 4000;\nconst MAXIMUM_ATTEMPTS_COUNT = 3;\nconst RETRY_WHEN_THROTTLED = true;\nclass Configuration {\n    constructor(token, baseUrl, options) {\n        let constructorOptions = options.MCS || options || {};\n        this.region = constructorOptions.region || options.region;\n        this.baseUrl = baseUrl;\n        this.token = token;\n        this.retryWhenThrottledOverride = constructorOptions.retryWhenThrottledOverride;\n        this.backoffConfigOverride = constructorOptions.backoffConfigOverride;\n    }\n    static get backoffConfigDefault() {\n        return {\n            min: MINIMUM_RETRY_DELAY,\n            max: MAXIMUM_RETRY_DELAY,\n            maxAttemptsCount: MAXIMUM_ATTEMPTS_COUNT\n        };\n    }\n    static get retryWhenThrottledDefault() { return RETRY_WHEN_THROTTLED; }\n    updateToken(token) {\n        this.token = token;\n    }\n}\nexports.Configuration = Configuration;\n"]},"metadata":{},"sourceType":"script"}