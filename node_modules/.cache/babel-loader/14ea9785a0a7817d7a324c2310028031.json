{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Chat/ChatUtils.js\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoChat from \"../VideoChat\";\nimport getToken from \"./getChatToken\";\nimport ChatComponent from \"./ChatScreenComponent\";\n\nvar Chat = require(\"twilio-chat\"); // Chat home window component\n\n\nvar ChatScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this$state, email, room, token, client;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\"; // change background\n\n              _this$state = _this.state, email = _this$state.email, room = _this$state.room;\n              token = \"\";\n\n              _this.setState({\n                loading: true\n              });\n\n              _context3.prev = 4;\n              _context3.next = 7;\n              return getToken(email);\n\n            case 7:\n              token = _context3.sent;\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](4);\n              throw new Error(\"unable to get token, please reload thissss page\");\n\n            case 13:\n              _context3.next = 15;\n              return Chat.Client.create(token);\n\n            case 15:\n              client = _context3.sent;\n\n              //create client\n              _this.setState({\n                client: client\n              }); // update token if near expiry / expired\n\n\n              client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context2.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n\n              _this.joinChat(room);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 10]]);\n    }));\n\n    _this.joinChat = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(room) {\n        var client, channel, messages, channels, _client, _channel, _channels;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                //if channel exists\n                client = _this.state.client;\n                _context4.next = 4;\n                return client.getChannelByUniqueName(room);\n\n              case 4:\n                channel = _context4.sent;\n                _context4.next = 7;\n                return _this.joinChannel(channel);\n\n              case 7:\n                //join channel\n                _this.setState({\n                  channel: channel,\n                  loading: false\n                });\n\n                _context4.next = 10;\n                return channel.getMessages();\n\n              case 10:\n                messages = _context4.sent;\n\n                // retrieve messages\n                _this.setState({\n                  messages: messages.items || []\n                });\n\n                _context4.next = 14;\n                return client.getSubscribedChannels();\n\n              case 14:\n                channels = _context4.sent;\n\n                //retrieve subscribed channel\n                _this.setState({\n                  channelList: channels.items || []\n                });\n\n                _context4.next = 37;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                _context4.prev = 20;\n                _client = _this.state.client; // create a new channel\n\n                _context4.next = 24;\n                return _client.createChannel({\n                  uniqueName: room,\n                  friendlyName: room\n                });\n\n              case 24:\n                _channel = _context4.sent;\n                _context4.next = 27;\n                return _this.joinChannel(_channel);\n\n              case 27:\n                //join the channel\n                _this.setState({\n                  channel: _channel,\n                  loading: false\n                });\n\n                _context4.next = 30;\n                return _client.getSubscribedChannels();\n\n              case 30:\n                _channels = _context4.sent;\n\n                //retrieve subscribed channel\n                _this.setState({\n                  channelList: _channels.items || []\n                });\n\n                _context4.next = 37;\n                break;\n\n              case 34:\n                _context4.prev = 34;\n                _context4.t1 = _context4[\"catch\"](20);\n                throw new Error(\"unable to create channel, please reload this page\");\n\n              case 37:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18], [20, 34]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.joinChannel = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(channel) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(channel.channelState.status !== \"joined\")) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return channel.join();\n\n              case 3:\n                channel.on(\"messageAdded\", _this.handleMessageAdded);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleMessageAdded = function (message) {\n      var messages = _this.state.messages;\n\n      _this.setState({\n        messages: !!messages ? [].concat(_toConsumableArray(messages), [message]) : [message]\n      });\n    };\n\n    _this.sendMessageExternal = function (info) {\n      var channel = _this.state.channel;\n\n      if (info && String(info).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(info);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.setIsVideo = function (val) {\n      _this.setState({\n        isVideo: val\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isVideo: true\n      });\n    };\n\n    _this.switchChannel = function (roomName) {\n      _this.setState({\n        room: roomName\n      });\n\n      _this.joine(roomName);\n    };\n\n    _this.setText = function (val) {\n      _this.setState({\n        text: val\n      });\n    };\n\n    _this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      // to display loading icon\n      channel: null,\n      // current channel\n      isVideo: false,\n      //conditionally rendering\n      channelList: [],\n      //list of meetings joined\n      client: null,\n      email: _this.props.email,\n      // user email\n      room: _this.props.room // room name entered\n\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          loading = _this$state2.loading,\n          text = _this$state2.text,\n          messages = _this$state2.messages,\n          channel = _this$state2.channel,\n          isVideo = _this$state2.isVideo,\n          channelList = _this$state2.channelList,\n          email = _this$state2.email,\n          room = _this$state2.room;\n      var setSubmit = this.props.setSubmit;\n      var channels = []; // list of meetings joined\n\n      var _loop = function _loop(i) {\n        channels.push( /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: \"block\"\n          },\n          onClick: function onClick() {\n            _this2.switchChannel(channelList[i].friendlyName);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }, _this2), channelList[i].friendlyName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 9\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, _this2));\n      };\n\n      for (var i = 0; i < channelList.length; i++) {\n        _loop(i);\n      }\n\n      var component;\n\n      if (isVideo) {\n        component = /*#__PURE__*/_jsxDEV(VideoChat, {\n          username: email,\n          roomName: room,\n          messages: messages,\n          setIsVideo: this.setIsVideo,\n          sendMessage: this.sendMessageExternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 19\n        }, this);\n      } else {\n        component = /*#__PURE__*/_jsxDEV(ChatComponent, {\n          loading: loading,\n          sendMessage: this.sendMessageExternal,\n          channel: channel,\n          text: text,\n          setText: this.setText,\n          email: email,\n          messages: messages,\n          channels: channels,\n          handleClick: this.handleClick,\n          setSubmit: setSubmit,\n          room: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this);\n      }\n\n      return component;\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nexport default ChatScreen;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Chat/ChatUtils.js"],"names":["React","Button","ListItem","ChevronRightIcon","VideoChat","getToken","ChatComponent","Chat","require","ChatScreen","props","componentDidMount","document","getElementsByTagName","style","background","state","email","room","token","setState","loading","Error","Client","create","client","on","updateToken","joinChat","getChannelByUniqueName","channel","joinChannel","getMessages","messages","items","getSubscribedChannels","channels","channelList","createChannel","uniqueName","friendlyName","channelState","status","join","handleMessageAdded","message","sendMessageExternal","info","String","trim","sendMessage","setIsVideo","val","isVideo","handleClick","switchChannel","roomName","joine","setText","text","setSubmit","i","push","display","length","component","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {Button} from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoChat from \"../VideoChat\";\nimport getToken from \"./getChatToken\";\nimport ChatComponent from \"./ChatScreenComponent\";\nconst Chat = require(\"twilio-chat\");\n\n// Chat home window component\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      messages: [],\n      loading: false, // to display loading icon\n      channel: null, // current channel\n      isVideo: false, //conditionally rendering\n      channelList: [], //list of meetings joined\n      client: null, \n      email: this.props.email, // user email\n      room: this.props.room, // room name entered\n    };\n\n  };\n  componentDidMount = async () => {\n    document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\"; // change background\n    const { email, room } = this.state;\n    let token = \"\"; \n\n    this.setState({ loading: true });\n\n    try {\n      token = await getToken(email); //get authToken\n    } catch {\n      throw new Error(\"unable to get token, please reload thissss page\");\n    }\n    const client = await Chat.Client.create(token); //create client\n    this.setState({client : client});\n\n    // update token if near expiry / expired\n    client.on(\"tokenAboutToExpire\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"tokenExpired\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n    this.joinChat(room);\n  }\n  joinChat = async (room)=>{\n    try { //if channel exists\n      const {client} = this.state;\n      const channel = await client.getChannelByUniqueName(room); // retrieve channel data\n      await this.joinChannel(channel); //join channel\n      this.setState({ channel, loading: false });\n      const messages = await channel.getMessages(); // retrieve messages\n      this.setState({ messages: messages.items || [] });\n      const channels = await client.getSubscribedChannels(); //retrieve subscribed channel\n      this.setState({channelList: channels.items || []});\n    } catch { //if channel doesn't exists\n      try {\n        const {client} = this.state;\n        // create a new channel\n        const channel = await client.createChannel({\n          uniqueName: room,\n          friendlyName: room,\n        });\n        await this.joinChannel(channel); //join the channel\n        this.setState({ channel, loading: false });\n        const channels = await client.getSubscribedChannels(); //retrieve subscribed channel\n        this.setState({channelList: channels.items || []});\n      } catch {\n        throw new Error(\"unable to create channel, please reload this page\");\n      }\n    }\n  };\n  // method to join channel\n  joinChannel = async (channel) => {\n    if (channel.channelState.status !== \"joined\") {\n      await channel.join();\n    }\n    channel.on(\"messageAdded\", this.handleMessageAdded);\n  };\n// update messages on addition\n  handleMessageAdded = (message) => {\n    const { messages } = this.state;\n    this.setState(\n      {\n        messages: !!messages ? [...messages, message] : [message],\n      },\n    );\n  };\n// send message function\n  sendMessageExternal = (info) => {\n    const { channel } = this.state;\n    if (info && String(info).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(info);\n      this.setState({ loading: false });\n    }\n  }\n  // toggle isVideo for conditional rendering\n  setIsVideo = (val) => {\n    this.setState({ isVideo: val });\n  }\n\n  handleClick = () => {\n    this.setState({ isVideo: true });\n  }\n// handles switching channels on click\n  switchChannel = (roomName)=>{\n    this.setState({room: roomName});\n    this.joine(roomName);\n  }\n  // set state (text)\n  setText = (val) => {\n    this.setState({text: val});\n  }\n  render() {\n    const { loading, text, messages, channel, isVideo, channelList, email, room} = this.state;\n    const { setSubmit } = this.props;\n    const channels = []; // list of meetings joined\n    for(let i = 0; i < channelList.length; i++){\n      channels.push(<Button style = {{display: \"block\"}} onClick = {()=>{this.switchChannel(channelList[i].friendlyName)}}>\n        <ListItem>\n          <ChevronRightIcon/>\n          {channelList[i].friendlyName}\n        </ListItem>\n      </Button>);\n    }\n    let component;\n    if (isVideo) {\n      component = <VideoChat username={email} roomName={room} messages={messages}\n        setIsVideo={this.setIsVideo} sendMessage={this.sendMessageExternal} />\n    } else {\n      component = <ChatComponent loading = {loading} sendMessage = {this.sendMessageExternal} channel = {channel}\n      text = {text} setText = {this.setText} email = {email} messages = {messages} channels = {channels} \n      handleClick = {this.handleClick} setSubmit = {setSubmit} room = {room}/>\n    }\n    return (\n      component\n    );\n  }\n}\n\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}