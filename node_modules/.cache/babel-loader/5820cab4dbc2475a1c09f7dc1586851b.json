{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/test.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Lobby from \"./Lobby\";\nimport ChatScreen from \"./ChatUtils\"; // child to App.js\n// VideoChat.js handles data about the chat\n\nvar Test = function Test() {\n  _s();\n\n  // state variables\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1]; //username\n\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      roomName = _useState4[0],\n      setRoomName = _useState4[1]; //roomname\n\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      submit = _useState6[0],\n      setSubmit = _useState6[1]; //room details\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      connecting = _useState8[0],\n      setConnecting = _useState8[1]; //current status\n  //update username on change\n\n\n  var handleUsernameChange = useCallback(function (event) {\n    setUsername(event.target.value);\n  }, []); // update room name on change\n\n  var handleRoomNameChange = useCallback(function (event) {\n    setRoomName(event.target.value);\n  }, []); // Method to send Username & Roomname to the server\n  // And recieve an access token\n\n  var handleSubmit = useCallback(function () {\n    setSubmit(true);\n  });\n  var render; // if room already exists then render Room.js\n\n  if (submit) {\n    render = /*#__PURE__*/_jsxDEV(ChatScreen, {\n      email: username,\n      room: roomName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, _this);\n  } else {\n    // If room doesnt exists then render Lobby.js\n    render = /*#__PURE__*/_jsxDEV(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      connecting: connecting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return render;\n};\n\n_s(Test, \"PSeqZlwV4Rh4uzjdYfWcLXXl8Lo=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/test.js"],"names":["React","useState","useCallback","useEffect","Lobby","ChatScreen","Test","username","setUsername","roomName","setRoomName","submit","setSubmit","connecting","setConnecting","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB,C,CAEA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AAEjB;AAFiB,kBAGeL,QAAQ,CAAC,EAAD,CAHvB;AAAA;AAAA,MAGVM,QAHU;AAAA,MAGAC,WAHA,kBAG6B;;;AAH7B,mBAIeP,QAAQ,CAAC,EAAD,CAJvB;AAAA;AAAA,MAIVQ,QAJU;AAAA,MAIAC,WAJA,kBAI6B;;;AAJ7B,mBAKWT,QAAQ,CAAC,KAAD,CALnB;AAAA;AAAA,MAKVU,MALU;AAAA,MAKFC,SALE,kBAK4B;;;AAL5B,mBAMmBX,QAAQ,CAAC,KAAD,CAN3B;AAAA;AAAA,MAMVY,UANU;AAAA,MAMEC,aANF,kBAMoC;AAErD;;;AACA,MAAMC,oBAAoB,GAAGb,WAAW,CAAC,UAACc,KAAD,EAAW;AAClDR,IAAAA,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC,CATiB,CAajB;;AACA,MAAMC,oBAAoB,GAAGjB,WAAW,CAAC,UAACc,KAAD,EAAW;AAClDN,IAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFuC,EAErC,EAFqC,CAAxC,CAdiB,CAkBjB;AACA;;AACA,MAAME,YAAY,GAAGlB,WAAW,CAAC,YAAI;AACnCU,IAAAA,SAAS,CAAC,IAAD,CAAT;AACC,GAF6B,CAAhC;AAMA,MAAIS,MAAJ,CA1BiB,CA4BjB;;AACA,MAAIV,MAAJ,EAAY;AACVU,IAAAA,MAAM,gBACJ,QAAC,UAAD;AAAY,MAAA,KAAK,EAAId,QAArB;AAA+B,MAAA,IAAI,EAAIE;AAAvC;AAAA;AAAA;AAAA;AAAA,aADF;AAGD,GAJD,MAIO;AACL;AACAY,IAAAA,MAAM,gBACJ,QAAC,KAAD;AACE,MAAA,QAAQ,EAAEd,QADZ;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,oBAAoB,EAAEM,oBAHxB;AAIE,MAAA,oBAAoB,EAAEI,oBAJxB;AAKE,MAAA,YAAY,EAAEC,YALhB;AAME,MAAA,UAAU,EAAEP;AANd;AAAA;AAAA;AAAA;AAAA,aADF;AAUD;;AACD,SAAOQ,MAAP;AACD,CA/CD;;GAAMf,I;;KAAAA,I;AAiDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Lobby from \"./Lobby\";\nimport ChatScreen from \"./ChatUtils\";\n\n// child to App.js\n// VideoChat.js handles data about the chat\n\nconst Test = () => {\n\n  // state variables\n  const [username, setUsername] = useState(\"\"); //username\n  const [roomName, setRoomName] = useState(\"\"); //roomname\n  const [submit, setSubmit] = useState(false); //room details\n  const [connecting, setConnecting] = useState(false); //current status\n  \n  //update username on change\n  const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n  }, []);\n\n  // update room name on change\n  const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n  }, []);\n\n  // Method to send Username & Roomname to the server\n  // And recieve an access token\n  const handleSubmit = useCallback(()=>{\n    setSubmit(true);\n    }\n  );\n\n\n  let render;\n\n  // if room already exists then render Room.js\n  if (submit) {\n    render = (\n      <ChatScreen email = {username} room = {roomName}/>\n    );\n  } else { \n    // If room doesnt exists then render Lobby.js\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n        connecting={connecting}\n      />\n    );\n  }\n  return render;\n};\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}