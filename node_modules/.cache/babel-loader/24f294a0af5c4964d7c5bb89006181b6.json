{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js\";\nimport React from \"react\";\nimport { AppBar, Backdrop, CircularProgress, Container, Grid, IconButton, List, TextField, Toolbar, Typography, Button, Tooltip } from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat from \"./VideoChat\";\nimport getToken from \"./getChatToken\";\nimport ChatComponent from \"./ChatScreenComponent\";\n\nvar Chat = require(\"twilio-chat\");\n\nvar ChatScreen = /*#__PURE__*/function (_React$Component) {\n  _inherits(ChatScreen, _React$Component);\n\n  var _super = _createSuper(ChatScreen);\n\n  function ChatScreen(props) {\n    var _this;\n\n    _classCallCheck(this, ChatScreen);\n\n    _this = _super.call(this, props);\n    _this.componentDidMount = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this$state, email, room, token, client;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n              _this$state = _this.state, email = _this$state.email, room = _this$state.room;\n              token = \"\";\n\n              _this.setState({\n                loading: true\n              });\n\n              _context3.prev = 4;\n              _context3.next = 7;\n              return getToken(email);\n\n            case 7:\n              token = _context3.sent;\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](4);\n              throw new Error(\"unable to get token, please reload thissss page\");\n\n            case 13:\n              _context3.next = 15;\n              return Chat.Client.create(token);\n\n            case 15:\n              client = _context3.sent;\n\n              _this.setState({\n                client: client\n              });\n\n              client.on(\"tokenAboutToExpire\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              })));\n              client.on(\"tokenExpired\", /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n                var token;\n                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                  while (1) {\n                    switch (_context2.prev = _context2.next) {\n                      case 0:\n                        _context2.next = 2;\n                        return _this.getToken(email);\n\n                      case 2:\n                        token = _context2.sent;\n                        client.updateToken(token);\n\n                      case 4:\n                      case \"end\":\n                        return _context2.stop();\n                    }\n                  }\n                }, _callee2);\n              })));\n\n              _this.joine(room);\n\n            case 20:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[4, 10]]);\n    }));\n\n    _this.joine = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(room) {\n        var client, channel, messages, channels, _client, _channel, _channels;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                client = _this.state.client;\n                _context4.next = 4;\n                return client.getChannelByUniqueName(room);\n\n              case 4:\n                channel = _context4.sent;\n                _context4.next = 7;\n                return _this.joinChannel(channel);\n\n              case 7:\n                _this.setState({\n                  channel: channel,\n                  loading: false\n                });\n\n                _context4.next = 10;\n                return channel.getMessages();\n\n              case 10:\n                messages = _context4.sent;\n\n                _this.setState({\n                  messages: messages.items || []\n                });\n\n                _context4.next = 14;\n                return client.getSubscribedChannels();\n\n              case 14:\n                channels = _context4.sent;\n\n                _this.setState({\n                  channelList: channels.items || []\n                });\n\n                _context4.next = 37;\n                break;\n\n              case 18:\n                _context4.prev = 18;\n                _context4.t0 = _context4[\"catch\"](0);\n                _context4.prev = 20;\n                _client = _this.state.client;\n                _context4.next = 24;\n                return _client.createChannel({\n                  uniqueName: room,\n                  friendlyName: room\n                });\n\n              case 24:\n                _channel = _context4.sent;\n                _context4.next = 27;\n                return _this.joinChannel(_channel);\n\n              case 27:\n                _this.setState({\n                  channel: _channel,\n                  loading: false\n                });\n\n                _context4.next = 30;\n                return _client.getSubscribedChannels();\n\n              case 30:\n                _channels = _context4.sent;\n\n                _this.setState({\n                  channelList: _channels.items || []\n                });\n\n                _context4.next = 37;\n                break;\n\n              case 34:\n                _context4.prev = 34;\n                _context4.t1 = _context4[\"catch\"](20);\n                throw new Error(\"unable to create channel, please reload this page\");\n\n              case 37:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, null, [[0, 18], [20, 34]]);\n      }));\n\n      return function (_x) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    _this.joinChannel = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(channel) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (!(channel.channelState.status !== \"joined\")) {\n                  _context5.next = 3;\n                  break;\n                }\n\n                _context5.next = 3;\n                return channel.join();\n\n              case 3:\n                channel.on(\"messageAdded\", _this.handleMessageAdded);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function (_x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    _this.handleMessageAdded = function (message) {\n      var messages = _this.state.messages;\n\n      _this.setState({\n        messages: !!messages ? [].concat(_toConsumableArray(messages), [message]) : [message]\n      });\n    };\n\n    _this.sendMessage = function () {\n      var _this$state2 = _this.state,\n          text = _this$state2.text,\n          channel = _this$state2.channel;\n\n      if (text && String(text).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(text);\n\n        _this.setState({\n          text: \"\",\n          loading: false\n        });\n      }\n    };\n\n    _this.sendMessageExternal = function (info) {\n      var channel = _this.state.channel;\n\n      if (info && String(info).trim()) {\n        _this.setState({\n          loading: true\n        });\n\n        channel && channel.sendMessage(info);\n\n        _this.setState({\n          loading: false\n        });\n      }\n    };\n\n    _this.setIsVideo = function (val) {\n      _this.setState({\n        isVideo: val\n      });\n    };\n\n    _this.handleClick = function () {\n      _this.setState({\n        isVideo: true\n      });\n    };\n\n    _this.switchChannel = function (roomName) {\n      _this.setState({\n        room: roomName\n      });\n\n      _this.joine(roomName);\n    };\n\n    _this.setText = function (val) {\n      _this.setState({\n        text: val\n      });\n    };\n\n    _this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n      channelList: [],\n      client: null,\n      email: _this.props.email,\n      room: _this.props.room\n    };\n    return _this;\n  }\n\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          loading = _this$state3.loading,\n          text = _this$state3.text,\n          messages = _this$state3.messages,\n          channel = _this$state3.channel,\n          isVideo = _this$state3.isVideo,\n          channelList = _this$state3.channelList,\n          email = _this$state3.email,\n          room = _this$state3.room;\n      var setSubmit = this.props.setSubmit;\n      var channels = [];\n\n      var _loop = function _loop(i) {\n        channels.push( /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            display: \"block\"\n          },\n          onClick: function onClick() {\n            _this2.switchChannel(channelList[i].friendlyName);\n          },\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 11\n            }, _this2), channelList[i].friendlyName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 9\n          }, _this2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, _this2));\n      };\n\n      for (var i = 0; i < channelList.length; i++) {\n        _loop(i);\n      }\n\n      var component;\n\n      if (isVideo) {\n        component = /*#__PURE__*/_jsxDEV(VideoChat, {\n          username: email,\n          roomName: room,\n          messages: messages,\n          setIsVideo: this.setIsVideo,\n          sendMessage: this.sendMessageExternal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }, this);\n      } else {\n        component = /*#__PURE__*/_jsxDEV(ChatComponent, {\n          loading: loading,\n          sendMessage: this.sendMessageExternal,\n          channel: channel,\n          text: text,\n          setText: this.setText,\n          email: email,\n          messages: messages,\n          channels: channels,\n          handleClick: this.handleClick,\n          setSubmit: setSubmit,\n          room: room\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }, this);\n      }\n\n      return component;\n    }\n  }]);\n\n  return ChatScreen;\n}(React.Component);\n\nexport default ChatScreen;","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/ChatUtils.js"],"names":["React","AppBar","Backdrop","CircularProgress","Container","Grid","IconButton","List","TextField","Toolbar","Typography","Button","Tooltip","ListItem","ChevronRightIcon","VideoCallOutlinedIcon","ExitToAppOutlinedIcon","GroupAddOutlinedIcon","Send","ChatItem","VideoChat","getToken","ChatComponent","Chat","require","ChatScreen","props","componentDidMount","document","getElementsByTagName","style","background","state","email","room","token","setState","loading","Error","Client","create","client","on","updateToken","joine","getChannelByUniqueName","channel","joinChannel","getMessages","messages","items","getSubscribedChannels","channels","channelList","createChannel","uniqueName","friendlyName","channelState","status","join","handleMessageAdded","message","sendMessage","text","String","trim","sendMessageExternal","info","setIsVideo","val","isVideo","handleClick","switchChannel","roomName","setText","setSubmit","i","push","display","length","component","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  AppBar,\n  Backdrop,\n  CircularProgress,\n  Container,\n  Grid,\n  IconButton,\n  List,\n  TextField,\n  Toolbar,\n  Typography,\n  Button,\n  Tooltip,\n} from \"@material-ui/core\";\nimport { ListItem } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport VideoCallOutlinedIcon from '@material-ui/icons/VideoCallOutlined';\nimport ExitToAppOutlinedIcon from '@material-ui/icons/ExitToAppOutlined';\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\nimport { Send } from \"@material-ui/icons\";\nimport ChatItem from \"./ChatItem\";\nimport VideoChat from \"./VideoChat\";\nimport getToken from \"./getChatToken\";\nimport ChatComponent from \"./ChatScreenComponent\";\nconst Chat = require(\"twilio-chat\");\n\nclass ChatScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      text: \"\",\n      messages: [],\n      loading: false,\n      channel: null,\n      isVideo: false,\n      channelList: [],\n      client: null,\n      email: this.props.email,\n      room: this.props.room,\n    };\n\n  };\n  componentDidMount = async () => {\n    document.getElementsByTagName('body')[0].style.background = \"rgb(255,255,255)\";\n    const { email, room } = this.state;\n    let token = \"\";\n\n    this.setState({ loading: true });\n\n    try {\n      token = await getToken(email);\n    } catch {\n      throw new Error(\"unable to get token, please reload thissss page\");\n    }\n    const client = await Chat.Client.create(token);\n    this.setState({client : client});\n\n    client.on(\"tokenAboutToExpire\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n\n    client.on(\"tokenExpired\", async () => {\n      const token = await this.getToken(email);\n      client.updateToken(token);\n    });\n    this.joine(room);\n  }\n  joine = async (room)=>{\n    try {\n      const {client} = this.state;\n      const channel = await client.getChannelByUniqueName(room);\n      await this.joinChannel(channel);\n      this.setState({ channel, loading: false });\n      const messages = await channel.getMessages();\n      this.setState({ messages: messages.items || [] });\n      const channels = await client.getSubscribedChannels();\n      this.setState({channelList: channels.items || []});\n    } catch {\n      try {\n        const {client} = this.state;\n        const channel = await client.createChannel({\n          uniqueName: room,\n          friendlyName: room,\n        });\n        await this.joinChannel(channel);\n        this.setState({ channel, loading: false });\n        const channels = await client.getSubscribedChannels();\n        this.setState({channelList: channels.items || []});\n      } catch {\n        throw new Error(\"unable to create channel, please reload this page\");\n      }\n    }\n  };\n\n  joinChannel = async (channel) => {\n    if (channel.channelState.status !== \"joined\") {\n      await channel.join();\n    }\n    channel.on(\"messageAdded\", this.handleMessageAdded);\n  };\n\n  handleMessageAdded = (message) => {\n    const { messages } = this.state;\n    this.setState(\n      {\n        messages: !!messages ? [...messages, message] : [message],\n      },\n    );\n  };\n\n  sendMessage = () => {\n    const { text, channel } = this.state;\n    if (text && String(text).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(text);\n      this.setState({ text: \"\", loading: false });\n    }\n  };\n\n  sendMessageExternal = (info) => {\n    const { channel } = this.state;\n    if (info && String(info).trim()) {\n      this.setState({ loading: true });\n      channel && channel.sendMessage(info);\n      this.setState({ loading: false });\n    }\n  }\n\n  setIsVideo = (val) => {\n    this.setState({ isVideo: val });\n  }\n\n  handleClick = () => {\n    this.setState({ isVideo: true });\n  }\n\n  switchChannel = (roomName)=>{\n    this.setState({room: roomName});\n    this.joine(roomName);\n  }\n  setText = (val) => {\n    this.setState({text: val});\n  }\n  render() {\n    const { loading, text, messages, channel, isVideo, channelList, email, room} = this.state;\n    const { setSubmit } = this.props;\n    const channels = [];\n    for(let i = 0; i < channelList.length; i++){\n      channels.push(<Button style = {{display: \"block\"}} onClick = {()=>{this.switchChannel(channelList[i].friendlyName)}}>\n        <ListItem>\n          <ChevronRightIcon/>\n          {channelList[i].friendlyName}\n        </ListItem>\n      </Button>);\n    }\n    let component;\n    if (isVideo) {\n      component = <VideoChat username={email} roomName={room} messages={messages}\n        setIsVideo={this.setIsVideo} sendMessage={this.sendMessageExternal} />\n    } else {\n      component = <ChatComponent loading = {loading} sendMessage = {this.sendMessageExternal} channel = {channel}\n      text = {text} setText = {this.setText} email = {email} messages = {messages} channels = {channels} \n      handleClick = {this.handleClick} setSubmit = {setSubmit} room = {room}/>\n    }\n\n    return (\n      component\n    );\n  }\n}\n\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}