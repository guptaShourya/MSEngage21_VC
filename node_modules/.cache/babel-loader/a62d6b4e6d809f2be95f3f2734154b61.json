{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\nconst addImplCPU = shared.addImpl,\n      bincountImplCPU = shared.bincountImpl,\n      bincountReduceImplCPU = shared.bincountReduceImpl,\n      ceilImplCPU = shared.ceilImpl,\n      concatImplCPU = shared.concatImpl,\n      equalImplCPU = shared.equalImpl,\n      expImplCPU = shared.expImpl,\n      expm1ImplCPU = shared.expm1Impl,\n      floorImplCPU = shared.floorImpl,\n      gatherNdImplCPU = shared.gatherNdImpl,\n      gatherV2ImplCPU = shared.gatherV2Impl,\n      greaterImplCPU = shared.greaterImpl,\n      greaterEqualImplCPU = shared.greaterEqualImpl,\n      lessImplCPU = shared.lessImpl,\n      lessEqualImplCPU = shared.lessEqualImpl,\n      linSpaceImplCPU = shared.linSpaceImpl,\n      logImplCPU = shared.logImpl,\n      maxImplCPU = shared.maxImpl,\n      maximumImplCPU = shared.maximumImpl,\n      minimumImplCPU = shared.minimumImpl,\n      multiplyImplCPU = shared.multiplyImpl,\n      negImplCPU = shared.negImpl,\n      notEqualImplCPU = shared.notEqualImpl,\n      prodImplCPU = shared.prodImpl,\n      rangeImplCPU = shared.rangeImpl,\n      rsqrtImplCPU = shared.rsqrtImpl,\n      simpleAbsImplCPU = shared.simpleAbsImpl,\n      sliceImplCPU = shared.sliceImpl,\n      sparseFillEmptyRowsImplCPU = shared.sparseFillEmptyRowsImpl,\n      sparseReshapeImplCPU = shared.sparseReshapeImpl,\n      sparseSegmentReductionImplCPU = shared.sparseSegmentReductionImpl,\n      stridedSliceImplCPU = shared.stridedSliceImpl,\n      stringNGramsImplCPU = shared.stringNGramsImpl,\n      stringSplitImplCPU = shared.stringSplitImpl,\n      stringToHashBucketFastImplCPU = shared.stringToHashBucketFastImpl,\n      subImplCPU = shared.subImpl,\n      tileImplCPU = shared.tileImpl,\n      topKImplCPU = shared.topKImpl,\n      transposeImplCPU = shared.transposeImpl,\n      uniqueImplCPU = shared.uniqueImpl;\nexport { addImplCPU, bincountImplCPU, bincountReduceImplCPU, ceilImplCPU, concatImplCPU, equalImplCPU, expImplCPU, expm1ImplCPU, floorImplCPU, gatherNdImplCPU, gatherV2ImplCPU, greaterEqualImplCPU, greaterImplCPU, lessEqualImplCPU, lessImplCPU, linSpaceImplCPU, logImplCPU, maxImplCPU, maximumImplCPU, minimumImplCPU, multiplyImplCPU, negImplCPU, notEqualImplCPU, prodImplCPU, simpleAbsImplCPU, sliceImplCPU, sparseFillEmptyRowsImplCPU, sparseReshapeImplCPU, sparseSegmentReductionImplCPU, stridedSliceImplCPU, stringNGramsImplCPU, stringSplitImplCPU, stringToHashBucketFastImplCPU, subImplCPU, rangeImplCPU, rsqrtImplCPU, tileImplCPU, topKImplCPU, transposeImplCPU, uniqueImplCPU };","map":{"version":3,"sources":["../../src/kernel_utils/shared.ts"],"names":[],"mappings":"AACA;;;;;;;;;;;;;;;AAeG;AAEH;AACA;AACA;AACA,OAAO,KAAK,MAAZ,MAAwB,0CAAxB;MASW,U,GAwCP,M,CAxCF,O;MACc,e,GAuCZ,M,CAvCF,Y;MACoB,qB,GAsClB,M,CAtCF,kB;MACU,W,GAqCR,M,CArCF,Q;MACY,a,GAoCV,M,CApCF,U;MACW,Y,GAmCT,M,CAnCF,S;MACS,U,GAkCP,M,CAlCF,O;MACW,Y,GAiCT,M,CAjCF,S;MACW,Y,GAgCT,M,CAhCF,S;MACc,e,GA+BZ,M,CA/BF,Y;MACc,e,GA8BZ,M,CA9BF,Y;MACa,c,GA6BX,M,CA7BF,W;MACkB,mB,GA4BhB,M,CA5BF,gB;MACU,W,GA2BR,M,CA3BF,Q;MACe,gB,GA0Bb,M,CA1BF,a;MACc,e,GAyBZ,M,CAzBF,Y;MACS,U,GAwBP,M,CAxBF,O;MACS,U,GAuBP,M,CAvBF,O;MACa,c,GAsBX,M,CAtBF,W;MACa,c,GAqBX,M,CArBF,W;MACc,e,GAoBZ,M,CApBF,Y;MACS,U,GAmBP,M,CAnBF,O;MACc,e,GAkBZ,M,CAlBF,Y;MACU,W,GAiBR,M,CAjBF,Q;MACW,Y,GAgBT,M,CAhBF,S;MACW,Y,GAeT,M,CAfF,S;MACe,gB,GAcb,M,CAdF,a;MACW,Y,GAaT,M,CAbF,S;MACyB,0B,GAYvB,M,CAZF,uB;MACmB,oB,GAWjB,M,CAXF,iB;MAC4B,6B,GAU1B,M,CAVF,0B;MACkB,mB,GAShB,M,CATF,gB;MACkB,mB,GAQhB,M,CARF,gB;MACiB,kB,GAOf,M,CAPF,e;MAC4B,6B,GAM1B,M,CANF,0B;MACS,U,GAKP,M,CALF,O;MACU,W,GAIR,M,CAJF,Q;MACU,W,GAGR,M,CAHF,Q;MACe,gB,GAEb,M,CAFF,a;MACY,a,GACV,M,CADF,U;AAGF,SACE,UADF,EAEE,eAFF,EAGE,qBAHF,EAIE,WAJF,EAKE,aALF,EAME,YANF,EAOE,UAPF,EAQE,YARF,EASE,YATF,EAUE,eAVF,EAWE,eAXF,EAYE,mBAZF,EAaE,cAbF,EAcE,gBAdF,EAeE,WAfF,EAgBE,eAhBF,EAiBE,UAjBF,EAkBE,UAlBF,EAmBE,cAnBF,EAoBE,cApBF,EAqBE,eArBF,EAsBE,UAtBF,EAuBE,eAvBF,EAwBE,WAxBF,EAyBE,gBAzBF,EA0BE,YA1BF,EA2BE,0BA3BF,EA4BE,oBA5BF,EA6BE,6BA7BF,EA8BE,mBA9BF,EA+BE,mBA/BF,EAgCE,kBAhCF,EAiCE,6BAjCF,EAkCE,UAlCF,EAmCE,YAnCF,EAoCE,YApCF,EAqCE,WArCF,EAsCE,WAtCF,EAuCE,gBAvCF,EAwCE,aAxCF","sourcesContent":["\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n\n// Import shared functionality from tfjs-backend-cpu without triggering\n// side effects.\n// tslint:disable-next-line: no-imports-from-dist\nimport * as shared from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleBinaryKernelImpl} from '@tensorflow/tfjs-backend-cpu/dist/shared';\n// tslint:disable-next-line: no-imports-from-dist\nimport {SimpleUnaryImpl} from '@tensorflow/tfjs-backend-cpu/dist/utils/unary_types';\n\nexport type SimpleBinaryKernelImplCPU = SimpleBinaryKernelImpl;\nexport type SimpleUnaryKernelImplCPU = SimpleUnaryImpl;\nconst {\n  addImpl: addImplCPU,\n  bincountImpl: bincountImplCPU,\n  bincountReduceImpl: bincountReduceImplCPU,\n  ceilImpl: ceilImplCPU,\n  concatImpl: concatImplCPU,\n  equalImpl: equalImplCPU,\n  expImpl: expImplCPU,\n  expm1Impl: expm1ImplCPU,\n  floorImpl: floorImplCPU,\n  gatherNdImpl: gatherNdImplCPU,\n  gatherV2Impl: gatherV2ImplCPU,\n  greaterImpl: greaterImplCPU,\n  greaterEqualImpl: greaterEqualImplCPU,\n  lessImpl: lessImplCPU,\n  lessEqualImpl: lessEqualImplCPU,\n  linSpaceImpl: linSpaceImplCPU,\n  logImpl: logImplCPU,\n  maxImpl: maxImplCPU,\n  maximumImpl: maximumImplCPU,\n  minimumImpl: minimumImplCPU,\n  multiplyImpl: multiplyImplCPU,\n  negImpl: negImplCPU,\n  notEqualImpl: notEqualImplCPU,\n  prodImpl: prodImplCPU,\n  rangeImpl: rangeImplCPU,\n  rsqrtImpl: rsqrtImplCPU,\n  simpleAbsImpl: simpleAbsImplCPU,\n  sliceImpl: sliceImplCPU,\n  sparseFillEmptyRowsImpl: sparseFillEmptyRowsImplCPU,\n  sparseReshapeImpl: sparseReshapeImplCPU,\n  sparseSegmentReductionImpl: sparseSegmentReductionImplCPU,\n  stridedSliceImpl: stridedSliceImplCPU,\n  stringNGramsImpl: stringNGramsImplCPU,\n  stringSplitImpl: stringSplitImplCPU,\n  stringToHashBucketFastImpl: stringToHashBucketFastImplCPU,\n  subImpl: subImplCPU,\n  tileImpl: tileImplCPU,\n  topKImpl: topKImplCPU,\n  transposeImpl: transposeImplCPU,\n  uniqueImpl: uniqueImplCPU,\n} = shared;\n\nexport {\n  addImplCPU,\n  bincountImplCPU,\n  bincountReduceImplCPU,\n  ceilImplCPU,\n  concatImplCPU,\n  equalImplCPU,\n  expImplCPU,\n  expm1ImplCPU,\n  floorImplCPU,\n  gatherNdImplCPU,\n  gatherV2ImplCPU,\n  greaterEqualImplCPU,\n  greaterImplCPU,\n  lessEqualImplCPU,\n  lessImplCPU,\n  linSpaceImplCPU,\n  logImplCPU,\n  maxImplCPU,\n  maximumImplCPU,\n  minimumImplCPU,\n  multiplyImplCPU,\n  negImplCPU,\n  notEqualImplCPU,\n  prodImplCPU,\n  simpleAbsImplCPU,\n  sliceImplCPU,\n  sparseFillEmptyRowsImplCPU,\n  sparseReshapeImplCPU,\n  sparseSegmentReductionImplCPU,\n  stridedSliceImplCPU,\n  stringNGramsImplCPU,\n  stringSplitImplCPU,\n  stringToHashBucketFastImplCPU,\n  subImplCPU,\n  rangeImplCPU,\n  rsqrtImplCPU,\n  tileImplCPU,\n  topKImplCPU,\n  transposeImplCPU,\n  uniqueImplCPU,\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}