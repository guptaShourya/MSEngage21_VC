{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _toConsumableArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport zoomTrack from \"./utils/ZoomScreen\"; // Rooms.js - connects to Twilio video services\n\nvar Room = function Room(_ref) {\n  _s();\n\n  var roomName = _ref.roomName,\n      room = _ref.room;\n\n  // State Variables\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      participants = _useState2[0],\n      setParticipants = _useState2[1]; //participants in meeting\n\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      prevDominantSpeaker = _useState4[0],\n      setDominantSpeaker = _useState4[1]; // previous dominant speaker\n\n\n  useEffect(function () {\n    // update list when a participant joins\n    var participantConnected = function participantConnected(participant) {\n      setParticipants(function (prevParticipants) {\n        return [].concat(_toConsumableArray(prevParticipants), [participant]);\n      });\n    }; // update list when a participant leaves\n\n\n    var participantDisconnected = function participantDisconnected(participant) {\n      setParticipants(function (prevParticipants) {\n        return prevParticipants.filter(function (p) {\n          return p !== participant;\n        });\n      });\n    }; // event listeners for participant joined/left\n\n\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected); // remove the event listeners once unmounted\n\n    return function () {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]); // get remote participants\n\n  var remoteParticipants = participants.map(function (participant) {\n    return /*#__PURE__*/_jsxDEV(Participant, {\n      participant: participant\n    }, participant.sid, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, _this);\n  });\n  useCallback(function () {\n    // dominant speaker changed\n    room.on('dominantSpeakerChanged', function (participant) {\n      // reset previous dominant speaker's (if any) styling\n      if (prevDominantSpeaker !== 0) {\n        document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant');\n      } // set styling of new dominant speaker\n\n\n      document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n      setDominantSpeaker(participant.sid); // setTimeout(()=>{document.getElementById(participant.sid).setAttribute('class', 'participant');}, 3000)\n    });\n  }, [prevDominantSpeaker, room]);\n  document.title = \"ROOM - \" + roomName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room\",\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Click screen to toogle full screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"screen\",\n        onClick: zoomTrack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"local-participant\",\n      id: \"participants\",\n      children: [room ? /*#__PURE__*/_jsxDEV(Participant, {\n        participant: room.localParticipant,\n        local: true\n      }, room.localParticipant.sid, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, _this) : \"\", remoteParticipants]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Room, \"/UjoPqOCk0Pl+VCzKn0jCPxnZuE=\");\n\n_c = Room;\nexport default Room;\n\nvar _c;\n\n$RefreshReg$(_c, \"Room\");","map":{"version":3,"sources":["/Users/shouryagupta/Desktop/MS Engage 21/MSEngage21_VC/src/Room.js"],"names":["React","useCallback","useEffect","useState","Participant","Tooltip","zoomTrack","Room","roomName","room","participants","setParticipants","prevDominantSpeaker","setDominantSpeaker","participantConnected","participant","prevParticipants","participantDisconnected","filter","p","on","forEach","off","remoteParticipants","map","sid","document","getElementById","setAttribute","title","localParticipant"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\nimport Participant from \"./Participant\";\nimport Tooltip from '@material-ui/core/Tooltip';\nimport zoomTrack from \"./utils/ZoomScreen\";\n// Rooms.js - connects to Twilio video services\n\nconst Room = ({ roomName, room }) => {\n\n  // State Variables\n  const [participants, setParticipants] = useState([]); //participants in meeting\n  const [prevDominantSpeaker, setDominantSpeaker] = useState(0); // previous dominant speaker\n  useEffect(() => {\n\n    // update list when a participant joins\n    const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n    };\n\n    // update list when a participant leaves\n    const participantDisconnected = (participant) => {\n      setParticipants((prevParticipants) =>\n        prevParticipants.filter((p) => p !== participant)\n      );\n    };\n\n    // event listeners for participant joined/left\n    room.on(\"participantConnected\", participantConnected);\n    room.on(\"participantDisconnected\", participantDisconnected);\n    room.participants.forEach(participantConnected);\n\n    // remove the event listeners once unmounted\n    return () => {\n      room.off(\"participantConnected\", participantConnected);\n      room.off(\"participantDisconnected\", participantDisconnected);\n    };\n  }, [room]);\n\n  // get remote participants\n  const remoteParticipants = participants.map((participant) => (\n    <Participant key={participant.sid} participant={participant} />\n  ));\n\n  useCallback(() => {\n    // dominant speaker changed\n    room.on('dominantSpeakerChanged', (participant) => {\n      // reset previous dominant speaker's (if any) styling\n      if(prevDominantSpeaker !== 0){\n        document.getElementById(prevDominantSpeaker).setAttribute('class', 'participant'); \n      }\n      // set styling of new dominant speaker\n      document.getElementById(participant.sid).setAttribute('class', 'dominant_speaker');\n      setDominantSpeaker(participant.sid);\n      // setTimeout(()=>{document.getElementById(participant.sid).setAttribute('class', 'participant');}, 3000)\n    });\n  }, [prevDominantSpeaker, room]);\n\n  document.title = \"ROOM - \" + roomName;\n  return (\n    <div className=\"room\">\n      <Tooltip title = 'Click screen to toogle full screen'>\n        <div id = 'screen' onClick = {zoomTrack}></div>\n      </Tooltip>\n      <div className=\"local-participant\"  id = 'participants'>\n        {room ? (\n          <Participant\n            key={room.localParticipant.sid}\n            participant={room.localParticipant}\n            local = {true}\n          />\n        ) : (\n          \"\"\n        )}\n        {remoteParticipants}\n      </div>\n    </div>\n  );\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}